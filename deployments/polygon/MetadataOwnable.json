{
  "address": "0x2fDfA59b8e1fDDf0d075eD7c57632209Bdd2515F",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockFallbackURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockURISuffix",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "lockURIUntil",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newFallbackURI",
          "type": "string"
        }
      ],
      "name": "setFallbackURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "newTokenURIs",
          "type": "string[]"
        }
      ],
      "name": "setURIBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newURISuffix",
          "type": "string"
        }
      ],
      "name": "setURISuffix",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0cab4a41b29650c6b0925b125e3a08b40dddb9cca998df6c7d4417d56f9e1488",
  "receipt": {
    "to": null,
    "from": "0xB68d649F181bDE8A8FeE367535a606Cc3C09fCCd",
    "contractAddress": "0x2fDfA59b8e1fDDf0d075eD7c57632209Bdd2515F",
    "transactionIndex": 4,
    "gasUsed": "853557",
    "logsBloom": "0x
    "blockHash": "0x47db1d6a8e7d4d08880ffee0d22b99515a08f520d617bc14a86a02f07d6ad6bc",
    "transactionHash": "0x0cab4a41b29650c6b0925b125e3a08b40dddb9cca998df6c7d4417d56f9e1488",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 34005514,
        "transactionHash": "0x0cab4a41b29650c6b0925b125e3a08b40dddb9cca998df6c7d4417d56f9e1488",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b68d649f181bde8a8fee367535a606cc3c09fccd",
          "0x000000000000000000000000ec20607aa654d823dd01beb8780a44863c57ed07"
        ],
        "data": "0x000000000000000000000000000000000000000000000000012f3d9d3f52d3bf00000000000000000000000000000000000000000000000177aea78a0137409400000000000000000000000000000000000000000000010601dec4cc4854c43d000000000000000000000000000000000000000000000001767f69ecc1e46cd5000000000000000000000000000000000000000000000106030e026987a797fc",
        "logIndex": 28,
        "blockHash": "0x47db1d6a8e7d4d08880ffee0d22b99515a08f520d617bc14a86a02f07d6ad6bc"
      }
    ],
    "blockNumber": 34005514,
    "cumulativeGasUsed": "1539920",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4e9900f3555052f5b462a7e4b5e060a6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockFallbackURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockURISuffix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lockURIUntil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newFallbackURI\",\"type\":\"string\"}],\"name\":\"setFallbackURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newTokenURI\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"newTokenURIs\",\"type\":\"string[]\"}],\"name\":\"setURIBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURISuffix\",\"type\":\"string\"}],\"name\":\"setURISuffix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:category\":\"NFTs\",\"custom:peer-dependencies\":\"0x0e89341c\",\"custom:provides-interfaces\":\"0x3f963a7f\",\"custom:type\":\"eip-2535-facet\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Metadata - Admin - Ownable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/common/metadata/MetadataOwnable.sol\":\"MetadataOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1337},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"src/access/ownable/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\n/**\\n * @title Contract ownership standard interface (event only)\\n * @dev see https://eips.ethereum.org/EIPS/eip-173\\n */\\ninterface IERC173Events {\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n}\\n\",\"keccak256\":\"0xaa69cf8eab7188097d9aa84c92692ec30614ee2f6bf8d2255482162611255db4\",\"license\":\"MIT\"},\"src/access/ownable/OwnableInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./OwnableStorage.sol\\\";\\nimport \\\"./IERC173Events.sol\\\";\\n\\nabstract contract OwnableInternal is IERC173Events, Context {\\n    using OwnableStorage for OwnableStorage.Layout;\\n\\n    modifier onlyOwner() {\\n        require(_msgSender() == _owner(), \\\"Ownable: sender must be owner\\\");\\n        _;\\n    }\\n\\n    function _owner() internal view virtual returns (address) {\\n        return OwnableStorage.layout().owner;\\n    }\\n\\n    function _transferOwnership(address account) internal virtual {\\n        OwnableStorage.layout().setOwner(account);\\n        emit OwnershipTransferred(_msgSender(), account);\\n    }\\n}\\n\",\"keccak256\":\"0xa0149e5c5964ce521c9589ff1a559844eb24fd8481634dda76a3f24d6991039b\",\"license\":\"MIT\"},\"src/access/ownable/OwnableStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nlibrary OwnableStorage {\\n    struct Layout {\\n        address owner;\\n    }\\n\\n    bytes32 internal constant STORAGE_SLOT =\\n        keccak256(\\\"openzeppelin.contracts.storage.Ownable\\\");\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n\\n    function setOwner(Layout storage l, address owner) internal {\\n        l.owner = owner;\\n    }\\n}\\n\",\"keccak256\":\"0x26eea1f665c393b0046c3dcb9421f3caa1322ca996689fa0aa941eff5a1dcda2\",\"license\":\"MIT\"},\"src/token/common/metadata/IMetadataAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\ninterface IMetadataAdmin {\\n    function setBaseURI(string calldata newBaseURI) external;\\n\\n    function setFallbackURI(string calldata newFallbackURI) external;\\n\\n    function setURISuffix(string calldata newURIPrefix) external;\\n\\n    function setURI(uint256 tokenId, string calldata newTokenURI) external;\\n\\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) external;\\n\\n    function lockBaseURI() external;\\n\\n    function lockFallbackURI() external;\\n\\n    function lockURISuffix() external;\\n\\n    function lockURIUntil(uint256 tokenId) external;\\n}\\n\",\"keccak256\":\"0x42d444d5881535644f10f208cbe23d044c91ec8a742d04e312c436284508f0a8\",\"license\":\"MIT\"},\"src/token/common/metadata/IMetadataInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\ninterface IMetadataInternal {\\n    event URI(string value, uint256 indexed tokenId);\\n}\\n\",\"keccak256\":\"0x085c39b9452a681a88b28d61cac4ff5e445d9faaabb18cb2830cb51bf0515b2f\",\"license\":\"MIT\"},\"src/token/common/metadata/MetadataInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nimport \\\"./IMetadataInternal.sol\\\";\\nimport \\\"./MetadataStorage.sol\\\";\\n\\nabstract contract MetadataInternal is IMetadataInternal {\\n    function _setBaseURI(string memory baseURI) internal virtual {\\n        require(!MetadataStorage.layout().baseURILocked, \\\"Metadata: baseURI locked\\\");\\n        MetadataStorage.layout().baseURI = baseURI;\\n    }\\n\\n    function _setFallbackURI(string memory baseURI) internal virtual {\\n        require(!MetadataStorage.layout().fallbackURILocked, \\\"Metadata: fallbackURI locked\\\");\\n        MetadataStorage.layout().baseURI = baseURI;\\n    }\\n\\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\\n        require(tokenId > MetadataStorage.layout().lastLockedTokenId, \\\"Metadata: tokenURI locked\\\");\\n        MetadataStorage.layout().tokenURIs[tokenId] = tokenURI;\\n        emit URI(tokenURI, tokenId);\\n    }\\n\\n    function _setURISuffix(string memory uriSuffix) internal virtual {\\n        require(!MetadataStorage.layout().uriSuffixLocked, \\\"Metadata: uriSuffix locked\\\");\\n        MetadataStorage.layout().uriSuffix = uriSuffix;\\n    }\\n\\n    function _lockBaseURI() internal virtual {\\n        MetadataStorage.layout().baseURILocked = true;\\n    }\\n\\n    function _lockFallbackURI() internal virtual {\\n        MetadataStorage.layout().fallbackURILocked = true;\\n    }\\n\\n    function _lockURIUntil(uint256 tokenId) internal virtual {\\n        MetadataStorage.layout().lastLockedTokenId = tokenId;\\n    }\\n\\n    function _lockURISuffix() internal virtual {\\n        MetadataStorage.layout().uriSuffixLocked = true;\\n    }\\n}\\n\",\"keccak256\":\"0x594cd5dfb5cd5deb56e4d37a1a56a11422d84337e389599fa2ecdd05dddf07be\",\"license\":\"MIT\"},\"src/token/common/metadata/MetadataOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\nimport \\\"../../../access/ownable/OwnableInternal.sol\\\";\\n\\nimport \\\"./MetadataInternal.sol\\\";\\nimport \\\"./MetadataStorage.sol\\\";\\nimport \\\"./IMetadataAdmin.sol\\\";\\n\\n/**\\n * @title Metadata - Admin - Ownable\\n * @notice Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\\n *\\n * @custom:type eip-2535-facet\\n * @custom:category NFTs\\n * @custom:peer-dependencies 0x0e89341c\\n * @custom:provides-interfaces 0x3f963a7f\\n */\\ncontract MetadataOwnable is IMetadataAdmin, MetadataInternal, OwnableInternal {\\n    function setBaseURI(string calldata newBaseURI) public virtual onlyOwner {\\n        _setBaseURI(newBaseURI);\\n    }\\n\\n    function setFallbackURI(string calldata newFallbackURI) public virtual onlyOwner {\\n        _setFallbackURI(newFallbackURI);\\n    }\\n\\n    function setURISuffix(string calldata newURISuffix) public virtual onlyOwner {\\n        _setURISuffix(newURISuffix);\\n    }\\n\\n    function setURI(uint256 tokenId, string calldata newTokenURI) public virtual onlyOwner {\\n        _setURI(tokenId, newTokenURI);\\n    }\\n\\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) public virtual onlyOwner {\\n        for (uint256 i = 0; i < tokenIds.length; i++) {\\n            _setURI(tokenIds[i], newTokenURIs[i]);\\n        }\\n    }\\n\\n    function lockBaseURI() public virtual onlyOwner {\\n        _lockBaseURI();\\n    }\\n\\n    function lockFallbackURI() public virtual onlyOwner {\\n        _lockFallbackURI();\\n    }\\n\\n    function lockURISuffix() public virtual onlyOwner {\\n        _lockURISuffix();\\n    }\\n\\n    function lockURIUntil(uint256 tokenId) public virtual onlyOwner {\\n        _lockURIUntil(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x3cac69780d3f69d504718f13f5e6a75ce77da937c9d2d8ab73fa486d1cf53b80\",\"license\":\"MIT\"},\"src/token/common/metadata/MetadataStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nlibrary MetadataStorage {\\n    bytes32 internal constant STORAGE_SLOT = keccak256(\\\"v2.flair.contracts.storage.Metadata\\\");\\n\\n    struct Layout {\\n        string baseURI;\\n        bool baseURILocked;\\n        string fallbackURI;\\n        bool fallbackURILocked;\\n        string uriSuffix;\\n        bool uriSuffixLocked;\\n        uint256 lastLockedTokenId;\\n        mapping(uint256 => string) tokenURIs;\\n    }\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6c20765c8d94692d2fcda03b08820edfafe1f8b353cac774041b632953e1e7ed\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610e7c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806355f804b311610076578063862440e21161005b578063862440e214610106578063989143ee14610119578063b3dbdcde1461012c57600080fd5b806355f804b3146100e057806381b3e575146100f357600080fd5b806301b98ea0146100a85780630cf14c40146100bd57806318249af7146100c557806353df5c7c146100d8575b600080fd5b6100bb6100b6366004610aba565b610134565b005b6100bb610250565b6100bb6100d3366004610b68565b6102fc565b6100bb6103b8565b6100bb6100ee366004610b68565b610462565b6100bb610101366004610b68565b61051a565b6100bb610114366004610baa565b6105d2565b6100bb610127366004610bf6565b610690565b6100bb610734565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101b25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b83811015610249576102378585838181106101d2576101d2610c0f565b905060200201358484848181106101eb576101eb610c0f565b90506020028101906101fd9190610c25565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b8061024181610c6c565b9150506101b5565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102c95760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1ff805460ff19166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103755760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c292505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104315760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fd805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104db5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061095f92505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105935760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109d192505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461064b5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b61068b8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107095760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b610731817f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a20255565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107ad5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a201805460ff19166001179055565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a20254821161084e5760405162461bcd60e51b815260206004820152601960248201527f4d657461646174613a20746f6b656e555249206c6f636b65640000000000000060448201526064016101a9565b60008281527f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a203602052604090206108858282610d31565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b826040516108b69190610df1565b60405180910390a25050565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1ff5460ff16156109345760405162461bcd60e51b815260206004820152601c60248201527f4d657461646174613a2066616c6c6261636b555249206c6f636b65640000000060448201526064016101a9565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc6103b48282610d31565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fd5460ff16156109345760405162461bcd60e51b815260206004820152601860248201527f4d657461646174613a2062617365555249206c6f636b6564000000000000000060448201526064016101a9565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2015460ff1615610a435760405162461bcd60e51b815260206004820152601a60248201527f4d657461646174613a20757269537566666978206c6f636b656400000000000060448201526064016101a9565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2006103b48282610d31565b60008083601f840112610a8057600080fd5b50813567ffffffffffffffff811115610a9857600080fd5b6020830191508360208260051b8501011115610ab357600080fd5b9250929050565b60008060008060408587031215610ad057600080fd5b843567ffffffffffffffff80821115610ae857600080fd5b610af488838901610a6e565b90965094506020870135915080821115610b0d57600080fd5b50610b1a87828801610a6e565b95989497509550505050565b60008083601f840112610b3857600080fd5b50813567ffffffffffffffff811115610b5057600080fd5b602083019150836020828501011115610ab357600080fd5b60008060208385031215610b7b57600080fd5b823567ffffffffffffffff811115610b9257600080fd5b610b9e85828601610b26565b90969095509350505050565b600080600060408486031215610bbf57600080fd5b83359250602084013567ffffffffffffffff811115610bdd57600080fd5b610be986828701610b26565b9497909650939450505050565b600060208284031215610c0857600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610c3c57600080fd5b83018035915067ffffffffffffffff821115610c5757600080fd5b602001915036819003821315610ab357600080fd5b600060018201610c8c57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610cbd57607f821691505b602082108103610cdd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561068b57600081815260208120601f850160051c81016020861015610d0a5750805b601f850160051c820191505b81811015610d2957828155600101610d16565b505050505050565b815167ffffffffffffffff811115610d4b57610d4b610c93565b610d5f81610d598454610ca9565b84610ce3565b602080601f831160018114610d945760008415610d7c5750858301515b600019600386901b1c1916600185901b178555610d29565b600085815260208120601f198616915b82811015610dc357888601518255948401946001909101908401610da4565b5085821015610de15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015610e1e57858101830151858201604001528201610e02565b81811115610e30576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212202b092e8de386d49c01c82c91deff0d11bac6c6195890a4e4dbf48b885afc275164736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c806355f804b311610076578063862440e21161005b578063862440e214610106578063989143ee14610119578063b3dbdcde1461012c57600080fd5b806355f804b3146100e057806381b3e575146100f357600080fd5b806301b98ea0146100a85780630cf14c40146100bd57806318249af7146100c557806353df5c7c146100d8575b600080fd5b6100bb6100b6366004610aba565b610134565b005b6100bb610250565b6100bb6100d3366004610b68565b6102fc565b6100bb6103b8565b6100bb6100ee366004610b68565b610462565b6100bb610101366004610b68565b61051a565b6100bb610114366004610baa565b6105d2565b6100bb610127366004610bf6565b610690565b6100bb610734565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101b25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b83811015610249576102378585838181106101d2576101d2610c0f565b905060200201358484848181106101eb576101eb610c0f565b90506020028101906101fd9190610c25565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b8061024181610c6c565b9150506101b5565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102c95760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1ff805460ff19166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103755760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c292505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104315760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fd805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104db5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061095f92505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105935760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109d192505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461064b5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b61068b8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107095760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b610731817f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a20255565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107ad5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a201805460ff19166001179055565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a20254821161084e5760405162461bcd60e51b815260206004820152601960248201527f4d657461646174613a20746f6b656e555249206c6f636b65640000000000000060448201526064016101a9565b60008281527f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a203602052604090206108858282610d31565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b826040516108b69190610df1565b60405180910390a25050565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1ff5460ff16156109345760405162461bcd60e51b815260206004820152601c60248201527f4d657461646174613a2066616c6c6261636b555249206c6f636b65640000000060448201526064016101a9565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc6103b48282610d31565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fd5460ff16156109345760405162461bcd60e51b815260206004820152601860248201527f4d657461646174613a2062617365555249206c6f636b6564000000000000000060448201526064016101a9565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2015460ff1615610a435760405162461bcd60e51b815260206004820152601a60248201527f4d657461646174613a20757269537566666978206c6f636b656400000000000060448201526064016101a9565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2006103b48282610d31565b60008083601f840112610a8057600080fd5b50813567ffffffffffffffff811115610a9857600080fd5b6020830191508360208260051b8501011115610ab357600080fd5b9250929050565b60008060008060408587031215610ad057600080fd5b843567ffffffffffffffff80821115610ae857600080fd5b610af488838901610a6e565b90965094506020870135915080821115610b0d57600080fd5b50610b1a87828801610a6e565b95989497509550505050565b60008083601f840112610b3857600080fd5b50813567ffffffffffffffff811115610b5057600080fd5b602083019150836020828501011115610ab357600080fd5b60008060208385031215610b7b57600080fd5b823567ffffffffffffffff811115610b9257600080fd5b610b9e85828601610b26565b90969095509350505050565b600080600060408486031215610bbf57600080fd5b83359250602084013567ffffffffffffffff811115610bdd57600080fd5b610be986828701610b26565b9497909650939450505050565b600060208284031215610c0857600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610c3c57600080fd5b83018035915067ffffffffffffffff821115610c5757600080fd5b602001915036819003821315610ab357600080fd5b600060018201610c8c57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610cbd57607f821691505b602082108103610cdd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561068b57600081815260208120601f850160051c81016020861015610d0a5750805b601f850160051c820191505b81811015610d2957828155600101610d16565b505050505050565b815167ffffffffffffffff811115610d4b57610d4b610c93565b610d5f81610d598454610ca9565b84610ce3565b602080601f831160018114610d945760008415610d7c5750858301515b600019600386901b1c1916600185901b178555610d29565b600085815260208120601f198616915b82811015610dc357888601518255948401946001909101908401610da4565b5085821015610de15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015610e1e57858101830151858201604001528201610e02565b81811115610e30576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212202b092e8de386d49c01c82c91deff0d11bac6c6195890a4e4dbf48b885afc275164736f6c634300080f0033",
  "devdoc": {
    "custom:category": "NFTs",
    "custom:peer-dependencies": "0x0e89341c",
    "custom:provides-interfaces": "0x3f963a7f",
    "custom:type": "eip-2535-facet",
    "kind": "dev",
    "methods": {},
    "title": "Metadata - Admin - Ownable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}