{
  "address": "0x083dACe671Eb9D21e0314ceec565d95194191c9a",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedForwarder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x93b4b526421ade30cb79ee28f67fea6644da182f68ca0ab9ad36e08e9ae76009",
  "receipt": {
    "to": null,
    "from": "0xB68d649F181bDE8A8FeE367535a606Cc3C09fCCd",
    "contractAddress": "0x083dACe671Eb9D21e0314ceec565d95194191c9a",
    "transactionIndex": 16,
    "gasUsed": "127669",
    "logsBloom": "0x
    "blockHash": "0x61408bd2889ec67884508639ef321ec123809141e606456545538102c286b1eb",
    "transactionHash": "0x93b4b526421ade30cb79ee28f67fea6644da182f68ca0ab9ad36e08e9ae76009",
    "logs": [
      {
        "transactionIndex": 16,
        "blockNumber": 28769644,
        "transactionHash": "0x93b4b526421ade30cb79ee28f67fea6644da182f68ca0ab9ad36e08e9ae76009",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b68d649f181bde8a8fee367535a606cc3c09fccd",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000ae2be2173b000000000000000000000000000000000000000000000000001bc6456881ffb346000000000000000000000000000000000000000000000842446a8de33222f6ef0000000000000000000000000000000000000000000000001bc5973c9fe87846000000000000000000000000000000000000000000000842446b3c0f143a31ef",
        "logIndex": 75,
        "blockHash": "0x61408bd2889ec67884508639ef321ec123809141e606456545538102c286b1eb"
      }
    ],
    "blockNumber": 28769644,
    "cumulativeGasUsed": "3560971",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "bc8cb60709e10f57cad37209b5990650",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:category\":\"Meta Transactions\",\"custom:provides-interfaces\":\"IERC2771Context\",\"custom:type\":\"eip-2535-facet\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC2771 Context\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides view functions about configured trusted forwarder according to EIP-2771.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/metatx/ERC2771Context.sol\":\"ERC2771Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1337},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"src/metatx/ERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"./ERC2771ContextStorage.sol\\\";\\nimport \\\"./ERC2771ContextInternal.sol\\\";\\nimport \\\"./IERC2771Context.sol\\\";\\n\\n/**\\n * @title ERC2771 Context\\n * @notice Provides view functions about configured trusted forwarder according to EIP-2771.\\n *\\n * @custom:type eip-2535-facet\\n * @custom:category Meta Transactions\\n * @custom:provides-interfaces IERC2771Context\\n */\\ncontract ERC2771Context is IERC2771Context, ERC2771ContextInternal {\\n    using ERC2771ContextStorage for ERC2771ContextStorage.Layout;\\n\\n    function trustedForwarder() external view override returns (address) {\\n        return ERC2771ContextStorage.layout().trustedForwarder;\\n    }\\n\\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\\n        return _isTrustedForwarder(forwarder);\\n    }\\n}\\n\",\"keccak256\":\"0x727040caffd59f755d64c5dc6e219ba935ea34de486265e265a14ee52137be24\",\"license\":\"MIT\"},\"src/metatx/ERC2771ContextInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./ERC2771ContextStorage.sol\\\";\\n\\nabstract contract ERC2771ContextInternal is Context {\\n    function _isTrustedForwarder(address operator) internal view returns (bool) {\\n        return ERC2771ContextStorage.layout().trustedForwarder == operator;\\n    }\\n\\n    function _msgSender() internal view virtual override returns (address sender) {\\n        if (_isTrustedForwarder(msg.sender)) {\\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\\n            }\\n        } else {\\n            return super._msgSender();\\n        }\\n    }\\n\\n    function _msgData() internal view virtual override returns (bytes calldata) {\\n        if (_isTrustedForwarder(msg.sender)) {\\n            return msg.data[:msg.data.length - 20];\\n        } else {\\n            return super._msgData();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b78f51039de18500ce56634bfa72f8d8a0510c97dd94f175e1cbd2385d4ae37\",\"license\":\"MIT\"},\"src/metatx/ERC2771ContextStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nlibrary ERC2771ContextStorage {\\n    struct Layout {\\n        address trustedForwarder;\\n    }\\n\\n    bytes32 internal constant STORAGE_SLOT = keccak256(\\\"openzeppelin.contracts.storage.ERC2771Context\\\");\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdb2e9e2c6145ecf4aae84a602ff668269869da26b25924e9b486b5e94936740e\",\"license\":\"MIT\"},\"src/metatx/IERC2771Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\ninterface IERC2771Context {\\n    function trustedForwarder() external view returns (address);\\n\\n    function isTrustedForwarder(address forwarder) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x0daedab94060595fa25a1ae0a4450e5732b6e0f1b45c6396c537d10f9b40b542\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610158806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063572b6c051461003b5780637da0a8771461009e575b600080fd5b6100896100493660046100e5565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b60405190151581526020015b60405180910390f35b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610095565b6000602082840312156100f757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461011b57600080fd5b939250505056fea264697066735822122009fb7418942c8f3c86a55d72104e5feed7c9dbfdf94587d92eda99ba4ab6152464736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063572b6c051461003b5780637da0a8771461009e575b600080fd5b6100896100493660046100e5565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b60405190151581526020015b60405180910390f35b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610095565b6000602082840312156100f757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461011b57600080fd5b939250505056fea264697066735822122009fb7418942c8f3c86a55d72104e5feed7c9dbfdf94587d92eda99ba4ab6152464736f6c634300080f0033",
  "devdoc": {
    "custom:category": "Meta Transactions",
    "custom:provides-interfaces": "IERC2771Context",
    "custom:type": "eip-2535-facet",
    "kind": "dev",
    "methods": {},
    "title": "ERC2771 Context",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Provides view functions about configured trusted forwarder according to EIP-2771.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}