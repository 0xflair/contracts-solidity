{
  "address": "0x37612c9c923359a4273d22d6aba6b7e410dd2201",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockFallbackURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockNameAndSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockURISuffix",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "lockURIUntil",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newFallbackURI",
          "type": "string"
        }
      ],
      "name": "setFallbackURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "setSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "newTokenURIs",
          "type": "string[]"
        }
      ],
      "name": "setURIBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newURISuffix",
          "type": "string"
        }
      ],
      "name": "setURISuffix",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbcb76d2b929387fbc0c7f7f24ab5da7d057434d1429a1761f94f63b9ac3fa4a1",
  "receipt": {
    "to": null,
    "from": "0xb68d649f181bde8a8fee367535a606cc3c09fccd",
    "contractAddress": "0x37612c9c923359a4273d22d6aba6b7e410dd2201",
    "transactionIndex": "0x1a",
    "gasUsed": "0x106fc4",
    "logsBloom": "0x
    "blockHash": "0xf8b1145a6022f422b62346f24fc6aa2be17e830271aa7d09e164e1ad414bc293",
    "transactionHash": "0xbcb76d2b929387fbc0c7f7f24ab5da7d057434d1429a1761f94f63b9ac3fa4a1",
    "logs": [],
    "blockNumber": "0x76463f",
    "cumulativeGasUsed": "0x76a216",
    "status": "0x1"
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "c858a448819080c90ca5e76e616d60ab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockFallbackURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockURISuffix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lockURIUntil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newFallbackURI\",\"type\":\"string\"}],\"name\":\"setFallbackURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"setSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newTokenURI\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"newTokenURIs\",\"type\":\"string[]\"}],\"name\":\"setURIBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURISuffix\",\"type\":\"string\"}],\"name\":\"setURISuffix\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:category\":\"NFTs\",\"custom:peer-dependencies\":\"IMetadata\",\"custom:provides-interfaces\":\"IMetadataAdmin\",\"custom:type\":\"eip-2535-facet\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Metadata - Admin - Ownable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/common/metadata/MetadataOwnable.sol\":\"MetadataOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1337},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"src/access/ownable/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\n/**\\n * @title Contract ownership standard interface (event only)\\n * @dev see https://eips.ethereum.org/EIPS/eip-173\\n */\\ninterface IERC173Events {\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n}\\n\",\"keccak256\":\"0xe2a19d82d7050c0cd1afb542253f65ce34a650d7d99c0ffcdec6b4274fc51e31\",\"license\":\"MIT\"},\"src/access/ownable/OwnableInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./OwnableStorage.sol\\\";\\nimport \\\"./IERC173Events.sol\\\";\\n\\nabstract contract OwnableInternal is IERC173Events, Context {\\n    using OwnableStorage for OwnableStorage.Layout;\\n\\n    modifier onlyOwner() {\\n        require(_msgSender() == _owner(), \\\"Ownable: sender must be owner\\\");\\n        _;\\n    }\\n\\n    function _owner() internal view virtual returns (address) {\\n        return OwnableStorage.layout().owner;\\n    }\\n\\n    function _transferOwnership(address account) internal virtual {\\n        OwnableStorage.layout().setOwner(account);\\n        emit OwnershipTransferred(_msgSender(), account);\\n    }\\n}\\n\",\"keccak256\":\"0x1f1b08cba51a05c8cea04e13251f9f8b8fc895017071cb205b0b4170900d1e5b\",\"license\":\"MIT\"},\"src/access/ownable/OwnableStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nlibrary OwnableStorage {\\n    struct Layout {\\n        address owner;\\n    }\\n\\n    bytes32 internal constant STORAGE_SLOT = keccak256(\\\"openzeppelin.contracts.storage.Ownable\\\");\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n\\n    function setOwner(Layout storage l, address owner) internal {\\n        l.owner = owner;\\n    }\\n}\\n\",\"keccak256\":\"0xaf69959fcc5b87a74426939bc35b8517566494e3ba575b5cfdb1b5c788c0636a\",\"license\":\"MIT\"},\"src/token/common/metadata/IMetadataAdmin.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\ninterface IMetadataAdmin {\\n    function setName(string calldata name) external;\\n\\n    function setSymbol(string calldata symbol) external;\\n\\n    function lockNameAndSymbol() external;\\n\\n    function setBaseURI(string calldata newBaseURI) external;\\n\\n    function setFallbackURI(string calldata newFallbackURI) external;\\n\\n    function setURISuffix(string calldata newURIPrefix) external;\\n\\n    function setURI(uint256 tokenId, string calldata newTokenURI) external;\\n\\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) external;\\n\\n    function lockBaseURI() external;\\n\\n    function lockFallbackURI() external;\\n\\n    function lockURISuffix() external;\\n\\n    function lockURIUntil(uint256 tokenId) external;\\n}\\n\",\"keccak256\":\"0x60d3372fab301dc07a9a08faeca73f624a8c58f2bbaa6b433f0d7c99dd05a13c\",\"license\":\"MIT\"},\"src/token/common/metadata/IMetadataInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\ninterface IMetadataInternal {\\n    event URI(string value, uint256 indexed tokenId);\\n}\\n\",\"keccak256\":\"0x6501a7fa3519bbce78a940629c89859877a109d4e8f7fd23da3e8d9ec3ce263a\",\"license\":\"MIT\"},\"src/token/common/metadata/MetadataAdminInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"./IMetadataInternal.sol\\\";\\nimport \\\"./MetadataStorage.sol\\\";\\n\\nabstract contract MetadataAdminInternal is IMetadataInternal {\\n    function _setName(string calldata name) internal {\\n        require(!MetadataStorage.layout().nameAndSymbolLocked, \\\"Metadata: name is locked\\\");\\n        MetadataStorage.layout().name = name;\\n    }\\n\\n    function _setSymbol(string calldata symbol) internal {\\n        require(!MetadataStorage.layout().nameAndSymbolLocked, \\\"Metadata: symbol is locked\\\");\\n        MetadataStorage.layout().symbol = symbol;\\n    }\\n\\n    function _lockNameAndSymbol() internal {\\n        MetadataStorage.layout().nameAndSymbolLocked = true;\\n    }\\n\\n    function _setBaseURI(string memory baseURI) internal virtual {\\n        require(!MetadataStorage.layout().baseURILocked, \\\"Metadata: baseURI locked\\\");\\n        MetadataStorage.layout().baseURI = baseURI;\\n    }\\n\\n    function _setFallbackURI(string memory baseURI) internal virtual {\\n        require(!MetadataStorage.layout().fallbackURILocked, \\\"Metadata: fallbackURI locked\\\");\\n        MetadataStorage.layout().baseURI = baseURI;\\n    }\\n\\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\\n        require(tokenId <= MetadataStorage.layout().lastLockedTokenId, \\\"Metadata: tokenURI locked\\\");\\n        MetadataStorage.layout().tokenURIs[tokenId] = tokenURI;\\n        emit URI(tokenURI, tokenId);\\n    }\\n\\n    function _setURISuffix(string memory uriSuffix) internal virtual {\\n        require(!MetadataStorage.layout().uriSuffixLocked, \\\"Metadata: uriSuffix locked\\\");\\n        MetadataStorage.layout().uriSuffix = uriSuffix;\\n    }\\n\\n    function _lockBaseURI() internal virtual {\\n        MetadataStorage.layout().baseURILocked = true;\\n    }\\n\\n    function _lockFallbackURI() internal virtual {\\n        MetadataStorage.layout().fallbackURILocked = true;\\n    }\\n\\n    function _lockURIUntil(uint256 tokenId) internal virtual {\\n        MetadataStorage.layout().lastLockedTokenId = tokenId;\\n    }\\n\\n    function _lockURISuffix() internal virtual {\\n        MetadataStorage.layout().uriSuffixLocked = true;\\n    }\\n}\\n\",\"keccak256\":\"0x1ae218a9c3715e840b5b9af1a1d095cdf8a00676c47fd79996be3d59a6220d39\",\"license\":\"MIT\"},\"src/token/common/metadata/MetadataOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\nimport \\\"../../../access/ownable/OwnableInternal.sol\\\";\\n\\nimport \\\"./MetadataAdminInternal.sol\\\";\\nimport \\\"./MetadataStorage.sol\\\";\\nimport \\\"./IMetadataAdmin.sol\\\";\\n\\n/**\\n * @title Metadata - Admin - Ownable\\n * @notice Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\\n *\\n * @custom:type eip-2535-facet\\n * @custom:category NFTs\\n * @custom:peer-dependencies IMetadata\\n * @custom:provides-interfaces IMetadataAdmin\\n */\\ncontract MetadataOwnable is IMetadataAdmin, MetadataAdminInternal, OwnableInternal {\\n    function setName(string calldata name) external virtual override onlyOwner {\\n        _setName(name);\\n    }\\n\\n    function setSymbol(string calldata symbol) external virtual override onlyOwner {\\n        _setSymbol(symbol);\\n    }\\n\\n    function lockNameAndSymbol() external virtual override onlyOwner {\\n        _lockNameAndSymbol();\\n    }\\n\\n    function setBaseURI(string calldata newBaseURI) public virtual onlyOwner {\\n        _setBaseURI(newBaseURI);\\n    }\\n\\n    function setFallbackURI(string calldata newFallbackURI) public virtual onlyOwner {\\n        _setFallbackURI(newFallbackURI);\\n    }\\n\\n    function setURISuffix(string calldata newURISuffix) public virtual onlyOwner {\\n        _setURISuffix(newURISuffix);\\n    }\\n\\n    function setURI(uint256 tokenId, string calldata newTokenURI) public virtual onlyOwner {\\n        _setURI(tokenId, newTokenURI);\\n    }\\n\\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) public virtual onlyOwner {\\n        for (uint256 i = 0; i < tokenIds.length; i++) {\\n            _setURI(tokenIds[i], newTokenURIs[i]);\\n        }\\n    }\\n\\n    function lockBaseURI() public virtual onlyOwner {\\n        _lockBaseURI();\\n    }\\n\\n    function lockFallbackURI() public virtual onlyOwner {\\n        _lockFallbackURI();\\n    }\\n\\n    function lockURISuffix() public virtual onlyOwner {\\n        _lockURISuffix();\\n    }\\n\\n    function lockURIUntil(uint256 tokenId) public virtual onlyOwner {\\n        _lockURIUntil(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x3ab6ba17faac430340906c7ef716d6ee76c876dfde0d12b0b3fc7e4a7a30e423\",\"license\":\"MIT\"},\"src/token/common/metadata/MetadataStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.15;\\n\\nlibrary MetadataStorage {\\n    bytes32 internal constant STORAGE_SLOT = keccak256(\\\"v2.flair.contracts.storage.Metadata\\\");\\n\\n    struct Layout {\\n        string name;\\n        string symbol;\\n        bool nameAndSymbolLocked;\\n        string baseURI;\\n        bool baseURILocked;\\n        string fallbackURI;\\n        bool fallbackURILocked;\\n        string uriSuffix;\\n        bool uriSuffixLocked;\\n        uint256 lastLockedTokenId;\\n        mapping(uint256 => string) tokenURIs;\\n    }\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc5db4300cea5c783b3aec9ff69d4b7a0c624457a3f0571a5379248beb29f0637\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611288806100206000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806381b3e57511610081578063b3dbdcde1161005b578063b3dbdcde14610165578063b84c82461461016d578063c47f00271461018057600080fd5b806381b3e5751461012c578063862440e21461013f578063989143ee1461015257600080fd5b806353df5c7c116100b257806353df5c7c1461010957806355f804b3146101115780636338cb8a1461012457600080fd5b806301b98ea0146100d95780630cf14c40146100ee57806318249af7146100f6575b600080fd5b6100ec6100e7366004610e06565b610193565b005b6100ec6102af565b6100ec610104366004610eb4565b61035b565b6100ec610417565b6100ec61011f366004610eb4565b6104c1565b6100ec610579565b6100ec61013a366004610eb4565b610623565b6100ec61014d366004610ef6565b6106db565b6100ec610160366004610f42565b610799565b6100ec61083d565b6100ec61017b366004610eb4565b6108e7565b6100ec61018e366004610eb4565b61096a565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102115760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b838110156102a85761029685858381811061023157610231610f5b565b9050602002013584848481811061024a5761024a610f5b565b905060200281019061025c9190610f71565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109ed92505050565b806102a081610fb8565b915050610214565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103285760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b6103597f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a202805460ff19166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103d45760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b61041382828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610ad292505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104905760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b6103597f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a200805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461053a5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b61041382828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b6f92505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105f25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b6103597f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fe805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461069c5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b61041382828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610be192505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107545760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b6107948383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109ed92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146108125760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b61083a817f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a20555565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146108b65760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b6103597f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a204805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146109605760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b6104138282610c7e565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146109e35760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610208565b6104138282610d1c565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a20554821115610a5e5760405162461bcd60e51b815260206004820152601960248201527f4d657461646174613a20746f6b656e555249206c6f636b6564000000000000006044820152606401610208565b60008281527f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a20660205260409020610a95828261107d565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b82604051610ac6919061113d565b60405180910390a25050565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2025460ff1615610b445760405162461bcd60e51b815260206004820152601c60248201527f4d657461646174613a2066616c6c6261636b555249206c6f636b6564000000006044820152606401610208565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1ff610413828261107d565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2005460ff1615610b445760405162461bcd60e51b815260206004820152601860248201527f4d657461646174613a2062617365555249206c6f636b656400000000000000006044820152606401610208565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2045460ff1615610c535760405162461bcd60e51b815260206004820152601a60248201527f4d657461646174613a20757269537566666978206c6f636b65640000000000006044820152606401610208565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a203610413828261107d565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fe5460ff1615610cf05760405162461bcd60e51b815260206004820152601a60248201527f4d657461646174613a2073796d626f6c206973206c6f636b65640000000000006044820152606401610208565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fd610794828483611192565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fe5460ff1615610d8e5760405162461bcd60e51b815260206004820152601860248201527f4d657461646174613a206e616d65206973206c6f636b656400000000000000006044820152606401610208565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc610794828483611192565b60008083601f840112610dcc57600080fd5b50813567ffffffffffffffff811115610de457600080fd5b6020830191508360208260051b8501011115610dff57600080fd5b9250929050565b60008060008060408587031215610e1c57600080fd5b843567ffffffffffffffff80821115610e3457600080fd5b610e4088838901610dba565b90965094506020870135915080821115610e5957600080fd5b50610e6687828801610dba565b95989497509550505050565b60008083601f840112610e8457600080fd5b50813567ffffffffffffffff811115610e9c57600080fd5b602083019150836020828501011115610dff57600080fd5b60008060208385031215610ec757600080fd5b823567ffffffffffffffff811115610ede57600080fd5b610eea85828601610e72565b90969095509350505050565b600080600060408486031215610f0b57600080fd5b83359250602084013567ffffffffffffffff811115610f2957600080fd5b610f3586828701610e72565b9497909650939450505050565b600060208284031215610f5457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610f8857600080fd5b83018035915067ffffffffffffffff821115610fa357600080fd5b602001915036819003821315610dff57600080fd5b600060018201610fd857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061100957607f821691505b60208210810361102957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561079457600081815260208120601f850160051c810160208610156110565750805b601f850160051c820191505b8181101561107557828155600101611062565b505050505050565b815167ffffffffffffffff81111561109757611097610fdf565b6110ab816110a58454610ff5565b8461102f565b602080601f8311600181146110e057600084156110c85750858301515b600019600386901b1c1916600185901b178555611075565b600085815260208120601f198616915b8281101561110f578886015182559484019460019091019084016110f0565b508582101561112d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b8181101561116a5785810183015185820160400152820161114e565b8181111561117c576000604083870101525b50601f01601f1916929092016040019392505050565b67ffffffffffffffff8311156111aa576111aa610fdf565b6111be836111b88354610ff5565b8361102f565b6000601f8411600181146111f257600085156111da5750838201355b600019600387901b1c1916600186901b1783556102a8565b600083815260209020601f19861690835b828110156112235786850135825560209485019460019092019101611203565b50868210156112405760001960f88860031b161c19848701351681555b505060018560011b018355505050505056fea26469706673582212208e6c8d030855a7934073920ce19175e1089562d91d94e5d0dbf99ad5e37ef5e464736f6c634300080f0033",
  "deployedBytecode": "",
  "devdoc": {
    "custom:category": "NFTs",
    "custom:peer-dependencies": "IMetadata",
    "custom:provides-interfaces": "IMetadataAdmin",
    "custom:type": "eip-2535-facet",
    "kind": "dev",
    "methods": {},
    "title": "Metadata - Admin - Ownable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}