{
  "address": "0xabc57489ea22568772A65A88F57489cEa8638f89",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockFallbackURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "lockURIUntil",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newBaseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newFallbackURI",
          "type": "string"
        }
      ],
      "name": "setFallbackURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "newTokenURI",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "tokenIds",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "newTokenURIs",
          "type": "string[]"
        }
      ],
      "name": "setURIBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1a93d1904cd7757c8107ebe86a8c47c35d91ac8ec5bd709e13043bef44f40ef1",
  "receipt": {
    "to": null,
    "from": "0xB68d649F181bDE8A8FeE367535a606Cc3C09fCCd",
    "contractAddress": "0xabc57489ea22568772A65A88F57489cEa8638f89",
    "transactionIndex": 15,
    "gasUsed": "738746",
    "logsBloom": "0x
    "blockHash": "0x237629cf44e15920890e13da9b99fb477f5ac2cf206f60f235b78fda3795c379",
    "transactionHash": "0x1a93d1904cd7757c8107ebe86a8c47c35d91ac8ec5bd709e13043bef44f40ef1",
    "logs": [],
    "blockNumber": 11374417,
    "cumulativeGasUsed": "2027922",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "77c57fe1b070bde9230f9aac838c5506",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockFallbackURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"lockURIUntil\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newFallbackURI\",\"type\":\"string\"}],\"name\":\"setFallbackURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newTokenURI\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"newTokenURIs\",\"type\":\"string[]\"}],\"name\":\"setURIBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:facet\":\"@custom:dependency contracts/token/ERC1155/facets/metadata/ERC1155Metadata.sol\",\"details\":\"See https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC1155 - Metadata Extension - Admin - Ownable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC1155/plugins/metadata/ERC1155MetadataOwnable.sol\":\"ERC1155MetadataOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1337},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"contracts/access/ownable/IERC173Events.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\n/**\\n * @title Contract ownership standard interface (event only)\\n * @dev see https://eips.ethereum.org/EIPS/eip-173\\n */\\ninterface IERC173Events {\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n}\\n\",\"keccak256\":\"0xaa69cf8eab7188097d9aa84c92692ec30614ee2f6bf8d2255482162611255db4\",\"license\":\"MIT\"},\"contracts/access/ownable/OwnableInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./OwnableStorage.sol\\\";\\nimport \\\"./IERC173Events.sol\\\";\\n\\nabstract contract OwnableInternal is IERC173Events, Context {\\n    using OwnableStorage for OwnableStorage.Layout;\\n\\n    modifier onlyOwner() {\\n        require(_msgSender() == _owner(), \\\"Ownable: sender must be owner\\\");\\n        _;\\n    }\\n\\n    function _owner() internal view virtual returns (address) {\\n        return OwnableStorage.layout().owner;\\n    }\\n\\n    function _transferOwnership(address account) internal virtual {\\n        OwnableStorage.layout().setOwner(account);\\n        emit OwnershipTransferred(_msgSender(), account);\\n    }\\n}\\n\",\"keccak256\":\"0xa0149e5c5964ce521c9589ff1a559844eb24fd8481634dda76a3f24d6991039b\",\"license\":\"MIT\"},\"contracts/access/ownable/OwnableStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nlibrary OwnableStorage {\\n    struct Layout {\\n        address owner;\\n    }\\n\\n    bytes32 internal constant STORAGE_SLOT =\\n        keccak256(\\\"openzeppelin.contracts.storage.Ownable\\\");\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n\\n    function setOwner(Layout storage l, address owner) internal {\\n        l.owner = owner;\\n    }\\n}\\n\",\"keccak256\":\"0x26eea1f665c393b0046c3dcb9421f3caa1322ca996689fa0aa941eff5a1dcda2\",\"license\":\"MIT\"},\"contracts/token/ERC1155/plugins/metadata/ERC1155MetadataInternal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nimport \\\"./IERC1155MetadataEvents.sol\\\";\\nimport \\\"./ERC1155MetadataStorage.sol\\\";\\n\\nabstract contract ERC1155MetadataInternal is IERC1155MetadataEvents {\\n    function _setBaseURI(string memory baseURI) internal {\\n        require(\\n            !ERC1155MetadataStorage.layout().baseURILocked,\\n            \\\"ERC1155Metadata: baseURI locked\\\"\\n        );\\n        ERC1155MetadataStorage.layout().baseURI = baseURI;\\n    }\\n\\n    function _setFallbackURI(string memory baseURI) internal {\\n        require(\\n            !ERC1155MetadataStorage.layout().fallbackURILocked,\\n            \\\"ERC1155Metadata: fallbackURI locked\\\"\\n        );\\n        ERC1155MetadataStorage.layout().baseURI = baseURI;\\n    }\\n\\n    function _setURI(uint256 tokenId, string memory tokenURI) internal {\\n        require(\\n            tokenId > ERC1155MetadataStorage.layout().lastLockedTokenId,\\n            \\\"ERC1155Metadata: tokenURI locked\\\"\\n        );\\n        ERC1155MetadataStorage.layout().tokenURIs[tokenId] = tokenURI;\\n        emit URI(tokenURI, tokenId);\\n    }\\n\\n    function _lockBaseURI() internal {\\n        ERC1155MetadataStorage.layout().baseURILocked = true;\\n    }\\n\\n    function _lockFallbackURI() internal {\\n        ERC1155MetadataStorage.layout().fallbackURILocked = true;\\n    }\\n\\n    function _lockURIUntil(uint256 tokenId) internal {\\n        ERC1155MetadataStorage.layout().lastLockedTokenId = tokenId;\\n    }\\n}\\n\",\"keccak256\":\"0xe77919e5dd2c400c34799ec95531e24a4a71a3b994f6eb5bbbb749bc7f666c17\",\"license\":\"MIT\"},\"contracts/token/ERC1155/plugins/metadata/ERC1155MetadataOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\n\\nimport \\\"../../../../access/ownable/OwnableInternal.sol\\\";\\n\\nimport \\\"./ERC1155MetadataInternal.sol\\\";\\nimport \\\"./ERC1155MetadataStorage.sol\\\";\\n\\n/**\\n * @title ERC1155 - Metadata Extension - Admin - Ownable\\n * @notice Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\\n * @dev See https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions\\n *\\n * @custom:facet\\n * @custom:dependency contracts/token/ERC1155/facets/metadata/ERC1155Metadata.sol\\n */\\ncontract ERC1155MetadataOwnable is ERC1155MetadataInternal, OwnableInternal {\\n    function setBaseURI(string calldata newBaseURI) public onlyOwner {\\n        _setBaseURI(newBaseURI);\\n    }\\n\\n    function setFallbackURI(string calldata newFallbackURI) public onlyOwner {\\n        _setFallbackURI(newFallbackURI);\\n    }\\n\\n    function setURI(uint256 tokenId, string calldata newTokenURI) public onlyOwner {\\n        _setURI(tokenId, newTokenURI);\\n    }\\n\\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) public onlyOwner {\\n        for (uint256 i = 0; i < tokenIds.length; i++) {\\n            _setURI(tokenIds[i], newTokenURIs[i]);\\n        }\\n    }\\n\\n    function lockBaseURI() public onlyOwner {\\n        _lockBaseURI();\\n    }\\n\\n    function lockFallbackURI() public onlyOwner {\\n        _lockFallbackURI();\\n    }\\n\\n    function lockURIUntil(uint256 tokenId) public onlyOwner {\\n        _lockURIUntil(tokenId);\\n    }\\n}\\n\",\"keccak256\":\"0x3e87aeb12551cf812059ad6090cc1a002aa630d6d00b36d40c8c47494b17f293\",\"license\":\"MIT\"},\"contracts/token/ERC1155/plugins/metadata/ERC1155MetadataStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nlibrary ERC1155MetadataStorage {\\n    bytes32 internal constant STORAGE_SLOT = keccak256(\\\"v2.flair.contracts.storage.ERC1155Metadata\\\");\\n\\n    struct Layout {\\n        string baseURI;\\n        string fallbackURI;\\n        bool baseURILocked;\\n        bool fallbackURILocked;\\n        uint256 lastLockedTokenId;\\n        mapping(uint256 => string) tokenURIs;\\n    }\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x53fcdae851ca8d9b6adcb99756d9e0ea2560d27224daf3e8ad701b9ed96c5d23\",\"license\":\"MIT\"},\"contracts/token/ERC1155/plugins/metadata/IERC1155MetadataEvents.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\ninterface IERC1155MetadataEvents {\\n    event URI(string value, uint256 indexed tokenId);\\n}\\n\",\"keccak256\":\"0x6c2413e5d685f420399db32888a545321422521fb5e4ffb72de3c5e53cbd503c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610c69806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806353df5c7c1161005b57806353df5c7c146100b257806355f804b3146100ba578063862440e2146100cd578063989143ee146100e057600080fd5b806301b98ea0146100825780630cf14c401461009757806318249af71461009f575b600080fd5b6100956100903660046108a7565b6100f3565b005b61009561020f565b6100956100ad366004610955565b6102bd565b610095610379565b6100956100c8366004610955565b610423565b6100956100db366004610997565b6104db565b6100956100ee3660046109e3565b610599565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101715760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b83811015610208576101f6858583818110610191576101916109fc565b905060200201358484848181106101aa576101aa6109fc565b90506020028101906101bc9190610a12565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063d92505050565b8061020081610a59565b915050610174565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102885760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b6102bb7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed805461ff001916610100179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103365760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b61037582828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061072192505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103f25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b6102bb7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461049c5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b61037582828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107e992505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105545760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b6105948383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063d92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146106125760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b61063a817f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee55565b50565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5482116106ad5760405162461bcd60e51b815260206004820181905260248201527f455243313135354d657461646174613a20746f6b656e555249206c6f636b65646044820152606401610168565b60008281527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceef602052604090206106e48282610b1e565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b826040516107159190610bde565b60405180910390a25050565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed54610100900460ff16156107be5760405162461bcd60e51b815260206004820152602360248201527f455243313135354d657461646174613a2066616c6c6261636b555249206c6f6360448201527f6b656400000000000000000000000000000000000000000000000000000000006064820152608401610168565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb6103758282610b1e565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed5460ff16156107be5760405162461bcd60e51b815260206004820152601f60248201527f455243313135354d657461646174613a2062617365555249206c6f636b6564006044820152606401610168565b60008083601f84011261086d57600080fd5b50813567ffffffffffffffff81111561088557600080fd5b6020830191508360208260051b85010111156108a057600080fd5b9250929050565b600080600080604085870312156108bd57600080fd5b843567ffffffffffffffff808211156108d557600080fd5b6108e18883890161085b565b909650945060208701359150808211156108fa57600080fd5b506109078782880161085b565b95989497509550505050565b60008083601f84011261092557600080fd5b50813567ffffffffffffffff81111561093d57600080fd5b6020830191508360208285010111156108a057600080fd5b6000806020838503121561096857600080fd5b823567ffffffffffffffff81111561097f57600080fd5b61098b85828601610913565b90969095509350505050565b6000806000604084860312156109ac57600080fd5b83359250602084013567ffffffffffffffff8111156109ca57600080fd5b6109d686828701610913565b9497909650939450505050565b6000602082840312156109f557600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610a2957600080fd5b83018035915067ffffffffffffffff821115610a4457600080fd5b6020019150368190038213156108a057600080fd5b600060018201610a7957634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610aaa57607f821691505b602082108103610aca57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561059457600081815260208120601f850160051c81016020861015610af75750805b601f850160051c820191505b81811015610b1657828155600101610b03565b505050505050565b815167ffffffffffffffff811115610b3857610b38610a80565b610b4c81610b468454610a96565b84610ad0565b602080601f831160018114610b815760008415610b695750858301515b600019600386901b1c1916600185901b178555610b16565b600085815260208120601f198616915b82811015610bb057888601518255948401946001909101908401610b91565b5085821015610bce5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015610c0b57858101830151858201604001528201610bef565b81811115610c1d576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122064e2e65c9a19034648645b9b75a3ed18cd05a8780e8b5f773f64fff21eebc32c64736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806353df5c7c1161005b57806353df5c7c146100b257806355f804b3146100ba578063862440e2146100cd578063989143ee146100e057600080fd5b806301b98ea0146100825780630cf14c401461009757806318249af71461009f575b600080fd5b6100956100903660046108a7565b6100f3565b005b61009561020f565b6100956100ad366004610955565b6102bd565b610095610379565b6100956100c8366004610955565b610423565b6100956100db366004610997565b6104db565b6100956100ee3660046109e3565b610599565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101715760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b83811015610208576101f6858583818110610191576101916109fc565b905060200201358484848181106101aa576101aa6109fc565b90506020028101906101bc9190610a12565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063d92505050565b8061020081610a59565b915050610174565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102885760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b6102bb7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed805461ff001916610100179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103365760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b61037582828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061072192505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103f25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b6102bb7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461049c5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b61037582828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107e992505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105545760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b6105948383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063d92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146106125760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610168565b61063a817f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee55565b50565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5482116106ad5760405162461bcd60e51b815260206004820181905260248201527f455243313135354d657461646174613a20746f6b656e555249206c6f636b65646044820152606401610168565b60008281527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceef602052604090206106e48282610b1e565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b826040516107159190610bde565b60405180910390a25050565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed54610100900460ff16156107be5760405162461bcd60e51b815260206004820152602360248201527f455243313135354d657461646174613a2066616c6c6261636b555249206c6f6360448201527f6b656400000000000000000000000000000000000000000000000000000000006064820152608401610168565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb6103758282610b1e565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceed5460ff16156107be5760405162461bcd60e51b815260206004820152601f60248201527f455243313135354d657461646174613a2062617365555249206c6f636b6564006044820152606401610168565b60008083601f84011261086d57600080fd5b50813567ffffffffffffffff81111561088557600080fd5b6020830191508360208260051b85010111156108a057600080fd5b9250929050565b600080600080604085870312156108bd57600080fd5b843567ffffffffffffffff808211156108d557600080fd5b6108e18883890161085b565b909650945060208701359150808211156108fa57600080fd5b506109078782880161085b565b95989497509550505050565b60008083601f84011261092557600080fd5b50813567ffffffffffffffff81111561093d57600080fd5b6020830191508360208285010111156108a057600080fd5b6000806020838503121561096857600080fd5b823567ffffffffffffffff81111561097f57600080fd5b61098b85828601610913565b90969095509350505050565b6000806000604084860312156109ac57600080fd5b83359250602084013567ffffffffffffffff8111156109ca57600080fd5b6109d686828701610913565b9497909650939450505050565b6000602082840312156109f557600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610a2957600080fd5b83018035915067ffffffffffffffff821115610a4457600080fd5b6020019150368190038213156108a057600080fd5b600060018201610a7957634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610aaa57607f821691505b602082108103610aca57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561059457600081815260208120601f850160051c81016020861015610af75750805b601f850160051c820191505b81811015610b1657828155600101610b03565b505050505050565b815167ffffffffffffffff811115610b3857610b38610a80565b610b4c81610b468454610a96565b84610ad0565b602080601f831160018114610b815760008415610b695750858301515b600019600386901b1c1916600185901b178555610b16565b600085815260208120601f198616915b82811015610bb057888601518255948401946001909101908401610b91565b5085821015610bce5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015610c0b57858101830151858201604001528201610bef565b81811115610c1d576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122064e2e65c9a19034648645b9b75a3ed18cd05a8780e8b5f773f64fff21eebc32c64736f6c634300080f0033",
  "devdoc": {
    "custom:facet": "@custom:dependency contracts/token/ERC1155/facets/metadata/ERC1155Metadata.sol",
    "details": "See https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions",
    "kind": "dev",
    "methods": {},
    "title": "ERC1155 - Metadata Extension - Admin - Ownable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}