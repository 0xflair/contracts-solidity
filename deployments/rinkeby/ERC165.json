{
  "address": "0xF161D7f77d5d57179ED534d6C82D1F8441804632",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xca2b1e6119669df1db1a324efcad6aa23725b27a8c540bbcba39b133eb0116a5",
  "receipt": {
    "to": null,
    "from": "0xB68d649F181bDE8A8FeE367535a606Cc3C09fCCd",
    "contractAddress": "0xF161D7f77d5d57179ED534d6C82D1F8441804632",
    "transactionIndex": 8,
    "gasUsed": "105039",
    "logsBloom": "0x
    "blockHash": "0x282e578297c98ec972c6ed85ef2607a3b76507f4cc43dd3695b9a2101320b9d1",
    "transactionHash": "0xca2b1e6119669df1db1a324efcad6aa23725b27a8c540bbcba39b133eb0116a5",
    "logs": [],
    "blockNumber": 11362531,
    "cumulativeGasUsed": "2699950",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "ffc6e07a79fa964cefe1c357bb110a4e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}}},\"title\":\"ERC165 implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/features/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[]},\"sources\":{\"contracts/features/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\nimport {ERC165Storage} from \\\"./ERC165Storage.sol\\\";\\n\\n/**\\n * @title ERC165 implementation\\n */\\ncontract ERC165 is IERC165 {\\n    using ERC165Storage for ERC165Storage.Layout;\\n\\n    /**\\n     * @inheritdoc IERC165\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\\n        return ERC165Storage.layout().isSupportedInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0x311e725298fc8c5f83096237feda26aa3af3ce7042e90bfda45cfa8ef7f4705d\",\"license\":\"MIT\"},\"contracts/features/introspection/ERC165Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\nlibrary ERC165Storage {\\n    struct Layout {\\n        mapping(bytes4 => bool) supportedInterfaces;\\n    }\\n\\n    bytes32 internal constant STORAGE_SLOT =\\n        keccak256(\\\"openzeppelin.contracts.storage.ERC165\\\");\\n\\n    function layout() internal pure returns (Layout storage l) {\\n        bytes32 slot = STORAGE_SLOT;\\n        assembly {\\n            l.slot := slot\\n        }\\n    }\\n\\n    function isSupportedInterface(Layout storage l, bytes4 interfaceId)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return l.supportedInterfaces[interfaceId];\\n    }\\n\\n    function setSupportedInterface(\\n        Layout storage l,\\n        bytes4 interfaceId,\\n        bool status\\n    ) internal {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        l.supportedInterfaces[interfaceId] = status;\\n    }\\n}\\n\",\"keccak256\":\"0x3d1b5ced0623f06b686563b0f1bd1bc054d61039d257450a546f85d9c5bb6eca\",\"license\":\"MIT\"},\"contracts/features/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.15;\\n\\n/**\\n * @title ERC165 interface registration interface\\n * @dev see https://eips.ethereum.org/EIPS/eip-165\\n */\\ninterface IERC165 {\\n    /**\\n     * @notice query whether contract has registered support for given interface\\n     * @param interfaceId interface id\\n     * @return bool whether interface is supported\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x2008fcbb4474e5eaea1b65a7ac7616edba96ea4021940f5f0ecc305dc95eb4b7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060ef8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60766038366004608a565b6001600160e01b03191660009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed2640602052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215609b57600080fd5b81356001600160e01b03198116811460b257600080fd5b939250505056fea26469706673582212202824e42ac0f4bb0902a8ea8f64dcc400f22834c0b9b5d3ba7abff05e1282f90c64736f6c634300080f0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b60766038366004608a565b6001600160e01b03191660009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed2640602052604090205460ff1690565b604051901515815260200160405180910390f35b600060208284031215609b57600080fd5b81356001600160e01b03198116811460b257600080fd5b939250505056fea26469706673582212202824e42ac0f4bb0902a8ea8f64dcc400f22834c0b9b5d3ba7abff05e1282f90c64736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "params": {
          "interfaceId": "interface id"
        },
        "returns": {
          "_0": "bool whether interface is supported"
        }
      }
    },
    "title": "ERC165 implementation",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "supportsInterface(bytes4)": {
        "notice": "query whether contract has registered support for given interface"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}