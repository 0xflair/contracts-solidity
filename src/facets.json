{
  "flair-sdk:token/common/burnable/BurnableOwnable": {
    "addresses": {
      "5": "0xdA4f104F614583598ee270FA23Bd7B67b3576038",
      "goerli": "0xdA4f104F614583598ee270FA23Bd7B67b3576038"
    },
    "functionSelectors": [
      "setBurnablePausedUntil(uint256)"
    ],
    "fqn": "flair-sdk:token/common/burnable/BurnableOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x710fb577"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "Burnable - Admin - Ownable",
    "notice": "Allow contract owner to manage burning mechanism.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/common/burnable/BurnableOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:diamond/DiamondCut": {
    "addresses": {
      "5": "0x145E826dd5FaCAB891c02B4591B1706800076c84",
      "goerli": "0x145E826dd5FaCAB891c02B4591B1706800076c84"
    },
    "functionSelectors": [
      "diamondCut((address,uint8,bytes4[])[],address,bytes)"
    ],
    "fqn": "flair-sdk:diamond/DiamondCut",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x1f931c1c"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "Diamonds",
    "title": "Diamond - Cut",
    "notice": "Standard EIP-2535 cut functionality to add, replace and remove facets from a diamond.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/diamond/DiamondCut.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:diamond/DiamondLoupe": {
    "addresses": {
      "5": "0x336714ae64A9143c61066a8A00cA9fA99A006B31",
      "goerli": "0x336714ae64A9143c61066a8A00cA9fA99A006B31"
    },
    "functionSelectors": [
      "facetAddress(bytes4)",
      "facetAddresses()",
      "facetFunctionSelectors(address)",
      "facets()"
    ],
    "fqn": "flair-sdk:diamond/DiamondLoupe",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x48e2b093"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "Diamonds",
    "title": "Diamond - Loupe",
    "notice": "Standard EIP-2535 loupe functions to allow inspecting a diamond for explorers.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/diamond/DiamondLoupe.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/ERC1155": {
    "addresses": {
      "5": "0x439A19B19D96e22454a8C6968d7d08fBf5CdE9Bb",
      "goerli": "0x439A19B19D96e22454a8C6968d7d08fBf5CdE9Bb"
    },
    "functionSelectors": [
      "balanceOf(address,uint256)",
      "balanceOfBatch(address[],uint256[])",
      "burn(address,uint256,uint256)",
      "burnBatch(address,uint256[],uint256[])",
      "burnBatchByFacet(address,uint256[],uint256[])",
      "burnByFacet(address,uint256,uint256)",
      "exists(uint256)",
      "isApprovedForAll(address,address)",
      "lockByFacet(address,uint256,uint256)",
      "lockByFacet(address[],uint256[],uint256[])",
      "locked(address,uint256)",
      "locked(address,uint256[])",
      "maxSupply(uint256)",
      "mintByFacet(address,uint256,uint256,bytes)",
      "mintByFacet(address[],uint256[],uint256[],bytes[])",
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
      "safeTransferFrom(address,address,uint256,uint256,bytes)",
      "setApprovalForAll(address,bool)",
      "totalSupply(uint256)",
      "unlockByFacet(address,uint256,uint256)",
      "unlockByFacet(address[],uint256[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/ERC1155",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xd9b67a26",
      "0xdc290004",
      "0x37773a16",
      "0xbb774d48",
      "0x744f4bd4"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC1155 - Standard",
    "notice": "Standard EIP-1155 NFTs with core capabilities of Mintable, Burnable and Lockable.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/ERC1155.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableOwnable": {
    "addresses": {
      "5": "0x0a67c162dbe57878EFda7E6ab39883BBD431Dc29",
      "goerli": "0x0a67c162dbe57878EFda7E6ab39883BBD431Dc29"
    },
    "functionSelectors": [
      "lockByOwner(address,uint256,uint256)",
      "lockByOwner(address[],uint256[],uint256[])",
      "unlockByOwner(address,uint256,uint256)",
      "unlockByOwner(address[],uint256[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x7b535f1c"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x37773a16"
    ],
    "category": "NFTs",
    "title": "ERC1155 - Lock as owner",
    "notice": "Allow locking tokens as the contract owner.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/locking/ERC1155LockableOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableRoleBased": {
    "addresses": {
      "5": "0xCEC6155b62ef9b58a2278d54Af6f48Ad3877cF87",
      "goerli": "0xCEC6155b62ef9b58a2278d54Af6f48Ad3877cF87"
    },
    "functionSelectors": [
      "DEFAULT_ADMIN_ROLE()",
      "LOCKER_ROLE()",
      "lockByRole(address,uint256,uint256)",
      "lockByRole(address[],uint256[],uint256[])",
      "unlockByRole(address,uint256,uint256)",
      "unlockByRole(address[],uint256[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableRoleBased",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xd40d0af6"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x37773a16"
    ],
    "category": "NFTs",
    "title": "ERC1155 - Lock as role",
    "notice": "Allow locking tokens by any sender who has the LOCKER_ROLE.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/locking/ERC1155LockableRoleBased.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/metadata/ERC1155Metadata": {
    "addresses": {
      "5": "0x0917a37788691367e3D33eF848b251B3919d951C",
      "goerli": "0x0917a37788691367e3D33eF848b251B3919d951C"
    },
    "functionSelectors": [
      "name()",
      "symbol()",
      "uri(uint256)"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/metadata/ERC1155Metadata",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x52496f06",
      "0x0e89341c"
    ],
    "peerDependencies": [
      "0xd9b67a26"
    ],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC1155 - Metadata",
    "notice": "Provides metadata for ERC1155 tokens according to standard.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/metadata/ERC1155Metadata.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnable": {
    "addresses": {
      "5": "0x86eb3E746DaA53530aCBd1a5308349574De5990c",
      "goerli": "0x86eb3E746DaA53530aCBd1a5308349574De5990c"
    },
    "functionSelectors": [
      "mintByOwner(address,uint256,uint256,bytes)",
      "mintByOwner(address[],uint256[],uint256[],bytes[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x6c5e99c7"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0xbb774d48"
    ],
    "category": "NFTs",
    "title": "ERC1155 - Mint as owner",
    "notice": "Allow minting as contract owner with no restrictions.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/minting/ERC1155MintableOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnableERC2771": {
    "addresses": {
      "5": "0xBF8049Ccd7994D37Afb31885E7Cd3F07B473B3a2",
      "goerli": "0xBF8049Ccd7994D37Afb31885E7Cd3F07B473B3a2"
    },
    "functionSelectors": [
      "mintByOwner(address,uint256,uint256,bytes)",
      "mintByOwner(address[],uint256[],uint256[],bytes[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnableERC2771",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x6c5e99c7"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0xbb774d48"
    ],
    "category": "NFTs",
    "title": "ERC1155 - Mint as owner - with meta transactions",
    "notice": "Allow minting as owner via ERC2771 Context meta transactions (signed by the owner private key)",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/minting/ERC1155MintableOwnableERC2771.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBased": {
    "addresses": {
      "5": "0x3d7d2eD0e25B1707C163293935F63521954e472D",
      "goerli": "0x3d7d2eD0e25B1707C163293935F63521954e472D"
    },
    "functionSelectors": [
      "DEFAULT_ADMIN_ROLE()",
      "MINTER_ROLE()",
      "mintByRole(address,uint256,uint256,bytes)",
      "mintByRole(address[],uint256[],uint256[],bytes[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBased",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x1abe36ba"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0xbb774d48"
    ],
    "category": "NFTs",
    "title": "ERC1155 - Mint as role",
    "notice": "Allow minting for grantees of MINTER_ROLE.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/minting/ERC1155MintableRoleBased.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBasedERC2771": {
    "addresses": {
      "5": "0xf6a0957898ba2beD2CD0Ee31dA3504b510Fde0F6",
      "goerli": "0xf6a0957898ba2beD2CD0Ee31dA3504b510Fde0F6"
    },
    "functionSelectors": [
      "DEFAULT_ADMIN_ROLE()",
      "MINTER_ROLE()",
      "mintByRole(address,uint256,uint256,bytes)",
      "mintByRole(address[],uint256[],uint256[],bytes[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBasedERC2771",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x1abe36ba"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0xbb774d48"
    ],
    "category": "NFTs",
    "title": "ERC1155 - Mint as role - with meta transactions",
    "notice": "Allow minting for grantees of MINTER_ROLE with meta-transactions supported via ERC2771.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/minting/ERC1155MintableRoleBasedERC2771.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyOwnable": {
    "addresses": {
      "5": "0xBd01725C2C49Ac391510E3F78d040b1853d7Fe8e",
      "goerli": "0xBd01725C2C49Ac391510E3F78d040b1853d7Fe8e"
    },
    "functionSelectors": [
      "freezeMaxSupply(uint256)",
      "freezeMaxSupplyBatch(uint256[])",
      "setMaxSupply(uint256,uint256)",
      "setMaxSupplyBatch(uint256[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xf0d6039e"
    ],
    "peerDependencies": [
      "0x744f4bd4"
    ],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC1155 - Supply - Admin - Ownable",
    "notice": "Allows owner of a EIP-1155 contract to change max supply of token IDs.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/supply/ERC1155SupplyOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSales": {
    "addresses": {
      "5": "0x7C77693e17eA383Bf3c5Bf33c9F4F3D2457712D5",
      "goerli": "0x7C77693e17eA383Bf3c5Bf33c9F4F3D2457712D5"
    },
    "functionSelectors": [
      "eligibleForTier(uint256,address,uint256,bytes32[])",
      "mintByTier(uint256,uint256,uint256,bytes32[])",
      "onTierAllowlist(uint256,address,uint256,bytes32[])",
      "remainingForTier(uint256)",
      "reservedMints()",
      "tierMints(uint256)",
      "tierToTokenId(uint256)",
      "tierToTokenId(uint256[])",
      "tiers(uint256)",
      "totalReserved()",
      "walletMintedByTier(uint256,address)"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSales",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x79f33254",
      "0x5ae18a74"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0xbb774d48"
    ],
    "category": "NFTs",
    "title": "ERC1155 - Tiered Sales",
    "notice": "Sales mechanism for ERC1155 NFTs with multiple tiered pricing, allowlist and allocation plans.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/sales/ERC1155TieredSales.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesOwnable": {
    "addresses": {
      "5": "0xA1F072108aaaF41E17f9449A727217361bA5C943",
      "goerli": "0xA1F072108aaaF41E17f9449A727217361bA5C943"
    },
    "functionSelectors": [
      "configureTierTokenId(uint256,uint256)",
      "configureTierTokenId(uint256[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x76c5dd21"
    ],
    "peerDependencies": [
      "0x5ae18a74"
    ],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC1155 - Tiered Sales - Admin - Ownable",
    "notice": "Used to manage which ERC1155 token is related to which the sales tier.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/facets/sales/ERC1155TieredSalesOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC1155/ERC1155WithERC2771": {
    "addresses": {
      "5": "0x28fbe43b52544a3947309768e11E4c1AebFDbD92",
      "goerli": "0x28fbe43b52544a3947309768e11E4c1AebFDbD92"
    },
    "functionSelectors": [
      "balanceOf(address,uint256)",
      "balanceOfBatch(address[],uint256[])",
      "burn(address,uint256,uint256)",
      "burnBatch(address,uint256[],uint256[])",
      "burnBatchByFacet(address,uint256[],uint256[])",
      "burnByFacet(address,uint256,uint256)",
      "exists(uint256)",
      "isApprovedForAll(address,address)",
      "lockByFacet(address,uint256,uint256)",
      "lockByFacet(address[],uint256[],uint256[])",
      "locked(address,uint256)",
      "locked(address,uint256[])",
      "maxSupply(uint256)",
      "mintByFacet(address,uint256,uint256,bytes)",
      "mintByFacet(address[],uint256[],uint256[],bytes[])",
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
      "safeTransferFrom(address,address,uint256,uint256,bytes)",
      "setApprovalForAll(address,bool)",
      "totalSupply(uint256)",
      "unlockByFacet(address,uint256,uint256)",
      "unlockByFacet(address[],uint256[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC1155/ERC1155WithERC2771",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xd9b67a26",
      "0xdc290004",
      "0x37773a16",
      "0xbb774d48",
      "0x744f4bd4"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC1155 - With ERC2771 Context",
    "notice": "Standard EIP-1155 with ability to accept meta transactions (mainly transfer or burn methods).",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC1155/ERC1155WithERC2771.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:introspection/ERC165": {
    "addresses": {
      "5": "0x2146A2e0d639F5F3024c43b9222BC85b1Ca47cca",
      "goerli": "0x2146A2e0d639F5F3024c43b9222BC85b1Ca47cca"
    },
    "functionSelectors": [
      "supportsInterface(bytes4)"
    ],
    "fqn": "flair-sdk:introspection/ERC165",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x01ffc9a7"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "Introspection",
    "title": "ERC165",
    "notice": "Standard EIP-165 facet which would be already included as a core facet in Flair's Diamond contract.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/introspection/ERC165.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:introspection/ERC165Ownable": {
    "addresses": {
      "5": "0x79455bD8DB7152f9084eAd01328F498124D3eE3b",
      "goerli": "0x79455bD8DB7152f9084eAd01328F498124D3eE3b"
    },
    "functionSelectors": [
      "setERC165(bytes4[],bytes4[])"
    ],
    "fqn": "flair-sdk:introspection/ERC165Ownable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x2a848091"
    ],
    "peerDependencies": [
      "0x01ffc9a7"
    ],
    "requiredDependencies": [],
    "category": "Diamonds",
    "title": "ERC165 - Admin - Ownable",
    "notice": "Standard EIP-165 management facet using Ownable extension for access control.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/introspection/ERC165Ownable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/ERC721A": {
    "addresses": {
      "5": "0x5bfD2a978c5dEA4D12DB31738DfF1a89a07c899E",
      "goerli": "0x5bfD2a978c5dEA4D12DB31738DfF1a89a07c899E"
    },
    "functionSelectors": [
      "approve(address,uint256)",
      "balanceOf(address)",
      "burn(uint256)",
      "burnBatch(uint256[])",
      "burnBatchByFacet(uint256[])",
      "burnByFacet(uint256)",
      "getApproved(uint256)",
      "isApprovedForAll(address,address)",
      "lockByFacet(uint256)",
      "lockByFacet(uint256[])",
      "locked(uint256)",
      "locked(uint256[])",
      "maxSupply()",
      "mintByFacet(address,uint256)",
      "mintByFacet(address[],uint256[])",
      "ownerOf(uint256)",
      "safeTransferFrom(address,address,uint256)",
      "safeTransferFrom(address,address,uint256,bytes)",
      "setApprovalForAll(address,bool)",
      "totalSupply()",
      "transferFrom(address,address,uint256)",
      "unlockByFacet(uint256)",
      "unlockByFacet(uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/ERC721A",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x8153916a",
      "0x80ac58cd",
      "0xcdbde6dc",
      "0x645b6d4b",
      "0x459bd11c",
      "0xc82b5d4d"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC721 (A) - Standard",
    "notice": "Azuki's implementation of standard EIP-721 NFTs with core capabilities of Mintable, Burnable and Lockable.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/ERC721A.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/ERC721AWithERC2771": {
    "addresses": {
      "5": "0x781f7722E76302Fe12E2d665669b7C040Dc1d14E",
      "goerli": "0x781f7722E76302Fe12E2d665669b7C040Dc1d14E"
    },
    "functionSelectors": [
      "approve(address,uint256)",
      "balanceOf(address)",
      "burn(uint256)",
      "burnBatch(uint256[])",
      "burnBatchByFacet(uint256[])",
      "burnByFacet(uint256)",
      "getApproved(uint256)",
      "isApprovedForAll(address,address)",
      "lockByFacet(uint256)",
      "lockByFacet(uint256[])",
      "locked(uint256)",
      "locked(uint256[])",
      "maxSupply()",
      "mintByFacet(address,uint256)",
      "mintByFacet(address[],uint256[])",
      "ownerOf(uint256)",
      "safeTransferFrom(address,address,uint256)",
      "safeTransferFrom(address,address,uint256,bytes)",
      "setApprovalForAll(address,bool)",
      "totalSupply()",
      "transferFrom(address,address,uint256)",
      "unlockByFacet(uint256)",
      "unlockByFacet(uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/ERC721AWithERC2771",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x8153916a",
      "0x80ac58cd",
      "0xcdbde6dc",
      "0x645b6d4b",
      "0x459bd11c",
      "0xc82b5d4d"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC721 (A) - With ERC2771 Context",
    "notice": "Azuki's implemntation of standard EIP-721 with ability to accept meta transactions (mainly transfer or burn methods).",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/ERC721AWithERC2771.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/locking/ERC721LockableOwnable": {
    "addresses": {
      "5": "0x595931af6D6b9d314e77b257e79fAD36F35611dA",
      "goerli": "0x595931af6D6b9d314e77b257e79fAD36F35611dA"
    },
    "functionSelectors": [
      "lockByOwner(uint256)",
      "lockByOwner(uint256[])",
      "unlockByOwner(uint256)",
      "unlockByOwner(uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/locking/ERC721LockableOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x822b3992"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x459bd11c"
    ],
    "category": "NFTs",
    "title": "ERC721 - Lock as owner",
    "notice": "Allow locking tokens as the contract owner.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/locking/ERC721LockableOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/locking/ERC721LockableRoleBased": {
    "addresses": {
      "5": "0x3aCc0Fc41Ec3F5A973025f1fe5A781Ed6b8048ce",
      "goerli": "0x3aCc0Fc41Ec3F5A973025f1fe5A781Ed6b8048ce"
    },
    "functionSelectors": [
      "DEFAULT_ADMIN_ROLE()",
      "LOCKER_ROLE()",
      "lockByRole(uint256)",
      "lockByRole(uint256[])",
      "unlockByRole(uint256)",
      "unlockByRole(uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/locking/ERC721LockableRoleBased",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x28ed446a"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x459bd11c"
    ],
    "category": "NFTs",
    "title": "ERC721 - Lock as role",
    "notice": "Allow locking tokens by any sender who has the LOCKER_ROLE.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/locking/ERC721LockableRoleBased.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/metadata/ERC721Metadata": {
    "addresses": {
      "5": "0xa3E111da8847FCF96999a9B55E93695fF33ca896",
      "goerli": "0xa3E111da8847FCF96999a9B55E93695fF33ca896"
    },
    "functionSelectors": [
      "name()",
      "symbol()",
      "tokenURI(uint256)"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/metadata/ERC721Metadata",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x5b5e139f"
    ],
    "peerDependencies": [
      "0x8153916a"
    ],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC721 - Metadata",
    "notice": "Provides metadata for ERC721 tokens according to standard.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/metadata/ERC721Metadata.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnable": {
    "addresses": {
      "5": "0x0Cc844a047d6c6027ef26A019c28fabcb69632D5",
      "goerli": "0x0Cc844a047d6c6027ef26A019c28fabcb69632D5"
    },
    "functionSelectors": [
      "mintByOwner(address,uint256)",
      "mintByOwner(address[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x197f2429"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x645b6d4b"
    ],
    "category": "NFTs",
    "title": "ERC721 - Mint as owner",
    "notice": "Allow minting as contract owner with no restrictions (supports ERC721A).",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/minting/ERC721MintableOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnableERC2771": {
    "addresses": {
      "5": "0xC140DA71dceC48fB06599B9f7CA252f11CF975b2",
      "goerli": "0xC140DA71dceC48fB06599B9f7CA252f11CF975b2"
    },
    "functionSelectors": [
      "mintByOwner(address,uint256)",
      "mintByOwner(address[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnableERC2771",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x197f2429"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x645b6d4b"
    ],
    "category": "NFTs",
    "title": "ERC721 - Mint as owner - With ERC2771 Context",
    "notice": "Allow minting as owner via meta transactions, signed by the owner private key. (supports ERC721A)",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/minting/ERC721MintableOwnableERC2771.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBased": {
    "addresses": {
      "5": "0x5475655e219034eBDAF40B8b3a40E973b3c0B9B2",
      "goerli": "0x5475655e219034eBDAF40B8b3a40E973b3c0B9B2"
    },
    "functionSelectors": [
      "DEFAULT_ADMIN_ROLE()",
      "MINTER_ROLE()",
      "mintByRole(address,uint256)",
      "mintByRole(address[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBased",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xa3a11183"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x645b6d4b"
    ],
    "category": "NFTs",
    "title": "ERC721 - Mint as role",
    "notice": "Allow minting for senders with MINTER_ROLE to mint new tokens (supports ERC721A).",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/minting/ERC721MintableRoleBased.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBasedERC2771": {
    "addresses": {
      "5": "0x6cB5677a327d4D26876F8580FD08C679c95cD1F3",
      "goerli": "0x6cB5677a327d4D26876F8580FD08C679c95cD1F3"
    },
    "functionSelectors": [
      "DEFAULT_ADMIN_ROLE()",
      "MINTER_ROLE()",
      "mintByRole(address,uint256)",
      "mintByRole(address[],uint256[])"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBasedERC2771",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xa3a11183"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x645b6d4b"
    ],
    "category": "NFTs",
    "title": "ERC721 - Mint as role - with ERC2771",
    "notice": "Allow minting for senders with MINTER_ROLE to mint new tokens with meta-transactions supported via ERC2771 (supports ERC721A).",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/minting/ERC721MintableRoleBasedERC2771.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/supply/ERC721SupplyOwnable": {
    "addresses": {
      "5": "0xA493aEb4468Cd4f32f25ebd5d0B75e5585BE275e",
      "goerli": "0xA493aEb4468Cd4f32f25ebd5d0B75e5585BE275e"
    },
    "functionSelectors": [
      "freezeMaxSupply()",
      "setMaxSupply(uint256)"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/supply/ERC721SupplyOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x79ff02b7"
    ],
    "peerDependencies": [
      "0xcdbde6dc"
    ],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "ERC721 - Supply - Admin - Ownable",
    "notice": "Allows owner of a EIP-721 contract to change max supply of tokens.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/supply/ERC721SupplyOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/sales/ERC721TieredSales": {
    "addresses": {
      "5": "0x46eeC512497285f134Fdad67F6F7Cb341559129b",
      "goerli": "0x46eeC512497285f134Fdad67F6F7Cb341559129b"
    },
    "functionSelectors": [
      "eligibleForTier(uint256,address,uint256,bytes32[])",
      "mintByTier(uint256,uint256,uint256,bytes32[])",
      "onTierAllowlist(uint256,address,uint256,bytes32[])",
      "remainingForTier(uint256)",
      "reservedMints()",
      "tierMints(uint256)",
      "tiers(uint256)",
      "totalReserved()",
      "walletMintedByTier(uint256,address)"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/sales/ERC721TieredSales",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x79f33254"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x645b6d4b",
      "0xcdbde6dc"
    ],
    "category": "NFTs",
    "title": "ERC721 - Tiered Sales",
    "notice": "Sales mechanism for ERC721 NFTs with multiple tiered pricing, allowlist and allocation plans.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/sales/ERC721TieredSales.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/ERC721/facets/sales/ERC721TieredSalesERC2771": {
    "addresses": {
      "5": "0x3230539d252290C97aeA008301Fc5fF0CDa25DD1",
      "goerli": "0x3230539d252290C97aeA008301Fc5fF0CDa25DD1"
    },
    "functionSelectors": [
      "eligibleForTier(uint256,address,uint256,bytes32[])",
      "mintByTier(uint256,uint256,uint256,bytes32[])",
      "onTierAllowlist(uint256,address,uint256,bytes32[])",
      "remainingForTier(uint256)",
      "reservedMints()",
      "tierMints(uint256)",
      "tiers(uint256)",
      "totalReserved()",
      "walletMintedByTier(uint256,address)"
    ],
    "fqn": "flair-sdk:token/ERC721/facets/sales/ERC721TieredSalesERC2771",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x79f33254"
    ],
    "peerDependencies": [],
    "requiredDependencies": [
      "0x645b6d4b"
    ],
    "category": "NFTs",
    "title": "ERC721 - Tiered Sales - with meta-transactions",
    "notice": "Sales mechanism for ERC721 NFTs with ERC2771 meta-transactions support (e.g. credit card minting).",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/ERC721/facets/sales/ERC721TieredSalesERC2771.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:legal/license/License": {
    "addresses": {
      "5": "0x327bea93A89A02d8844f7c2EA57F2d73C88868c2",
      "goerli": "0x327bea93A89A02d8844f7c2EA57F2d73C88868c2"
    },
    "functionSelectors": [
      "customLicenseName()",
      "customLicenseURI()",
      "getLicenseName()",
      "getLicenseURI()",
      "licenseVersion()"
    ],
    "fqn": "flair-sdk:legal/license/License",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x88a1e8f3",
      "0x649a51a8"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "Legal",
    "title": "License",
    "notice": "Add license name and content URI for interacting or holding assets of this contract. Based on a16z's \"Can't Be Evil\".",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/legal/license/License.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:legal/license/LicenseOwnable": {
    "addresses": {
      "5": "0x003f74767Fbe106440C5B4e188B5C756b4505529",
      "goerli": "0x003f74767Fbe106440C5B4e188B5C756b4505529"
    },
    "functionSelectors": [
      "licenseVersionLocked()",
      "lockLicenseVersion()",
      "setLicenseVersion(uint8)"
    ],
    "fqn": "flair-sdk:legal/license/LicenseOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x06ff95be"
    ],
    "peerDependencies": [
      "0x88a1e8f3",
      "0x649a51a8"
    ],
    "requiredDependencies": [],
    "category": "Legal",
    "title": "License - Admin - Ownable",
    "notice": "Allow contract owner to manage license version, name and URI.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/legal/license/LicenseOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/common/metadata/Metadata": {
    "addresses": {
      "5": "0x734d6154c5340ad9629F3Ac330D65Dd0cd2Fab71",
      "goerli": "0x734d6154c5340ad9629F3Ac330D65Dd0cd2Fab71"
    },
    "functionSelectors": [
      "baseURI()",
      "baseURILocked()",
      "fallbackURI()",
      "fallbackURILocked()",
      "lastLockedTokenId()",
      "name()",
      "symbol()",
      "uriSuffix()",
      "uriSuffixLocked()"
    ],
    "fqn": "flair-sdk:token/common/metadata/Metadata",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x52496f06"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "Metadata",
    "notice": "Provides common functions for various token metadata standards. This extension supports base URI, per-token URI, and a fallback URI. You can also freeze URIs until a certain token ID.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/common/metadata/Metadata.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:token/common/metadata/MetadataOwnable": {
    "addresses": {
      "5": "0xb26b863C4eA83b091038c7B767960c7BE06eC063",
      "goerli": "0xb26b863C4eA83b091038c7B767960c7BE06eC063"
    },
    "functionSelectors": [
      "lockBaseURI()",
      "lockFallbackURI()",
      "lockNameAndSymbol()",
      "lockURISuffix()",
      "lockURIUntil(uint256)",
      "setBaseURI(string)",
      "setFallbackURI(string)",
      "setName(string)",
      "setSymbol(string)",
      "setURI(uint256,string)",
      "setURIBatch(uint256[],string[])",
      "setURISuffix(string)"
    ],
    "fqn": "flair-sdk:token/common/metadata/MetadataOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x209d7394"
    ],
    "peerDependencies": [
      "0x52496f06"
    ],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "Metadata - Admin - Ownable",
    "notice": "Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/token/common/metadata/MetadataOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:access/ownable/Ownable": {
    "addresses": {
      "5": "0x36F0ff5a978b14aC085e9e8BC388A011933E8738",
      "goerli": "0x36F0ff5a978b14aC085e9e8BC388A011933E8738"
    },
    "functionSelectors": [
      "owner()",
      "renounceOwnership()",
      "transferOwnership(address)"
    ],
    "fqn": "flair-sdk:access/ownable/Ownable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x7f5828d0"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "Access",
    "title": "ERC173 - Ownable",
    "notice": "Ownership access control facet based on EIP-173 which would be already included as a core facet in Flair's Diamond contract.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/access/ownable/Ownable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:finance/royalty/Royalty": {
    "addresses": {
      "5": "0x11ed76A4957b9E21852c2E96a508E6bca36907d7",
      "goerli": "0x11ed76A4957b9E21852c2E96a508E6bca36907d7"
    },
    "functionSelectors": [
      "defaultRoyalty()",
      "getFeeBps(uint256)",
      "getFeeRecipients(uint256)",
      "getFees(uint256)",
      "getRaribleV2Royalties(uint256)",
      "getTokenRoyaltiesCount()",
      "getTokenRoyaltyByIndex(uint256)",
      "royaltyInfo(uint256,uint256)"
    ],
    "fqn": "flair-sdk:finance/royalty/Royalty",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x2a55205a",
      "0x821be678",
      "0xb7799584",
      "0xcad96cca",
      "0xd5a06d4c",
      "0xc7627428"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "Finance",
    "title": "ERC2981 - Royalty",
    "notice": "Provide standard on-chain EIP-2981 royalty support for ERC721 or ERC1155 tokens, and additional functions for Rarible and Foundation.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/finance/royalty/Royalty.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:finance/royalty/RoyaltyOwnable": {
    "addresses": {
      "5": "0xE4Dc9d19b11AF3aCb344DF7424F8f1540D4003ba",
      "goerli": "0xE4Dc9d19b11AF3aCb344DF7424F8f1540D4003ba"
    },
    "functionSelectors": [
      "setDefaultRoyalty((address,uint16))",
      "setTokenRoyalties((uint256,address,uint16)[])"
    ],
    "fqn": "flair-sdk:finance/royalty/RoyaltyOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xbe561268"
    ],
    "peerDependencies": [
      "0x821be678",
      "0x2a55205a"
    ],
    "requiredDependencies": [],
    "category": "Finance",
    "title": "ERC2981 - Royalty - Admin - Ownable",
    "notice": "Allow contract owner to manage token royalties based on EIP-2981 standard.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/finance/royalty/RoyaltyOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:finance/sales/TieredSalesOwnable": {
    "addresses": {
      "5": "0x9baC09D0e843d289d7d950D27c32E25CeFE5c4af",
      "goerli": "0x9baC09D0e843d289d7d950D27c32E25CeFE5c4af"
    },
    "functionSelectors": [
      "configureTiering(uint256,(uint256,uint256,address,uint256,uint256,bytes32,uint256,uint256))",
      "configureTiering(uint256[],(uint256,uint256,address,uint256,uint256,bytes32,uint256,uint256)[])"
    ],
    "fqn": "flair-sdk:finance/sales/TieredSalesOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xf8458dcd"
    ],
    "peerDependencies": [
      "0x79f33254"
    ],
    "requiredDependencies": [],
    "category": "NFTs",
    "title": "Tiered Sales - Admin - Ownable",
    "notice": "Allow contract owner to manage sale tiers.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/finance/sales/TieredSalesOwnable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:finance/withdraw/Withdrawable": {
    "addresses": {
      "5": "0x071b584C7a8D6fD3C1aA1F114C95a238cf268cAe",
      "goerli": "0x071b584C7a8D6fD3C1aA1F114C95a238cf268cAe"
    },
    "functionSelectors": [
      "withdraw(address[],uint256[])",
      "withdrawMode()",
      "withdrawModeLocked()",
      "withdrawPowerRevoked()",
      "withdrawRecipient()",
      "withdrawRecipientLocked()"
    ],
    "fqn": "flair-sdk:finance/withdraw/Withdrawable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0xa9c00e2f"
    ],
    "peerDependencies": [],
    "requiredDependencies": [],
    "category": "Finance",
    "title": "Withdrawable",
    "notice": "Allow withdrwaing any ERC20 or native tokens from the contract.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/finance/withdraw/Withdrawable.sol",
    "author": "flair-sdk.eth"
  },
  "flair-sdk:finance/withdraw/WithdrawableOwnable": {
    "addresses": {
      "5": "0x33B5C0909df14F6A0905177041a2DF08C7cccBcd",
      "goerli": "0x33B5C0909df14F6A0905177041a2DF08C7cccBcd"
    },
    "functionSelectors": [
      "lockWithdrawMode()",
      "lockWithdrawRecipient()",
      "revokeWithdrawPower()",
      "setWithdrawMode(uint8)",
      "setWithdrawRecipient(address)"
    ],
    "fqn": "flair-sdk:finance/withdraw/WithdrawableOwnable",
    "version": "2.13.0",
    "providesInterfaces": [
      "0x7246cea5"
    ],
    "peerDependencies": [
      "0xa9c00e2f"
    ],
    "requiredDependencies": [],
    "category": "Finance",
    "title": "Withdrawable - Admin - Ownable",
    "notice": "Allow contract owner to manage who can withdraw funds and how.",
    "source": "https://github.com/flair-sdk/contracts/blob/v2.13.0/src/finance/withdraw/WithdrawableOwnable.sol",
    "author": "flair-sdk.eth"
  }
}
