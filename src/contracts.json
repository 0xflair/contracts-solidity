{"flair-sdk:diamond/Diamond":{"fqn":"flair-sdk:diamond/Diamond","version":"2.4.4","address":{"3":"0x293E9F67cEF4d7465b6B9E19ccDB16F68536F54d","4":"0x902e955Dd4dfe334183AB1FD36A50aa7E856FFAB","5":"0x40BD4F6B9D5d4CAF28909dC679146101099C5895","goerli":"0x40BD4F6B9D5d4CAF28909dC679146101099C5895","rinkeby":"0x902e955Dd4dfe334183AB1FD36A50aa7E856FFAB","ropsten":"0x293E9F67cEF4d7465b6B9E19ccDB16F68536F54d"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"Diamond","sourceName":"src/diamond/Diamond.sol","abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"components":[{"internalType":"address","name":"diamondCutFacet","type":"address"},{"internalType":"address","name":"diamondLoupeFacet","type":"address"},{"internalType":"address","name":"erc165Facet","type":"address"},{"internalType":"address","name":"erc173Facet","type":"address"}],"internalType":"struct Diamond.CoreFacets","name":"_coreFacets","type":"tuple"},{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_facets","type":"tuple[]"},{"components":[{"internalType":"address","name":"initContract","type":"address"},{"internalType":"bytes","name":"initData","type":"bytes"}],"internalType":"struct Diamond.Initialization[]","name":"_initializations","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"facet","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"DiamondFacetAlreadyExists","type":"error"},{"stateMutability":"payable","type":"fallback"},{"inputs":[{"internalType":"bytes[]","name":"data","type":"bytes[]"}],"name":"multicall","outputs":[{"internalType":"bytes[]","name":"results","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"bytecode":"0x60806040523480156200001157600080fd5b5060405162001c3438038062001c34833981016040819052620000349162000e1f565b60006200004b620004bc60201b620002111760201c565b6040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b816000815181106200008f576200008f62000f09565b6001600160e01b0319909216602092830291909101820152620000c99083906307e4c70760e21b9060019062000235620004e0821b17901c565b60408051600480825260a0820190925260009160208201608080368337019050509050637a0ed62760e01b816000815181106200010a576200010a62000f09565b6001600160e01b03199092166020928302919091019091015280516356fe50af60e11b908290600190811062000144576200014462000f09565b6001600160e01b03199092166020928302919091019091015280516314bbdacb60e21b90829060029081106200017e576200017e62000f09565b6001600160e01b03199092166020928302919091019091015280516366ffd66360e11b9082906003908110620001b857620001b862000f09565b6001600160e01b0319909216602092830291909101820152620001f29084906348e2b09360e01b9060019062000235620004e0821b17901c565b604080516001808252818301909252600091602080830190803683370190505090506301ffc9a760e01b8160008151811062000232576200023262000f09565b6001600160e01b03199092166020928302919091018201526200026c9085906301ffc9a760e01b9060019062000235620004e0821b17901c565b604080516002808252606082018352600092602083019080368337019050509050638da5cb5b60e01b81600081518110620002ab57620002ab62000f09565b6001600160e01b031990921660209283029190910190910152805163f2fde38b60e01b9082906001908110620002e557620002e562000f09565b6001600160e01b03199092166020928302919091018201526200031f9086906307f5828d60e41b9060019062000235620004e0821b17901c565b6200033a8860000151856200056e60201b620002bd1760201c565b620003558860200151846200056e60201b620002bd1760201c565b620003708860400151836200056e60201b620002bd1760201c565b6200038b8860600151826200056e60201b620002bd1760201c565b620003b989620003a56200073d60201b620004bf1760201c565b6200076160201b620004e31790919060201c565b60005b875181101562000432576200041d888281518110620003df57620003df62000f09565b60200260200101516000015189838151811062000400576200040062000f09565b6020026020010151604001516200056e60201b620002bd1760201c565b80620004298162000f35565b915050620003bc565b5060005b8651811015620004ac576200049787828151811062000459576200045962000f09565b6020026020010151600001518883815181106200047a576200047a62000f09565b6020026020010151602001516200077e60201b6200050d1760201c565b80620004a38162000f35565b91505062000436565b5050505050505050505062000fd5565b7fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264090565b6001600160e01b03198083169003620005405760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064015b60405180910390fd5b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916001600160601b0382169003620005e557620005e58285620009a3565b60005b83518110156200073657600084828151811062000609576200060962000f09565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015620006775760405163752eb76d60e01b81526001600160a01b03821660048201526001600160e01b03198316602482015260440162000537565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055836200071b8162000f51565b945050505080806200072d9062000f35565b915050620005e8565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed490565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b0382166200080857805115620008045760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606482015260840162000537565b5050565b6000815111620008815760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606482015260840162000537565b6001600160a01b0382163014620008b757620008b78260405180606001604052806028815260200162001be86028913962000a10565b600080836001600160a01b031683604051620008d4919062000f82565b600060405180830381855af49150503d806000811462000911576040519150601f19603f3d011682016040523d82523d6000602084013e62000916565b606091505b5091509150816200099d5780511562000945578060405162461bcd60e51b815260040162000537919062000fa0565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b606482015260840162000537565b50505050565b620009c88160405180606001604052806024815260200162001c106024913962000a10565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b813b81816200099d5760405162461bcd60e51b815260040162000537919062000fa0565b80516001600160a01b038116811462000a4c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171562000a8c5762000a8c62000a51565b60405290565b604080519081016001600160401b038111828210171562000a8c5762000a8c62000a51565b604051608081016001600160401b038111828210171562000a8c5762000a8c62000a51565b604051601f8201601f191681016001600160401b038111828210171562000b075762000b0762000a51565b604052919050565b60006001600160401b0382111562000b2b5762000b2b62000a51565b5060051b60200190565b600082601f83011262000b4757600080fd5b8151602062000b6062000b5a8362000b0f565b62000adc565b828152600592831b850182019282820191908785111562000b8057600080fd5b8387015b8581101562000ca05780516001600160401b038082111562000ba65760008081fd5b908901906060828c03601f190181131562000bc15760008081fd5b62000bcb62000a67565b62000bd889850162000a34565b81526040808501516003811062000bef5760008081fd5b828b015291840151918383111562000c075760008081fd5b82850194508d603f86011262000c1f57600093508384fd5b89850151935062000c3462000b5a8562000b0f565b84815293871b85018101938a810193508e85111562000c535760008081fd5b948101945b8486101562000c8b5785516001600160e01b03198116811462000c7b5760008081fd5b8452948a0194928a019262000c58565b90820152875250505092840192840162000b84565b5090979650505050505050565b60005b8381101562000cca57818101518382015260200162000cb0565b838111156200099d5750506000910152565b6000601f838184011262000cef57600080fd5b8251602062000d0262000b5a8362000b0f565b82815260059290921b8501810191818101908784111562000d2257600080fd5b8287015b8481101562000e135780516001600160401b038082111562000d485760008081fd5b908901906040601f19838d03810182131562000d645760008081fd5b62000d6e62000a92565b62000d7b89860162000a34565b8152828501518481111562000d905760008081fd5b8086019550508d603f86011262000da75760008081fd5b888501518481111562000dbe5762000dbe62000a51565b62000dcf8a848e8401160162000adc565b94508085528e8482880101111562000de957600092508283fd5b62000dfa818b870186890162000cad565b5080890193909352505084525091830191830162000d26565b50979650505050505050565b60008060008084860360e081121562000e3757600080fd5b62000e428662000a34565b94506080601f198201121562000e5757600080fd5b5062000e6262000ab7565b62000e706020870162000a34565b815262000e806040870162000a34565b602082015262000e936060870162000a34565b604082015262000ea66080870162000a34565b606082015260a08601519093506001600160401b038082111562000ec957600080fd5b62000ed78883890162000b35565b935060c087015191508082111562000eee57600080fd5b5062000efd8782880162000cdc565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820162000f4a5762000f4a62000f1f565b5060010190565b60006001600160601b038281166002600160601b0319810162000f785762000f7862000f1f565b6001019392505050565b6000825162000f9681846020870162000cad565b9190910192915050565b602081526000825180602084015262000fc181604085016020870162000cad565b601f01601f19169190910160400192915050565b610c038062000fe56000396000f3fe6080604052600436106100225760003560e01c8063ac9650d8146100e657610029565b3661002957005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b0316806100c25760405162461bcd60e51b815260206004820152600860248201527f4241445f46554e4300000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100e1573d6000f35b3d6000fd5b3480156100f257600080fd5b50610106610101366004610928565b61011c565b60405161011391906109f5565b60405180910390f35b60608167ffffffffffffffff81111561013757610137610a57565b60405190808252806020026020018201604052801561016a57816020015b60608152602001906001900390816101555790505b50905060005b8281101561020a576101da3085858481811061018e5761018e610a6d565b90506020028101906101a09190610a83565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061073792505050565b8282815181106101ec576101ec610a6d565b6020026020010181905250808061020290610ae7565b915050610170565b5092915050565b7fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264090565b6001600160e01b0319808316900361028f5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016100b9565b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff82169003610336576103368285610763565b60005b83518110156104b857600084828151811061035657610356610a6d565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156103db576040517f752eb76d0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526001600160e01b0319831660248201526044016100b9565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c949094029390931790925593909252879052815473ffffffffffffffffffffffffffffffffffffffff1916179055836104a081610b00565b945050505080806104b090610ae7565b915050610339565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed490565b815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0391909116179055565b6001600160a01b038216610594578051156105905760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100b9565b5050565b600081511161060b5760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100b9565b6001600160a01b038216301461063d5761063d82604051806060016040528060288152602001610b5b602891396107da565b600080836001600160a01b0316836040516106589190610b2b565b600060405180830381855af49150503d8060008114610693576040519150601f19603f3d011682016040523d82523d6000602084013e610698565b606091505b509150915081610731578051156106c3578060405162461bcd60e51b81526004016100b99190610b47565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f766572746564000000000000000000000000000000000000000000000000000060648201526084016100b9565b50505050565b606061075c8383604051806060016040528060278152602001610ba7602791396107fb565b9392505050565b61078581604051806060016040528060248152602001610b83602491396107da565b6002820180546001600160a01b03909216600081815260019485016020908152604082208601859055948401835591825292902001805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b813b81816107315760405162461bcd60e51b81526004016100b99190610b47565b60606001600160a01b0384163b61087a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016100b9565b600080856001600160a01b0316856040516108959190610b2b565b600060405180830381855af49150503d80600081146108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b50915091506108e58282866108ef565b9695505050505050565b606083156108fe57508161075c565b82511561090e5782518084602001fd5b8160405162461bcd60e51b81526004016100b99190610b47565b6000806020838503121561093b57600080fd5b823567ffffffffffffffff8082111561095357600080fd5b818501915085601f83011261096757600080fd5b81358181111561097657600080fd5b8660208260051b850101111561098b57600080fd5b60209290920196919550909350505050565b60005b838110156109b85781810151838201526020016109a0565b838111156107315750506000910152565b600081518084526109e181602086016020860161099d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610a4a57603f19888603018452610a388583516109c9565b94509285019290850190600101610a1c565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610a9a57600080fd5b83018035915067ffffffffffffffff821115610ab557600080fd5b602001915036819003821315610aca57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b600060018201610af957610af9610ad1565b5060010190565b60006bffffffffffffffffffffffff808316818103610b2157610b21610ad1565b6001019392505050565b60008251610b3d81846020870161099d565b9190910192915050565b60208152600061075c60208301846109c956fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122065cc727ac452b6bea10c4fa8d902fdfb599696fd3bc707500705a9a02337deeb64736f6c634300080f00334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465","deployedBytecode":"0x6080604052600436106100225760003560e01c8063ac9650d8146100e657610029565b3661002957005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602081905260409091205481906001600160a01b0316806100c25760405162461bcd60e51b815260206004820152600860248201527f4241445f46554e4300000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100e1573d6000f35b3d6000fd5b3480156100f257600080fd5b50610106610101366004610928565b61011c565b60405161011391906109f5565b60405180910390f35b60608167ffffffffffffffff81111561013757610137610a57565b60405190808252806020026020018201604052801561016a57816020015b60608152602001906001900390816101555790505b50905060005b8281101561020a576101da3085858481811061018e5761018e610a6d565b90506020028101906101a09190610a83565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061073792505050565b8282815181106101ec576101ec610a6d565b6020026020010181905250808061020290610ae7565b915050610170565b5092915050565b7fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264090565b6001600160e01b0319808316900361028f5760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016100b9565b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff82169003610336576103368285610763565b60005b83518110156104b857600084828151811061035657610356610a6d565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156103db576040517f752eb76d0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526001600160e01b0319831660248201526044016100b9565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c949094029390931790925593909252879052815473ffffffffffffffffffffffffffffffffffffffff1916179055836104a081610b00565b945050505080806104b090610ae7565b915050610339565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed490565b815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0391909116179055565b6001600160a01b038216610594578051156105905760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100b9565b5050565b600081511161060b5760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100b9565b6001600160a01b038216301461063d5761063d82604051806060016040528060288152602001610b5b602891396107da565b600080836001600160a01b0316836040516106589190610b2b565b600060405180830381855af49150503d8060008114610693576040519150601f19603f3d011682016040523d82523d6000602084013e610698565b606091505b509150915081610731578051156106c3578060405162461bcd60e51b81526004016100b99190610b47565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f766572746564000000000000000000000000000000000000000000000000000060648201526084016100b9565b50505050565b606061075c8383604051806060016040528060278152602001610ba7602791396107fb565b9392505050565b61078581604051806060016040528060248152602001610b83602491396107da565b6002820180546001600160a01b03909216600081815260019485016020908152604082208601859055948401835591825292902001805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b813b81816107315760405162461bcd60e51b81526004016100b99190610b47565b60606001600160a01b0384163b61087a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016100b9565b600080856001600160a01b0316856040516108959190610b2b565b600060405180830381855af49150503d80600081146108d0576040519150601f19603f3d011682016040523d82523d6000602084013e6108d5565b606091505b50915091506108e58282866108ef565b9695505050505050565b606083156108fe57508161075c565b82511561090e5782518084602001fd5b8160405162461bcd60e51b81526004016100b99190610b47565b6000806020838503121561093b57600080fd5b823567ffffffffffffffff8082111561095357600080fd5b818501915085601f83011261096757600080fd5b81358181111561097657600080fd5b8660208260051b850101111561098b57600080fd5b60209290920196919550909350505050565b60005b838110156109b85781810151838201526020016109a0565b838111156107315750506000910152565b600081518084526109e181602086016020860161099d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610a4a57603f19888603018452610a388583516109c9565b94509285019290850190600101610a1c565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610a9a57600080fd5b83018035915067ffffffffffffffff821115610ab557600080fd5b602001915036819003821315610aca57600080fd5b9250929050565b634e487b7160e01b600052601160045260246000fd5b600060018201610af957610af9610ad1565b5060010190565b60006bffffffffffffffffffffffff808316818103610b2157610b21610ad1565b6001019392505050565b60008251610b3d81846020870161099d565b9190910192915050565b60208152600061075c60208301846109c956fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122065cc727ac452b6bea10c4fa8d902fdfb599696fd3bc707500705a9a02337deeb64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../access/ownable/OwnableStorage.sol\";\nimport \"../access/ownable/IERC173.sol\";\nimport \"../introspection/ERC165.sol\";\nimport \"../metatx/ERC2771Context.sol\";\nimport \"../diamond/IDiamondCut.sol\";\nimport \"../diamond/IDiamondLoupe.sol\";\n\nimport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\nimport \"./DiamondStorage.sol\";\n\ncontract Diamond is Multicall {\n    using ERC165Storage for ERC165Storage.Layout;\n    using OwnableStorage for OwnableStorage.Layout;\n\n    struct Initialization {\n        address initContract;\n        bytes initData;\n    }\n\n    struct CoreFacets {\n        address diamondCutFacet;\n        address diamondLoupeFacet;\n        address erc165Facet;\n        address erc173Facet;\n    }\n\n    constructor(\n        address owner,\n        CoreFacets memory _coreFacets,\n        IDiamondCut.FacetCut[] memory _facets,\n        Initialization[] memory _initializations\n    ) {\n        ERC165Storage.Layout storage erc165 = ERC165Storage.layout();\n\n        // register DiamondCut\n\n        bytes4[] memory selectorsDiamondCut = new bytes4[](1);\n        selectorsDiamondCut[0] = IDiamondCut.diamondCut.selector;\n\n        erc165.setSupportedInterface(type(IDiamondCut).interfaceId, true);\n\n        // register DiamondLoupe\n\n        bytes4[] memory selectorsDiamondLoupe = new bytes4[](4);\n        selectorsDiamondLoupe[0] = IDiamondLoupe.facets.selector;\n        selectorsDiamondLoupe[1] = IDiamondLoupe.facetFunctionSelectors.selector;\n        selectorsDiamondLoupe[2] = IDiamondLoupe.facetAddresses.selector;\n        selectorsDiamondLoupe[3] = IDiamondLoupe.facetAddress.selector;\n\n        erc165.setSupportedInterface(type(IDiamondLoupe).interfaceId, true);\n\n        // register ERC165 (supportsInterface)\n\n        bytes4[] memory selectorsERC165 = new bytes4[](1);\n        selectorsERC165[0] = IERC165.supportsInterface.selector;\n\n        erc165.setSupportedInterface(type(IERC165).interfaceId, true);\n\n        // register ERC173 (Ownable)\n\n        bytes4[] memory selectorsERC173 = new bytes4[](2);\n        selectorsERC173[0] = IERC173.owner.selector;\n        selectorsERC173[1] = IERC173.transferOwnership.selector;\n\n        erc165.setSupportedInterface(type(IERC173).interfaceId, true);\n\n        // execute the first ever diamond cut,\n        // we are calling the addFunctions directly to save ~ %50 gas\n\n        DiamondStorage.addFunctions(_coreFacets.diamondCutFacet, selectorsDiamondCut);\n        DiamondStorage.addFunctions(_coreFacets.diamondLoupeFacet, selectorsDiamondLoupe);\n        DiamondStorage.addFunctions(_coreFacets.erc165Facet, selectorsERC165);\n        DiamondStorage.addFunctions(_coreFacets.erc173Facet, selectorsERC173);\n\n        // set owner\n\n        OwnableStorage.layout().setOwner(owner);\n\n        // initialization\n\n        for (uint256 i = 0; i < _facets.length; i++) {\n            DiamondStorage.addFunctions(_facets[i].facetAddress, _facets[i].functionSelectors);\n        }\n\n        for (uint256 i = 0; i < _initializations.length; i++) {\n            DiamondStorage.initializeDiamondCut(_initializations[i].initContract, _initializations[i].initData);\n        }\n    }\n\n    // Find facet for function that is called and execute the\n    // function if a facet is found and return any value.\n    fallback() external payable {\n        DiamondStorage.Layout storage l;\n        bytes32 position = DiamondStorage.DIAMOND_STORAGE_POSITION;\n        // get diamond storage\n        assembly {\n            l.slot := position\n        }\n\n        // get facet from function selector\n        address facet = l.selectorToFacetAndPosition[msg.sig].facetAddress;\n        require(facet != address(0), \"BAD_FUNC\");\n\n        // Execute external function from facet using delegatecall and return any value.\n        assembly {\n            // copy function selector and any arguments\n            calldatacopy(0, 0, calldatasize())\n            // execute function call using the facet\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\n            // get any return value\n            returndatacopy(0, 0, returndatasize())\n            // return any return value or error back to the caller\n            switch result\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    receive() external payable {}\n}\n"},"flair-sdk:diamond/DiamondCut":{"fqn":"flair-sdk:diamond/DiamondCut","version":"2.4.4","address":{"3":"0x2ccF63FE5613d729E4bc7edAb240aba09B2A703b","4":"0x34d0fd8aA560340707B364c03D1CC4F70c132Da3","5":"0x644962F716f6D75E026Bd9B3b42582C3D1346c4A","goerli":"0x644962F716f6D75E026Bd9B3b42582C3D1346c4A","rinkeby":"0x34d0fd8aA560340707B364c03D1CC4F70c132Da3","ropsten":"0x2ccF63FE5613d729E4bc7edAb240aba09B2A703b"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"DiamondCut","sourceName":"src/diamond/DiamondCut.sol","abi":[{"inputs":[{"internalType":"address","name":"facet","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"DiamondFacetAlreadyExists","type":"error"},{"inputs":[{"internalType":"address","name":"facet","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"name":"DiamondFacetSameFunction","type":"error"},{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"diamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50611321806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610dd5565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146100c35760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61010d6100d08587610f1b565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011492505050565b5050505050565b60005b83518110156102f05760008482815181106101345761013461105f565b60200260200101516020015190506000600281111561015557610155611075565b81600281111561016757610167611075565b036101b5576101b08583815181106101815761018161105f565b60200260200101516000015186848151811061019f5761019f61105f565b60200260200101516040015161033b565b6102dd565b60018160028111156101c9576101c9611075565b03610212576101b08583815181106101e3576101e361105f565b6020026020010151600001518684815181106102015761020161105f565b602002602001015160400151610525565b600281600281111561022657610226611075565b0361026f576101b08583815181106102405761024061105f565b60200260200101516000015186848151811061025e5761025e61105f565b60200260200101516040015161071f565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560448201527f74416374696f6e0000000000000000000000000000000000000000000000000060648201526084016100ba565b50806102e8816110a1565b915050610117565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161032493929190611112565b60405180910390a161033682826107b8565b505050565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff821690036103b4576103b482856109dc565b60005b835181101561010d5760008482815181106103d4576103d461105f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015610459576040517f752eb76d0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526001600160e01b0319831660248201526044016100ba565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c949094029390931790925593909252879052815473ffffffffffffffffffffffffffffffffffffffff19161790558361050d81611211565b9450505050808061051d906110a1565b9150506103b7565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff8216900361059e5761059e82856109dc565b60005b835181101561010d5760008482815181106105be576105be61105f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b039081169087168103610648576040517f0f63c2400000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526001600160e01b0319831660248201526044016100ba565b610653858284610a53565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c949094029390931790925593909252879052815473ffffffffffffffffffffffffffffffffffffffff19161790558361070781611211565b94505050508080610717906110a1565b9150506105a1565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60005b82518110156107b25760008382815181106107605761076061105f565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031661079d848284610a53565b505080806107aa906110a1565b915050610743565b50505050565b6001600160a01b03821661083f5780511561083b5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100ba565b5050565b60008151116108b65760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100ba565b6001600160a01b03821630146108e8576108e8826040518060600160405280602881526020016112a060289139610d4f565b600080836001600160a01b031683604051610903919061123c565b600060405180830381855af49150503d806000811461093e576040519150601f19603f3d011682016040523d82523d6000602084013e610943565b606091505b5091509150816107b25780511561096e578060405162461bcd60e51b81526004016100ba9190611258565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f766572746564000000000000000000000000000000000000000000000000000060648201526084016100ba565b6109fe816040518060600160405280602481526020016112c860249139610d4f565b6002820180546001600160a01b03909216600081815260019485016020908152604082208601859055948401835591825292902001805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046bffffffffffffffffffffffff169291610aa791611272565b9050808214610b9e576001600160a01b03841660009081526001860160205260408120805483908110610adc57610adc61105f565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610b2d57610b2d61105f565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6bffffffffffffffffffffffff8516021790555b6001600160a01b03841660009081526001860160205260409020805480610bc757610bc7611289565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319851682528690526040812081905581900361010d576002850154600090610c2a90600190611272565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ce6576000876002018381548110610c6957610c6961105f565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610c9a57610c9a61105f565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610cf957610cf9611289565b600082815260208082208301600019908101805473ffffffffffffffffffffffffffffffffffffffff191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816107b25760405162461bcd60e51b81526004016100ba9190611258565b80356001600160a01b0381168114610d8757600080fd5b919050565b60008083601f840112610d9e57600080fd5b50813567ffffffffffffffff811115610db657600080fd5b602083019150836020828501011115610dce57600080fd5b9250929050565b600080600080600060608688031215610ded57600080fd5b853567ffffffffffffffff80821115610e0557600080fd5b818801915088601f830112610e1957600080fd5b813581811115610e2857600080fd5b8960208260051b8501011115610e3d57600080fd5b60208301975080965050610e5360208901610d70565b94506040880135915080821115610e6957600080fd5b50610e7688828901610d8c565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610ec057610ec0610e87565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610e87565b604052919050565b600067ffffffffffffffff821115610f1157610f11610e87565b5060051b60200190565b6000610f2e610f2984610ef7565b610ec6565b83815260208082019190600586811b860136811115610f4c57600080fd5b865b8181101561105257803567ffffffffffffffff80821115610f6f5760008081fd5b818a01915060608236031215610f855760008081fd5b610f8d610e9d565b610f9683610d70565b81528683013560038110610faa5760008081fd5b8188015260408381013583811115610fc25760008081fd5b939093019236601f850112610fd957600092508283fd5b83359250610fe9610f2984610ef7565b83815292871b840188019288810190368511156110065760008081fd5b948901945b8486101561103b5785356001600160e01b03198116811461102c5760008081fd5b8252948901949089019061100b565b918301919091525088525050948301948301610f4e565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110b3576110b361108b565b5060010190565b60005b838110156110d55781810151838201526020016110bd565b838111156107b25750506000910152565b600081518084526110fe8160208601602086016110ba565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156111e157607f198a850301865281518885016001600160a01b038251168652848201516003811061118057634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156111cc5783516001600160e01b03191682529286019260019290920191908601906111a2565b5097850197955050509082019060010161113b565b50506001600160a01b038a1690880152868103604088015261120381896110e6565b9a9950505050505050505050565b60006bffffffffffffffffffffffff8083168181036112325761123261108b565b6001019392505050565b6000825161124e8184602087016110ba565b9190910192915050565b60208152600061126b60208301846110e6565b9392505050565b6000828210156112845761128461108b565b500390565b634e487b7160e01b600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212206cc792acb64c21764e52cc287ad2a0c1f623ba33a027bec5887940919e3fa7c764736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610dd5565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146100c35760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61010d6100d08587610f1b565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061011492505050565b5050505050565b60005b83518110156102f05760008482815181106101345761013461105f565b60200260200101516020015190506000600281111561015557610155611075565b81600281111561016757610167611075565b036101b5576101b08583815181106101815761018161105f565b60200260200101516000015186848151811061019f5761019f61105f565b60200260200101516040015161033b565b6102dd565b60018160028111156101c9576101c9611075565b03610212576101b08583815181106101e3576101e361105f565b6020026020010151600001518684815181106102015761020161105f565b602002602001015160400151610525565b600281600281111561022657610226611075565b0361026f576101b08583815181106102405761024061105f565b60200260200101516000015186848151811061025e5761025e61105f565b60200260200101516040015161071f565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560448201527f74416374696f6e0000000000000000000000000000000000000000000000000060648201526084016100ba565b50806102e8816110a1565b915050610117565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161032493929190611112565b60405180910390a161033682826107b8565b505050565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff821690036103b4576103b482856109dc565b60005b835181101561010d5760008482815181106103d4576103d461105f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b03168015610459576040517f752eb76d0000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526001600160e01b0319831660248201526044016100ba565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c949094029390931790925593909252879052815473ffffffffffffffffffffffffffffffffffffffff19161790558361050d81611211565b9450505050808061051d906110a1565b9150506103b7565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff8216900361059e5761059e82856109dc565b60005b835181101561010d5760008482815181106105be576105be61105f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b039081169087168103610648576040517f0f63c2400000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201526001600160e01b0319831660248201526044016100ba565b610653858284610a53565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c949094029390931790925593909252879052815473ffffffffffffffffffffffffffffffffffffffff19161790558361070781611211565b94505050508080610717906110a1565b9150506105a1565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60005b82518110156107b25760008382815181106107605761076061105f565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031661079d848284610a53565b505080806107aa906110a1565b915050610743565b50505050565b6001600160a01b03821661083f5780511561083b5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100ba565b5050565b60008151116108b65760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100ba565b6001600160a01b03821630146108e8576108e8826040518060600160405280602881526020016112a060289139610d4f565b600080836001600160a01b031683604051610903919061123c565b600060405180830381855af49150503d806000811461093e576040519150601f19603f3d011682016040523d82523d6000602084013e610943565b606091505b5091509150816107b25780511561096e578060405162461bcd60e51b81526004016100ba9190611258565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f766572746564000000000000000000000000000000000000000000000000000060648201526084016100ba565b6109fe816040518060600160405280602481526020016112c860249139610d4f565b6002820180546001600160a01b03909216600081815260019485016020908152604082208601859055948401835591825292902001805473ffffffffffffffffffffffffffffffffffffffff19169091179055565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046bffffffffffffffffffffffff169291610aa791611272565b9050808214610b9e576001600160a01b03841660009081526001860160205260408120805483908110610adc57610adc61105f565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610b2d57610b2d61105f565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6bffffffffffffffffffffffff8516021790555b6001600160a01b03841660009081526001860160205260409020805480610bc757610bc7611289565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b0319851682528690526040812081905581900361010d576002850154600090610c2a90600190611272565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ce6576000876002018381548110610c6957610c6961105f565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610c9a57610c9a61105f565b6000918252602080832091909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610cf957610cf9611289565b600082815260208082208301600019908101805473ffffffffffffffffffffffffffffffffffffffff191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816107b25760405162461bcd60e51b81526004016100ba9190611258565b80356001600160a01b0381168114610d8757600080fd5b919050565b60008083601f840112610d9e57600080fd5b50813567ffffffffffffffff811115610db657600080fd5b602083019150836020828501011115610dce57600080fd5b9250929050565b600080600080600060608688031215610ded57600080fd5b853567ffffffffffffffff80821115610e0557600080fd5b818801915088601f830112610e1957600080fd5b813581811115610e2857600080fd5b8960208260051b8501011115610e3d57600080fd5b60208301975080965050610e5360208901610d70565b94506040880135915080821115610e6957600080fd5b50610e7688828901610d8c565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610ec057610ec0610e87565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610eef57610eef610e87565b604052919050565b600067ffffffffffffffff821115610f1157610f11610e87565b5060051b60200190565b6000610f2e610f2984610ef7565b610ec6565b83815260208082019190600586811b860136811115610f4c57600080fd5b865b8181101561105257803567ffffffffffffffff80821115610f6f5760008081fd5b818a01915060608236031215610f855760008081fd5b610f8d610e9d565b610f9683610d70565b81528683013560038110610faa5760008081fd5b8188015260408381013583811115610fc25760008081fd5b939093019236601f850112610fd957600092508283fd5b83359250610fe9610f2984610ef7565b83815292871b840188019288810190368511156110065760008081fd5b948901945b8486101561103b5785356001600160e01b03198116811461102c5760008081fd5b8252948901949089019061100b565b918301919091525088525050948301948301610f4e565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110b3576110b361108b565b5060010190565b60005b838110156110d55781810151838201526020016110bd565b838111156107b25750506000910152565b600081518084526110fe8160208601602086016110ba565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156111e157607f198a850301865281518885016001600160a01b038251168652848201516003811061118057634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156111cc5783516001600160e01b03191682529286019260019290920191908601906111a2565b5097850197955050509082019060010161113b565b50506001600160a01b038a1690880152868103604088015261120381896110e6565b9a9950505050505050505050565b60006bffffffffffffffffffffffff8083168181036112325761123261108b565b6001019392505050565b6000825161124e8184602087016110ba565b9190910192915050565b60208152600061126b60208301846110e6565b9392505050565b6000828210156112845761128461108b565b500390565b634e487b7160e01b600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212206cc792acb64c21764e52cc287ad2a0c1f623ba33a027bec5887940919e3fa7c764736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\nimport \"./IDiamondCut.sol\";\nimport \"./DiamondStorage.sol\";\nimport \"../access/ownable/OwnableInternal.sol\";\n\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\n// The loupe functions are required by the EIP2535 Diamonds standard\n\n/**\n * @title Diamond - Cut\n * @notice Standard EIP-2535 cut functionality to add, replace and remove facets from a diamond.\n *\n * @custom:type eip-2535-facet\n * @custom:category Diamonds\n * @custom:provides-interfaces 0x1f931c1c\n */\ncontract DiamondCut is IDiamondCut, OwnableInternal {\n    /// @notice Add/replace/remove any number of functions and optionally execute\n    ///         a function with delegatecall\n    /// @param _diamondCut Contains the facet addresses and function selectors\n    /// @param _init The address of the contract or facet to execute _calldata\n    /// @param _calldata A function call, including function selector and arguments\n    ///                  _calldata is executed with delegatecall on _init\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external override onlyOwner {\n        DiamondStorage.diamondCut(_diamondCut, _init, _calldata);\n    }\n}\n"},"flair-sdk:diamond/DiamondLoupe":{"fqn":"flair-sdk:diamond/DiamondLoupe","version":"2.4.4","address":{"3":"0x9d938a88094296ff207966671bBCAF14Bf28286f","4":"0x702355611a2d7F54275f9d6660082F2A72Ba5DF6","5":"0xb6008DA1e10C37F3834F0bF466a168cd1Fc5A6A5","goerli":"0xb6008DA1e10C37F3834F0bF466a168cd1Fc5A6A5","rinkeby":"0x702355611a2d7F54275f9d6660082F2A72Ba5DF6","ropsten":"0x9d938a88094296ff207966671bBCAF14Bf28286f"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"DiamondLoupe","sourceName":"src/diamond/DiamondLoupe.sol","abi":[{"inputs":[{"internalType":"bytes4","name":"_functionSelector","type":"bytes4"}],"name":"facetAddress","outputs":[{"internalType":"address","name":"facetAddress_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facetAddresses","outputs":[{"internalType":"address[]","name":"facetAddresses_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_facet","type":"address"}],"name":"facetFunctionSelectors","outputs":[{"internalType":"bytes4[]","name":"facetFunctionSelectors_","type":"bytes4[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facets","outputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondLoupe.Facet[]","name":"facets_","type":"tuple[]"}],"stateMutability":"view","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506106c5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806352ef6b2c146100515780637a0ed6271461006f578063adfca15e14610084578063cdffacc6146100a4575b600080fd5b610059610126565b6040516100669190610490565b60405180910390f35b6100776101ab565b604051610066919061053a565b6100976100923660046105b7565b61039d565b60405161006691906105e7565b61010e6100b23660046105fa565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610066565b606060007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600281018054604080516020808402820181019092528281529394508301828280156101a057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610182575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff81111561020b5761020b61063c565b60405190808252806020026020018201604052801561025157816020015b6040805180820190915260008152606060208201528152602001906001900390816102295790505b50925060005b8181101561039757600083600201828154811061027657610276610652565b9060005260206000200160009054906101000a90046001600160a01b03169050808583815181106102a9576102a9610652565b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561035d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161030a5790505b505050505085838151811061037457610374610652565b60200260200101516020018190525050808061038f90610668565b915050610257565b50505090565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092919083018282801561048357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104305790505b5050505050915050919050565b6020808252825182820181905260009190848201906040850190845b818110156104d15783516001600160a01b0316835292840192918401916001016104ac565b50909695505050505050565b600081518084526020808501945080840160005b8381101561052f5781517fffffffff0000000000000000000000000000000000000000000000000000000016875295820195908201906001016104f1565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156105a957888303603f19018552815180516001600160a01b03168452870151878401879052610596878501826104dd565b9588019593505090860190600101610561565b509098975050505050505050565b6000602082840312156105c957600080fd5b81356001600160a01b03811681146105e057600080fd5b9392505050565b6020815260006105e060208301846104dd565b60006020828403121561060c57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146105e057600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161068857634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220956854b6a36937cc51d45b68549ced6d1e10b5ecc557b2b25cd11eda0e834a6464736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806352ef6b2c146100515780637a0ed6271461006f578063adfca15e14610084578063cdffacc6146100a4575b600080fd5b610059610126565b6040516100669190610490565b60405180910390f35b6100776101ab565b604051610066919061053a565b6100976100923660046105b7565b61039d565b60405161006691906105e7565b61010e6100b23660046105fa565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610066565b606060007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600281018054604080516020808402820181019092528281529394508301828280156101a057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610182575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff81111561020b5761020b61063c565b60405190808252806020026020018201604052801561025157816020015b6040805180820190915260008152606060208201528152602001906001900390816102295790505b50925060005b8181101561039757600083600201828154811061027657610276610652565b9060005260206000200160009054906101000a90046001600160a01b03169050808583815181106102a9576102a9610652565b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561035d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161030a5790505b505050505085838151811061037457610374610652565b60200260200101516020018190525050808061038f90610668565b915050610257565b50505090565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092919083018282801561048357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104305790505b5050505050915050919050565b6020808252825182820181905260009190848201906040850190845b818110156104d15783516001600160a01b0316835292840192918401916001016104ac565b50909695505050505050565b600081518084526020808501945080840160005b8381101561052f5781517fffffffff0000000000000000000000000000000000000000000000000000000016875295820195908201906001016104f1565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156105a957888303603f19018552815180516001600160a01b03168452870151878401879052610596878501826104dd565b9588019593505090860190600101610561565b509098975050505050505050565b6000602082840312156105c957600080fd5b81356001600160a01b03811681146105e057600080fd5b9392505050565b6020815260006105e060208301846104dd565b60006020828403121561060c57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146105e057600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161068857634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220956854b6a36937cc51d45b68549ced6d1e10b5ecc557b2b25cd11eda0e834a6464736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport \"./DiamondStorage.sol\";\nimport \"./IDiamondLoupe.sol\";\n\n// The functions in DiamondLoupe MUST be added to a diamond.\n// The EIP-2535 Diamond standard requires these functions.\n\n/**\n * @title Diamond - Loupe\n * @notice Standard EIP-2535 loupe functions to allow inspecting a diamond for explorers.\n *\n * @custom:type eip-2535-facet\n * @custom:category Diamonds\n * @custom:provides-interfaces 0x48e2b093\n */\ncontract DiamondLoupe is IDiamondLoupe {\n    /// @notice Gets all facets and their selectors.\n    /// @return facets_ Facet\n    function facets() external view override returns (Facet[] memory facets_) {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        uint256 numFacets = l.facetAddresses.length;\n        facets_ = new Facet[](numFacets);\n        for (uint256 i; i < numFacets; i++) {\n            address facetAddress_ = l.facetAddresses[i];\n            facets_[i].facetAddress = facetAddress_;\n            facets_[i].functionSelectors = l.facetFunctionSelectors[facetAddress_].functionSelectors;\n        }\n    }\n\n    /// @notice Gets all the function selectors provided by a facet.\n    /// @param _facet The facet address.\n    /// @return facetFunctionSelectors_\n    function facetFunctionSelectors(address _facet)\n        external\n        view\n        override\n        returns (bytes4[] memory facetFunctionSelectors_)\n    {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        facetFunctionSelectors_ = l.facetFunctionSelectors[_facet].functionSelectors;\n    }\n\n    /// @notice Get all the facet addresses used by a diamond.\n    /// @return facetAddresses_\n    function facetAddresses() external view override returns (address[] memory facetAddresses_) {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        facetAddresses_ = l.facetAddresses;\n    }\n\n    /// @notice Gets the facet that supports the given selector.\n    /// @dev If facet is not found return address(0).\n    /// @param _functionSelector The function selector.\n    /// @return facetAddress_ The facet address.\n    function facetAddress(bytes4 _functionSelector) external view override returns (address facetAddress_) {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        facetAddress_ = l.selectorToFacetAndPosition[_functionSelector].facetAddress;\n    }\n}\n"},"flair-sdk:token/ERC1155/ERC1155":{"fqn":"flair-sdk:token/ERC1155/ERC1155","version":"2.4.4","address":{"3":"0x1FAaCD621bd3B14F3494Be13c7Cf85334EC3F492","4":"0x724C344e5a9e01997D542F99ef0D2f7B419819de","5":"0xeFC898Ef20d668e418a399b2b3a039b7B55f92eB","goerli":"0xeFC898Ef20d668e418a399b2b3a039b7B55f92eB","rinkeby":"0x724C344e5a9e01997D542F99ef0D2f7B419819de","ropsten":"0x1FAaCD621bd3B14F3494Be13c7Cf85334EC3F492"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155","sourceName":"src/token/ERC1155/ERC1155.sol","abi":[{"inputs":[],"name":"SenderIsNotSelf","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatchByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnablePausedUntil","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"existsBatch","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ticketTokenIds","type":"uint256[]"}],"name":"locked","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"locked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"maxSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"totalSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unlockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50612be1806100206000396000f3fe608060405234801561001057600080fd5b50600436106101815760003560e01c8063869f7594116100d8578063b164884b1161008c578063e985e9c511610066578063e985e9c514610342578063f242432a1461039d578063f5298aca146103b057600080fd5b8063b164884b14610309578063bd85b0391461031c578063bf7bab731461032f57600080fd5b8063a22cb465116100bd578063a22cb465146102d0578063a47fe40f146102e3578063a91a988a146102f657600080fd5b8063869f7594146102aa578063983da156146102bd57600080fd5b80634e1273f41161013a5780636708a990116101145780636708a990146102715780636b20c4541461028457806377954ac21461029757600080fd5b80634e1273f41461020e5780634f558e791461022e57806352d0a6bb1461025157600080fd5b806314e35aa41161016b57806314e35aa4146101c15780632eb2c2d6146101e857806348f2f536146101fb57600080fd5b8062fdd58e146101865780630ad2bbac146101ac575b600080fd5b6101996101943660046122ba565b6103c3565b6040519081526020015b60405180910390f35b6101bf6101ba3660046123bc565b6103d6565b005b7f20cb9ad5a22f74f90c7fecbece6b6ab3beb2a63812efb8693c5ff39f2b73ee0f54610199565b6101bf6101f63660046124a4565b610406565b6101bf61020936600461254e565b6104db565b61022161021c366004612581565b610506565b6040516101a39190612687565b61024161023c36600461269a565b61072d565b60405190151581526020016101a3565b61026461025f3660046126ff565b610764565b6040516101a39190612741565b6101bf61027f36600461254e565b610843565b6101bf6102923660046123bc565b61086e565b6102216102a53660046126ff565b610955565b6101996102b836600461269a565b610a25565b6101bf6102cb36600461254e565b610a58565b6101bf6102de366004612798565b610a83565b6102216102f13660046126ff565b610b8f565b6102216103043660046127cf565b610c5f565b6101bf610317366004612822565b610d46565b61019961032a36600461269a565b610d78565b61019961033d3660046122ba565b610dab565b610241610350366004612883565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101bf6103ab3660046128b6565b610df3565b6101bf6103be36600461254e565b610ebb565b60006103cf8383610fa2565b9392505050565b3033146103f6576040516328be0e2160e21b815260040160405180910390fd5b610401838383611067565b505050565b336001600160a01b03861681148061046257506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104c55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084015b60405180910390fd5b6104d38187878787876112de565b505050505050565b3033146104fb576040516328be0e2160e21b815260040160405180910390fd5b6104018383836112fa565b6060815183511461057f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104bc565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156105be576105be6122e4565b6040519080825280602002602001820160405280156105e7578160200160208202803683370190505b50905060005b85518110156107245760006001600160a01b03168682815181106106135761061361291b565b60200260200101516001600160a01b0316036106975760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104bc565b8260008683815181106106ac576106ac61291b565b6020026020010151815260200190815260200160002060008783815181106106d6576106d661291b565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106107115761071161291b565b60209081029190910101526001016105ed565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b606060008267ffffffffffffffff811115610781576107816122e4565b6040519080825280602002602001820160405280156107aa578160200160208202803683370190505b50905060005b8381101561083b576108078585838181106107cd576107cd61291b565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040902054151590565b8282815181106108195761081961291b565b911515602092830291909101909101528061083381612947565b9150506107b0565b509392505050565b303314610863576040516328be0e2160e21b815260040160405180910390fd5b610401838383611483565b6001600160a01b0383163314806108f757503063e985e9c584336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190612960565b6103f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104bc565b606060008267ffffffffffffffff811115610972576109726122e4565b60405190808252806020026020018201604052801561099b578160200160208202803683370190505b50905060005b8381101561083b576109f68585838181106109be576109be61291b565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604090205490565b828281518110610a0857610a0861291b565b602090810291909101015280610a1d81612947565b9150506109a1565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604081205461075e565b303314610a78576040516328be0e2160e21b815260040160405180910390fd5b610401838383611540565b336001600160a01b0383168103610b025760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104bc565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610bac57610bac6122e4565b604051908082528060200260200182016040528015610bd5578160200160208202803683370190505b50905060005b8381101561083b57610c30858583818110610bf857610bf861291b565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090205490565b828281518110610c4257610c4261291b565b602090810291909101015280610c5781612947565b915050610bdb565b606060008267ffffffffffffffff811115610c7c57610c7c6122e4565b604051908082528060200260200182016040528015610ca5578160200160208202803683370190505b50905060005b8381101561072457610d1786868684818110610cc957610cc961291b565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610d2957610d2961291b565b602090810291909101015280610d3e81612947565b915050610cab565b303314610d66576040516328be0e2160e21b815260040160405180910390fd5b610d7284848484611607565b50505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205461075e565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b287527820602090815260408083208484529091528120546103cf565b336001600160a01b038616811480610e4f57506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610ead5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104bc565b6104d3818787878787611742565b6001600160a01b038316331480610f4457503063e985e9c584336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f449190612960565b6104fb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104bc565b60006001600160a01b0383166110205760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104bc565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b6001600160a01b0383166110c95760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104bc565b805182511461112b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104bc565b600033905061114e8185600086866040518060200160405280600081525061175e565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b845181101561127e57600085828151811061118f5761118f61291b565b602002602001015190508482815181106111ab576111ab61291b565b602090810291909101810151600083815285835260408082206001600160a01b038c168352909352919091205410156112325760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104bc565b8482815181106112445761124461291b565b602090810291909101810151600092835284825260408084206001600160a01b038b16855290925291208054919091039055600101611172565b5060006001600160a01b0316856001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516112cf92919061297d565b60405180910390a45050505050565b6112ec86868686868661176c565b6104d38686868686866119f9565b6001600160a01b03831661135c5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104bc565b3361138b8185600061136d87611ba7565b61137687611ba7565b6040518060200160405280600081525061175e565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b0388168452918290529091205483111561142a5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104bc565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016112cf565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b2875278206020908152604080832085845291829052909120548211156115175760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104bc565b600083815260208290526040812080548492906115359084906129ab565b909155505050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482906115918686610fa2565b61159b91906129ab565b10156115e95760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104bc565b600083815260208290526040812080548492906115359084906129c2565b336001600160a01b0385166116845760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104bc565b6116a38160008761169488611ba7565b61169d88611ba7565b8761175e565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b0389168452909152812080548592906116f49084906129c2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016112cf565b611750868686868686611bf2565b6104d3868686868686611dbb565b6104d3868686868686611eb7565b6001600160a01b0384166117d05760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104bc565b81518351146118325760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104bc565b61184086868686868661175e565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b84518110156119985760008582815181106118815761188161291b565b60200260200101519050600085838151811061189f5761189f61291b565b602090810291909101810151600084815286835260408082206001600160a01b038e1683529093529190912054909150818110156119455760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104bc565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a16815290812080546001959095019483929061198b9084906129c2565b9091555061186492505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516119e892919061297d565b60405180910390a450505050505050565b6001600160a01b0384163b156104d35760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611a3d9089908990889088908890600401612a27565b6020604051808303816000875af1925050508015611a78575060408051601f3d908101601f19168201909252611a7591810190612a85565b60015b611b2d57611a84612aaf565b806308c379a003611abd5750611a98612acb565b80611aa35750611abf565b8060405162461bcd60e51b81526004016104bc9190612b55565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104bc565b6001600160e01b0319811663bc197c8160e01b14611b9e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104bc565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611be157611be161291b565b602090810291909101015292915050565b6001600160a01b038416611c565760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104bc565b611c74868686611c6587611ba7565b611c6e87611ba7565b8661175e565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038a1685529091529091205483811015611d2d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104bc565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290611d6c9084906129c2565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016119e8565b6001600160a01b0384163b156104d35760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611dff9089908990889088908890600401612b68565b6020604051808303816000875af1925050508015611e3a575060408051601f3d908101601f19168201909252611e3791810190612a85565b60015b611e4657611a84612aaf565b6001600160e01b0319811663f23a6e6160e01b14611b9e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104bc565b6001600160a01b03851615611ff35760005b8351811015611ff157828181518110611ee457611ee461291b565b6020026020010151611f137f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782090565b6000016000886001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110611f4d57611f4d61291b565b6020026020010151815260200190815260200160002054611f8788878581518110611f7a57611f7a61291b565b6020026020010151610fa2565b611f9191906129ab565b1015611fdf5760405162461bcd60e51b815260206004820152600660248201527f4c4f434b4544000000000000000000000000000000000000000000000000000060448201526064016104bc565b80611fe981612947565b915050611ec9565b505b6104d38686868686866001600160a01b03851661216d577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea57f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b85518110156121695784818151811061206a5761206a61291b565b60200260200101518360008884815181106120875761208761291b565b6020026020010151815260200190815260200160002060008282546120ac91906129c2565b925050819055508160008783815181106120c8576120c861291b565b60200260200101518152602001908152602001600020548360008884815181106120f4576120f461291b565b602002602001015181526020019081526020016000205411156121595760405162461bcd60e51b815260206004820152601160248201527f535550504c595f4558434545445f4d415800000000000000000000000000000060448201526064016104bc565b61216281612947565b905061204f565b5050505b6001600160a01b0384166104d3577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea560005b84518110156122945760008582815181106121bc576121bc61291b565b6020026020010151905060008583815181106121da576121da61291b565b602002602001015190506000846000848152602001908152602001600020549050818110156122715760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016104bc565b6000928352602085905260409092209103905561228d81612947565b905061219f565b5050505050505050565b80356001600160a01b03811681146122b557600080fd5b919050565b600080604083850312156122cd57600080fd5b6122d68361229e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612320576123206122e4565b6040525050565b600067ffffffffffffffff821115612341576123416122e4565b5060051b60200190565b600082601f83011261235c57600080fd5b8135602061236982612327565b60405161237682826122fa565b83815260059390931b850182019282810191508684111561239657600080fd5b8286015b848110156123b1578035835291830191830161239a565b509695505050505050565b6000806000606084860312156123d157600080fd5b6123da8461229e565b9250602084013567ffffffffffffffff808211156123f757600080fd5b6124038783880161234b565b9350604086013591508082111561241957600080fd5b506124268682870161234b565b9150509250925092565b600082601f83011261244157600080fd5b813567ffffffffffffffff81111561245b5761245b6122e4565b604051612472601f8301601f1916602001826122fa565b81815284602083860101111561248757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156124bc57600080fd5b6124c58661229e565b94506124d36020870161229e565b9350604086013567ffffffffffffffff808211156124f057600080fd5b6124fc89838a0161234b565b9450606088013591508082111561251257600080fd5b61251e89838a0161234b565b9350608088013591508082111561253457600080fd5b5061254188828901612430565b9150509295509295909350565b60008060006060848603121561256357600080fd5b61256c8461229e565b95602085013595506040909401359392505050565b6000806040838503121561259457600080fd5b823567ffffffffffffffff808211156125ac57600080fd5b818501915085601f8301126125c057600080fd5b813560206125cd82612327565b6040516125da82826122fa565b83815260059390931b85018201928281019150898411156125fa57600080fd5b948201945b8386101561261f576126108661229e565b825294820194908201906125ff565b9650508601359250508082111561263557600080fd5b506126428582860161234b565b9150509250929050565b600081518084526020808501945080840160005b8381101561267c57815187529582019590820190600101612660565b509495945050505050565b6020815260006103cf602083018461264c565b6000602082840312156126ac57600080fd5b5035919050565b60008083601f8401126126c557600080fd5b50813567ffffffffffffffff8111156126dd57600080fd5b6020830191508360208260051b85010111156126f857600080fd5b9250929050565b6000806020838503121561271257600080fd5b823567ffffffffffffffff81111561272957600080fd5b612735858286016126b3565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561277b57835115158352928401929184019160010161275d565b50909695505050505050565b801515811461279557600080fd5b50565b600080604083850312156127ab57600080fd5b6127b48361229e565b915060208301356127c481612787565b809150509250929050565b6000806000604084860312156127e457600080fd5b6127ed8461229e565b9250602084013567ffffffffffffffff81111561280957600080fd5b612815868287016126b3565b9497909650939450505050565b6000806000806080858703121561283857600080fd5b6128418561229e565b93506020850135925060408501359150606085013567ffffffffffffffff81111561286b57600080fd5b61287787828801612430565b91505092959194509250565b6000806040838503121561289657600080fd5b61289f8361229e565b91506128ad6020840161229e565b90509250929050565b600080600080600060a086880312156128ce57600080fd5b6128d78661229e565b94506128e56020870161229e565b93506040860135925060608601359150608086013567ffffffffffffffff81111561290f57600080fd5b61254188828901612430565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161295957612959612931565b5060010190565b60006020828403121561297257600080fd5b81516103cf81612787565b604081526000612990604083018561264c565b82810360208401526129a2818561264c565b95945050505050565b6000828210156129bd576129bd612931565b500390565b600082198211156129d5576129d5612931565b500190565b6000815180845260005b81811015612a00576020818501810151868301820152016129e4565b81811115612a12576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a06040830152612a5360a083018661264c565b8281036060840152612a65818661264c565b90508281036080840152612a7981856129da565b98975050505050505050565b600060208284031215612a9757600080fd5b81516001600160e01b0319811681146103cf57600080fd5b600060033d1115612ac85760046000803e5060005160e01c5b90565b600060443d1015612ad95790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612b0957505050505090565b8285019150815181811115612b215750505050505090565b843d8701016020828501011115612b3b5750505050505090565b612b4a602082860101876122fa565b509095945050505050565b6020815260006103cf60208301846129da565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612ba060a08301846129da565b97965050505050505056fea2646970667358221220899991aaf9c13da7b1e0edab2844e4686bcdccaeeda5f599db56dd6ebde0cc2164736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101815760003560e01c8063869f7594116100d8578063b164884b1161008c578063e985e9c511610066578063e985e9c514610342578063f242432a1461039d578063f5298aca146103b057600080fd5b8063b164884b14610309578063bd85b0391461031c578063bf7bab731461032f57600080fd5b8063a22cb465116100bd578063a22cb465146102d0578063a47fe40f146102e3578063a91a988a146102f657600080fd5b8063869f7594146102aa578063983da156146102bd57600080fd5b80634e1273f41161013a5780636708a990116101145780636708a990146102715780636b20c4541461028457806377954ac21461029757600080fd5b80634e1273f41461020e5780634f558e791461022e57806352d0a6bb1461025157600080fd5b806314e35aa41161016b57806314e35aa4146101c15780632eb2c2d6146101e857806348f2f536146101fb57600080fd5b8062fdd58e146101865780630ad2bbac146101ac575b600080fd5b6101996101943660046122ba565b6103c3565b6040519081526020015b60405180910390f35b6101bf6101ba3660046123bc565b6103d6565b005b7f20cb9ad5a22f74f90c7fecbece6b6ab3beb2a63812efb8693c5ff39f2b73ee0f54610199565b6101bf6101f63660046124a4565b610406565b6101bf61020936600461254e565b6104db565b61022161021c366004612581565b610506565b6040516101a39190612687565b61024161023c36600461269a565b61072d565b60405190151581526020016101a3565b61026461025f3660046126ff565b610764565b6040516101a39190612741565b6101bf61027f36600461254e565b610843565b6101bf6102923660046123bc565b61086e565b6102216102a53660046126ff565b610955565b6101996102b836600461269a565b610a25565b6101bf6102cb36600461254e565b610a58565b6101bf6102de366004612798565b610a83565b6102216102f13660046126ff565b610b8f565b6102216103043660046127cf565b610c5f565b6101bf610317366004612822565b610d46565b61019961032a36600461269a565b610d78565b61019961033d3660046122ba565b610dab565b610241610350366004612883565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101bf6103ab3660046128b6565b610df3565b6101bf6103be36600461254e565b610ebb565b60006103cf8383610fa2565b9392505050565b3033146103f6576040516328be0e2160e21b815260040160405180910390fd5b610401838383611067565b505050565b336001600160a01b03861681148061046257506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104c55760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084015b60405180910390fd5b6104d38187878787876112de565b505050505050565b3033146104fb576040516328be0e2160e21b815260040160405180910390fd5b6104018383836112fa565b6060815183511461057f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104bc565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156105be576105be6122e4565b6040519080825280602002602001820160405280156105e7578160200160208202803683370190505b50905060005b85518110156107245760006001600160a01b03168682815181106106135761061361291b565b60200260200101516001600160a01b0316036106975760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104bc565b8260008683815181106106ac576106ac61291b565b6020026020010151815260200190815260200160002060008783815181106106d6576106d661291b565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020548282815181106107115761071161291b565b60209081029190910101526001016105ed565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b606060008267ffffffffffffffff811115610781576107816122e4565b6040519080825280602002602001820160405280156107aa578160200160208202803683370190505b50905060005b8381101561083b576108078585838181106107cd576107cd61291b565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040902054151590565b8282815181106108195761081961291b565b911515602092830291909101909101528061083381612947565b9150506107b0565b509392505050565b303314610863576040516328be0e2160e21b815260040160405180910390fd5b610401838383611483565b6001600160a01b0383163314806108f757503063e985e9c584336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156108d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f79190612960565b6103f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104bc565b606060008267ffffffffffffffff811115610972576109726122e4565b60405190808252806020026020018201604052801561099b578160200160208202803683370190505b50905060005b8381101561083b576109f68585838181106109be576109be61291b565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604090205490565b828281518110610a0857610a0861291b565b602090810291909101015280610a1d81612947565b9150506109a1565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604081205461075e565b303314610a78576040516328be0e2160e21b815260040160405180910390fd5b610401838383611540565b336001600160a01b0383168103610b025760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104bc565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610bac57610bac6122e4565b604051908082528060200260200182016040528015610bd5578160200160208202803683370190505b50905060005b8381101561083b57610c30858583818110610bf857610bf861291b565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090205490565b828281518110610c4257610c4261291b565b602090810291909101015280610c5781612947565b915050610bdb565b606060008267ffffffffffffffff811115610c7c57610c7c6122e4565b604051908082528060200260200182016040528015610ca5578160200160208202803683370190505b50905060005b8381101561072457610d1786868684818110610cc957610cc961291b565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610d2957610d2961291b565b602090810291909101015280610d3e81612947565b915050610cab565b303314610d66576040516328be0e2160e21b815260040160405180910390fd5b610d7284848484611607565b50505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205461075e565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b287527820602090815260408083208484529091528120546103cf565b336001600160a01b038616811480610e4f57506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610ead5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104bc565b6104d3818787878787611742565b6001600160a01b038316331480610f4457503063e985e9c584336040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610f20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f449190612960565b6104fb5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104bc565b60006001600160a01b0383166110205760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104bc565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b6001600160a01b0383166110c95760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104bc565b805182511461112b5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104bc565b600033905061114e8185600086866040518060200160405280600081525061175e565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b845181101561127e57600085828151811061118f5761118f61291b565b602002602001015190508482815181106111ab576111ab61291b565b602090810291909101810151600083815285835260408082206001600160a01b038c168352909352919091205410156112325760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104bc565b8482815181106112445761124461291b565b602090810291909101810151600092835284825260408084206001600160a01b038b16855290925291208054919091039055600101611172565b5060006001600160a01b0316856001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516112cf92919061297d565b60405180910390a45050505050565b6112ec86868686868661176c565b6104d38686868686866119f9565b6001600160a01b03831661135c5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104bc565b3361138b8185600061136d87611ba7565b61137687611ba7565b6040518060200160405280600081525061175e565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b0388168452918290529091205483111561142a5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104bc565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016112cf565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b2875278206020908152604080832085845291829052909120548211156115175760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104bc565b600083815260208290526040812080548492906115359084906129ab565b909155505050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482906115918686610fa2565b61159b91906129ab565b10156115e95760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104bc565b600083815260208290526040812080548492906115359084906129c2565b336001600160a01b0385166116845760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104bc565b6116a38160008761169488611ba7565b61169d88611ba7565b8761175e565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b0389168452909152812080548592906116f49084906129c2565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016112cf565b611750868686868686611bf2565b6104d3868686868686611dbb565b6104d3868686868686611eb7565b6001600160a01b0384166117d05760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104bc565b81518351146118325760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104bc565b61184086868686868661175e565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b84518110156119985760008582815181106118815761188161291b565b60200260200101519050600085838151811061189f5761189f61291b565b602090810291909101810151600084815286835260408082206001600160a01b038e1683529093529190912054909150818110156119455760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104bc565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a16815290812080546001959095019483929061198b9084906129c2565b9091555061186492505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516119e892919061297d565b60405180910390a450505050505050565b6001600160a01b0384163b156104d35760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611a3d9089908990889088908890600401612a27565b6020604051808303816000875af1925050508015611a78575060408051601f3d908101601f19168201909252611a7591810190612a85565b60015b611b2d57611a84612aaf565b806308c379a003611abd5750611a98612acb565b80611aa35750611abf565b8060405162461bcd60e51b81526004016104bc9190612b55565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104bc565b6001600160e01b0319811663bc197c8160e01b14611b9e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104bc565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611be157611be161291b565b602090810291909101015292915050565b6001600160a01b038416611c565760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104bc565b611c74868686611c6587611ba7565b611c6e87611ba7565b8661175e565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038a1685529091529091205483811015611d2d5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104bc565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290611d6c9084906129c2565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016119e8565b6001600160a01b0384163b156104d35760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611dff9089908990889088908890600401612b68565b6020604051808303816000875af1925050508015611e3a575060408051601f3d908101601f19168201909252611e3791810190612a85565b60015b611e4657611a84612aaf565b6001600160e01b0319811663f23a6e6160e01b14611b9e5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104bc565b6001600160a01b03851615611ff35760005b8351811015611ff157828181518110611ee457611ee461291b565b6020026020010151611f137f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782090565b6000016000886001600160a01b03166001600160a01b031681526020019081526020016000206000868481518110611f4d57611f4d61291b565b6020026020010151815260200190815260200160002054611f8788878581518110611f7a57611f7a61291b565b6020026020010151610fa2565b611f9191906129ab565b1015611fdf5760405162461bcd60e51b815260206004820152600660248201527f4c4f434b4544000000000000000000000000000000000000000000000000000060448201526064016104bc565b80611fe981612947565b915050611ec9565b505b6104d38686868686866001600160a01b03851661216d577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea57f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b85518110156121695784818151811061206a5761206a61291b565b60200260200101518360008884815181106120875761208761291b565b6020026020010151815260200190815260200160002060008282546120ac91906129c2565b925050819055508160008783815181106120c8576120c861291b565b60200260200101518152602001908152602001600020548360008884815181106120f4576120f461291b565b602002602001015181526020019081526020016000205411156121595760405162461bcd60e51b815260206004820152601160248201527f535550504c595f4558434545445f4d415800000000000000000000000000000060448201526064016104bc565b61216281612947565b905061204f565b5050505b6001600160a01b0384166104d3577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea560005b84518110156122945760008582815181106121bc576121bc61291b565b6020026020010151905060008583815181106121da576121da61291b565b602002602001015190506000846000848152602001908152602001600020549050818110156122715760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016104bc565b6000928352602085905260409092209103905561228d81612947565b905061219f565b5050505050505050565b80356001600160a01b03811681146122b557600080fd5b919050565b600080604083850312156122cd57600080fd5b6122d68361229e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715612320576123206122e4565b6040525050565b600067ffffffffffffffff821115612341576123416122e4565b5060051b60200190565b600082601f83011261235c57600080fd5b8135602061236982612327565b60405161237682826122fa565b83815260059390931b850182019282810191508684111561239657600080fd5b8286015b848110156123b1578035835291830191830161239a565b509695505050505050565b6000806000606084860312156123d157600080fd5b6123da8461229e565b9250602084013567ffffffffffffffff808211156123f757600080fd5b6124038783880161234b565b9350604086013591508082111561241957600080fd5b506124268682870161234b565b9150509250925092565b600082601f83011261244157600080fd5b813567ffffffffffffffff81111561245b5761245b6122e4565b604051612472601f8301601f1916602001826122fa565b81815284602083860101111561248757600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156124bc57600080fd5b6124c58661229e565b94506124d36020870161229e565b9350604086013567ffffffffffffffff808211156124f057600080fd5b6124fc89838a0161234b565b9450606088013591508082111561251257600080fd5b61251e89838a0161234b565b9350608088013591508082111561253457600080fd5b5061254188828901612430565b9150509295509295909350565b60008060006060848603121561256357600080fd5b61256c8461229e565b95602085013595506040909401359392505050565b6000806040838503121561259457600080fd5b823567ffffffffffffffff808211156125ac57600080fd5b818501915085601f8301126125c057600080fd5b813560206125cd82612327565b6040516125da82826122fa565b83815260059390931b85018201928281019150898411156125fa57600080fd5b948201945b8386101561261f576126108661229e565b825294820194908201906125ff565b9650508601359250508082111561263557600080fd5b506126428582860161234b565b9150509250929050565b600081518084526020808501945080840160005b8381101561267c57815187529582019590820190600101612660565b509495945050505050565b6020815260006103cf602083018461264c565b6000602082840312156126ac57600080fd5b5035919050565b60008083601f8401126126c557600080fd5b50813567ffffffffffffffff8111156126dd57600080fd5b6020830191508360208260051b85010111156126f857600080fd5b9250929050565b6000806020838503121561271257600080fd5b823567ffffffffffffffff81111561272957600080fd5b612735858286016126b3565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b8181101561277b57835115158352928401929184019160010161275d565b50909695505050505050565b801515811461279557600080fd5b50565b600080604083850312156127ab57600080fd5b6127b48361229e565b915060208301356127c481612787565b809150509250929050565b6000806000604084860312156127e457600080fd5b6127ed8461229e565b9250602084013567ffffffffffffffff81111561280957600080fd5b612815868287016126b3565b9497909650939450505050565b6000806000806080858703121561283857600080fd5b6128418561229e565b93506020850135925060408501359150606085013567ffffffffffffffff81111561286b57600080fd5b61287787828801612430565b91505092959194509250565b6000806040838503121561289657600080fd5b61289f8361229e565b91506128ad6020840161229e565b90509250929050565b600080600080600060a086880312156128ce57600080fd5b6128d78661229e565b94506128e56020870161229e565b93506040860135925060608601359150608086013567ffffffffffffffff81111561290f57600080fd5b61254188828901612430565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161295957612959612931565b5060010190565b60006020828403121561297257600080fd5b81516103cf81612787565b604081526000612990604083018561264c565b82810360208401526129a2818561264c565b95945050505050565b6000828210156129bd576129bd612931565b500390565b600082198211156129d5576129d5612931565b500190565b6000815180845260005b81811015612a00576020818501810151868301820152016129e4565b81811115612a12576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a06040830152612a5360a083018661264c565b8281036060840152612a65818661264c565b90508281036080840152612a7981856129da565b98975050505050505050565b600060208284031215612a9757600080fd5b81516001600160e01b0319811681146103cf57600080fd5b600060033d1115612ac85760046000803e5060005160e01c5b90565b600060443d1015612ad95790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715612b0957505050505090565b8285019150815181811115612b215750505050505090565b843d8701016020828501011115612b3b5750505050505090565b612b4a602082860101876122fa565b509095945050505050565b6020815260006103cf60208301846129da565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612ba060a08301846129da565b97965050505050505056fea2646970667358221220899991aaf9c13da7b1e0edab2844e4686bcdccaeeda5f599db56dd6ebde0cc2164736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./base/ERC1155Base.sol\";\nimport \"./extensions/supply/ERC1155Supply.sol\";\nimport \"./extensions/lockable/ERC1155Lockable.sol\";\nimport \"./extensions/mintable/ERC1155Mintable.sol\";\nimport \"./extensions/burnable/ERC1155Burnable.sol\";\n\n/**\n * @title ERC1155 - Standard\n * @notice Standard EIP-1155 NFTs with core capabilities of Mintable, Burnable and Lockable.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:provides-interfaces 0xd9b67a26 0x744f4bd4 0x813a0876 0xdc290004 0xff3508c6 0xb164884b\n */\ncontract ERC1155 is ERC1155Base, ERC1155Supply, ERC1155Mintable, ERC1155Burnable, ERC1155Lockable {\n    /**\n     * @notice inheritdoc IERC1155Metadata\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override(ERC1155BaseInternal, ERC1155SupplyInternal, ERC1155LockableInternal) {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/burnable/ERC1155BurnableOwnable":{"fqn":"flair-sdk:token/ERC1155/facets/burnable/ERC1155BurnableOwnable","version":"2.4.4","address":{"3":"0x48F9152b91103E158029921C59Ff844d30468288","4":"0x784F5AE3d12E03112564b0318c60653EB84FA4Cf","5":"0xB160C54d8FFc4C55eFE6e1C140E37d37e434D226","goerli":"0xB160C54d8FFc4C55eFE6e1C140E37d37e434D226","rinkeby":"0x784F5AE3d12E03112564b0318c60653EB84FA4Cf","ropsten":"0x48F9152b91103E158029921C59Ff844d30468288"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155BurnableOwnable","sourceName":"src/token/ERC1155/facets/burnable/ERC1155BurnableOwnable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"name":"setBurnablePausedUntil","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b5061015c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063710fb57714610030575b600080fd5b61004361003e36600461010d565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f20cb9ad5a22f74f90c7fecbece6b6ab3beb2a63812efb8693c5ff39f2b73ee0f55565b60006020828403121561011f57600080fd5b503591905056fea26469706673582212206481751c5dc41ee45c4a72583bfe26e5a3e0966c2db927c3a4d20d00d76807aa64736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063710fb57714610030575b600080fd5b61004361003e36600461010d565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f20cb9ad5a22f74f90c7fecbece6b6ab3beb2a63812efb8693c5ff39f2b73ee0f55565b60006020828403121561011f57600080fd5b503591905056fea26469706673582212206481751c5dc41ee45c4a72583bfe26e5a3e0966c2db927c3a4d20d00d76807aa64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"../../extensions/burnable/ERC1155BurnableStorage.sol\";\nimport \"./IERC1155BurnableAdmin.sol\";\n\n/**\n * @title ERC1155 - Burnable - Admin - Ownable\n * @notice Extension of ERC1155 to allow owner to manage burning mechanism.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies eip165:0xdc290004\n * @custom:provides-interfaces 0x710fb577\n */\ncontract ERC1155BurnableOwnable is IERC1155BurnableAdmin, OwnableInternal {\n    using ERC1155BurnableStorage for ERC1155BurnableStorage.Layout;\n\n    function setBurnablePausedUntil(uint256 newTimestamp) public onlyOwner {\n        ERC1155BurnableStorage.layout().pausedUntil = newTimestamp;\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/ERC1155Metadata":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/ERC1155Metadata","version":"2.4.4","address":{"3":"0x9d9Ec7d191a11F38d3941A2A8d656584aF01748e","4":"0x877546CE36fC055d2506aCe87838FD22eED420Be","5":"0x5dd91C4418e15fcca4DB1D01b5C6f875Ca405055","goerli":"0x5dd91C4418e15fcca4DB1D01b5C6f875Ca405055","rinkeby":"0x877546CE36fC055d2506aCe87838FD22eED420Be","ropsten":"0x9d9Ec7d191a11F38d3941A2A8d656584aF01748e"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155Metadata","sourceName":"src/token/ERC1155/facets/metadata/ERC1155Metadata.sol","abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURILocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fallbackURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fallbackURILocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastLockedTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"uriBatch","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uriSuffix","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uriSuffixLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610a18806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635d148e5c116100765780636c0360eb1161005b5780636c0360eb1461016d57806396d7e22914610175578063c4ef3e051461019557600080fd5b80635d148e5c146101135780636b95c5041461013d57600080fd5b8063067f0848146100a85780630c7d9752146100e35780630e89341c146100f85780635503a0e81461010b575b600080fd5b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5460ff165b60405190151581526020015b60405180910390f35b6100eb6101bf565b6040516100da91906107a7565b6100eb6101063660046107c1565b610273565b6100eb6104f8565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec5460ff166100ce565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef1546040519081526020016100da565b6100eb610529565b6101886101833660046107da565b610557565b6040516100da919061084f565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef05460ff166100ce565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb60020180546101f0906108b1565b80601f016020809104026020016040519081016040528092919081815260200182805461021c906108b1565b80156102695780601f1061023e57610100808354040283529160200191610269565b820191906000526020600020905b81548152906001019060200180831161024c57829003601f168201915b5050505050905090565b60008181527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef26020526040812080546060927f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb9290916102d2906108b1565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe906108b1565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b505050505090506000826000018054610363906108b1565b80601f016020809104026020016040519081016040528092919081815260200182805461038f906108b1565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b505050505090506000825111156103f557509392505050565b6000836002018054610406906108b1565b905011156104a55782600201805461041d906108b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610449906108b1565b80156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b50505050509350505050919050565b8051156104e057806104b68661060e565b6040516020016104c79291906108eb565b6040516020818303038152906040529350505050919050565b50506040805160208101909152600081529392505050565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb60040180546101f0906108b1565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb80546101f0906108b1565b606060008267ffffffffffffffff8111156105745761057461091a565b6040519080825280602002602001820160405280156105a757816020015b60608152602001906001900390816105925790505b50905060005b83811015610606576105d68585838181106105ca576105ca610930565b90506020020135610273565b8282815181106105e8576105e8610930565b602002602001018190525080806105fe9061095c565b9150506105ad565b509392505050565b60608160000361065157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561067b57806106658161095c565b91506106749050600a8361098b565b9150610655565b60008167ffffffffffffffff8111156106965761069661091a565b6040519080825280601f01601f1916602001820160405280156106c0576020820181803683370190505b5090505b8415610743576106d560018361099f565b91506106e2600a866109b6565b6106ed9060306109ca565b60f81b81838151811061070257610702610930565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061073c600a8661098b565b94506106c4565b949350505050565b60005b8381101561076657818101518382015260200161074e565b83811115610775576000848401525b50505050565b6000815180845261079381602086016020860161074b565b601f01601f19169290920160200192915050565b6020815260006107ba602083018461077b565b9392505050565b6000602082840312156107d357600080fd5b5035919050565b600080602083850312156107ed57600080fd5b823567ffffffffffffffff8082111561080557600080fd5b818501915085601f83011261081957600080fd5b81358181111561082857600080fd5b8660208260051b850101111561083d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156108a457603f1988860301845261089285835161077b565b94509285019290850190600101610876565b5092979650505050505050565b600181811c908216806108c557607f821691505b6020821081036108e557634e487b7160e01b600052602260045260246000fd5b50919050565b600083516108fd81846020880161074b565b83519083019061091181836020880161074b565b01949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161096e5761096e610946565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261099a5761099a610975565b500490565b6000828210156109b1576109b1610946565b500390565b6000826109c5576109c5610975565b500690565b600082198211156109dd576109dd610946565b50019056fea26469706673582212206b699a61f67d8b0ba84a0d207aba2c3388b5043dc7780fdd9879fd025fd41ce064736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80635d148e5c116100765780636c0360eb1161005b5780636c0360eb1461016d57806396d7e22914610175578063c4ef3e051461019557600080fd5b80635d148e5c146101135780636b95c5041461013d57600080fd5b8063067f0848146100a85780630c7d9752146100e35780630e89341c146100f85780635503a0e81461010b575b600080fd5b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5460ff165b60405190151581526020015b60405180910390f35b6100eb6101bf565b6040516100da91906107a7565b6100eb6101063660046107c1565b610273565b6100eb6104f8565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec5460ff166100ce565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef1546040519081526020016100da565b6100eb610529565b6101886101833660046107da565b610557565b6040516100da919061084f565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef05460ff166100ce565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb60020180546101f0906108b1565b80601f016020809104026020016040519081016040528092919081815260200182805461021c906108b1565b80156102695780601f1061023e57610100808354040283529160200191610269565b820191906000526020600020905b81548152906001019060200180831161024c57829003601f168201915b5050505050905090565b60008181527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef26020526040812080546060927f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb9290916102d2906108b1565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe906108b1565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b505050505090506000826000018054610363906108b1565b80601f016020809104026020016040519081016040528092919081815260200182805461038f906108b1565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b505050505090506000825111156103f557509392505050565b6000836002018054610406906108b1565b905011156104a55782600201805461041d906108b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610449906108b1565b80156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b50505050509350505050919050565b8051156104e057806104b68661060e565b6040516020016104c79291906108eb565b6040516020818303038152906040529350505050919050565b50506040805160208101909152600081529392505050565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb60040180546101f0906108b1565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb80546101f0906108b1565b606060008267ffffffffffffffff8111156105745761057461091a565b6040519080825280602002602001820160405280156105a757816020015b60608152602001906001900390816105925790505b50905060005b83811015610606576105d68585838181106105ca576105ca610930565b90506020020135610273565b8282815181106105e8576105e8610930565b602002602001018190525080806105fe9061095c565b9150506105ad565b509392505050565b60608160000361065157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561067b57806106658161095c565b91506106749050600a8361098b565b9150610655565b60008167ffffffffffffffff8111156106965761069661091a565b6040519080825280601f01601f1916602001820160405280156106c0576020820181803683370190505b5090505b8415610743576106d560018361099f565b91506106e2600a866109b6565b6106ed9060306109ca565b60f81b81838151811061070257610702610930565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061073c600a8661098b565b94506106c4565b949350505050565b60005b8381101561076657818101518382015260200161074e565b83811115610775576000848401525b50505050565b6000815180845261079381602086016020860161074b565b601f01601f19169290920160200192915050565b6020815260006107ba602083018461077b565b9392505050565b6000602082840312156107d357600080fd5b5035919050565b600080602083850312156107ed57600080fd5b823567ffffffffffffffff8082111561080557600080fd5b818501915085601f83011261081957600080fd5b81358181111561082857600080fd5b8660208260051b850101111561083d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156108a457603f1988860301845261089285835161077b565b94509285019290850190600101610876565b5092979650505050505050565b600181811c908216806108c557607f821691505b6020821081036108e557634e487b7160e01b600052602260045260246000fd5b50919050565b600083516108fd81846020880161074b565b83519083019061091181836020880161074b565b01949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161096e5761096e610946565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261099a5761099a610975565b500490565b6000828210156109b1576109b1610946565b500390565b6000826109c5576109c5610975565b500690565b600082198211156109dd576109dd610946565b50019056fea26469706673582212206b699a61f67d8b0ba84a0d207aba2c3388b5043dc7780fdd9879fd025fd41ce064736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./IERC1155Metadata.sol\";\nimport \"./IERC1155MetadataExtra.sol\";\nimport \"./ERC1155MetadataInternal.sol\";\nimport \"./ERC1155MetadataStorage.sol\";\n\n/**\n * @title ERC1155 - Metadata\n * @notice Provides metadata for ERC1155 tokens according to standard. This extension supports base URI, per-token URI, and a fallback URI. You can also freeze URIs until a certain token ID.\n * @dev See https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies eip165:0xd9b67a26\n * @custom:provides-interfaces 0x0e89341c 0x57bbc86d\n */\ncontract ERC1155Metadata is IERC1155Metadata, IERC1155MetadataExtra, ERC1155MetadataInternal {\n    /**\n     * @notice inheritdoc IERC1155Metadata\n     */\n    function uri(uint256 tokenId) public view virtual returns (string memory) {\n        ERC1155MetadataStorage.Layout storage l = ERC1155MetadataStorage.layout();\n\n        string memory _tokenIdURI = l.tokenURIs[tokenId];\n        string memory _baseURI = l.baseURI;\n\n        if (bytes(_tokenIdURI).length > 0) {\n            return _tokenIdURI;\n        } else if (bytes(l.fallbackURI).length > 0) {\n            return l.fallbackURI;\n        } else if (bytes(_baseURI).length > 0) {\n            return string(abi.encodePacked(_baseURI, Strings.toString(tokenId)));\n        } else {\n            return \"\";\n        }\n    }\n\n    function uriBatch(uint256[] calldata tokenIds) external view returns (string[] memory) {\n        string[] memory uris = new string[](tokenIds.length);\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            uris[i] = uri(tokenIds[i]);\n        }\n\n        return uris;\n    }\n\n    function baseURI() external view returns (string memory) {\n        return ERC1155MetadataStorage.layout().baseURI;\n    }\n\n    function fallbackURI() external view returns (string memory) {\n        return ERC1155MetadataStorage.layout().fallbackURI;\n    }\n\n    function uriSuffix() external view returns (string memory) {\n        return ERC1155MetadataStorage.layout().uriSuffix;\n    }\n\n    function baseURILocked() external view returns (bool) {\n        return ERC1155MetadataStorage.layout().baseURILocked;\n    }\n\n    function fallbackURILocked() external view returns (bool) {\n        return ERC1155MetadataStorage.layout().fallbackURILocked;\n    }\n\n    function uriSuffixLocked() external view returns (bool) {\n        return ERC1155MetadataStorage.layout().uriSuffixLocked;\n    }\n\n    function lastLockedTokenId() external view returns (uint256) {\n        return ERC1155MetadataStorage.layout().lastLockedTokenId;\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/ERC1155MetadataOwnable":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/ERC1155MetadataOwnable","version":"2.4.4","address":{"3":"0xE9fCC8544F378332CAF85A9AbBd1d24872feAd54","4":"0x7b151958c3Fc4261fF3AD87c614163dAB22e7B6B","5":"0x770798EC0CC0F03900F5bEE7c448d40BbFf756e0","goerli":"0x770798EC0CC0F03900F5bEE7c448d40BbFf756e0","rinkeby":"0x7b151958c3Fc4261fF3AD87c614163dAB22e7B6B","ropsten":"0xE9fCC8544F378332CAF85A9AbBd1d24872feAd54"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155MetadataOwnable","sourceName":"src/token/ERC1155/facets/metadata/ERC1155MetadataOwnable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[],"name":"lockBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockFallbackURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockURISuffix","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"lockURIUntil","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newFallbackURI","type":"string"}],"name":"setFallbackURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"newTokenURI","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"string[]","name":"newTokenURIs","type":"string[]"}],"name":"setURIBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newURISuffix","type":"string"}],"name":"setURISuffix","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610ec8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806355f804b311610076578063862440e21161005b578063862440e214610106578063989143ee14610119578063b3dbdcde1461012c57600080fd5b806355f804b3146100e057806381b3e575146100f357600080fd5b806301b98ea0146100a85780630cf14c40146100bd57806318249af7146100c557806353df5c7c146100d8575b600080fd5b6100bb6100b6366004610b06565b610134565b005b6100bb610250565b6100bb6100d3366004610bb4565b6102fc565b6100bb6103b8565b6100bb6100ee366004610bb4565b610462565b6100bb610101366004610bb4565b61051a565b6100bb610114366004610bf6565b6105d2565b6100bb610127366004610c42565b610690565b6100bb610734565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101b25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b83811015610249576102378585838181106101d2576101d2610c5b565b905060200201358484848181106101eb576101eb610c5b565b90506020028101906101fd9190610c71565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b8061024181610cb8565b9150506101b5565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102c95760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee805460ff19166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103755760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c292505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104315760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104db5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061098592505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105935760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109f792505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461064b5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b61068b8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107095760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b610731817f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef155565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107ad5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef0805460ff19166001179055565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef154821161084e5760405162461bcd60e51b815260206004820181905260248201527f455243313135354d657461646174613a20746f6b656e555249206c6f636b656460448201526064016101a9565b60008281527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef2602052604090206108858282610d7d565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b826040516108b69190610e3d565b60405180910390a25050565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5460ff161561095a5760405162461bcd60e51b815260206004820152602360248201527f455243313135354d657461646174613a2066616c6c6261636b555249206c6f6360448201527f6b6564000000000000000000000000000000000000000000000000000000000060648201526084016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb6103b48282610d7d565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec5460ff161561095a5760405162461bcd60e51b815260206004820152601f60248201527f455243313135354d657461646174613a2062617365555249206c6f636b65640060448201526064016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef05460ff1615610a8f5760405162461bcd60e51b815260206004820152602160248201527f455243313135354d657461646174613a20757269537566666978206c6f636b6560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceef6103b48282610d7d565b60008083601f840112610acc57600080fd5b50813567ffffffffffffffff811115610ae457600080fd5b6020830191508360208260051b8501011115610aff57600080fd5b9250929050565b60008060008060408587031215610b1c57600080fd5b843567ffffffffffffffff80821115610b3457600080fd5b610b4088838901610aba565b90965094506020870135915080821115610b5957600080fd5b50610b6687828801610aba565b95989497509550505050565b60008083601f840112610b8457600080fd5b50813567ffffffffffffffff811115610b9c57600080fd5b602083019150836020828501011115610aff57600080fd5b60008060208385031215610bc757600080fd5b823567ffffffffffffffff811115610bde57600080fd5b610bea85828601610b72565b90969095509350505050565b600080600060408486031215610c0b57600080fd5b83359250602084013567ffffffffffffffff811115610c2957600080fd5b610c3586828701610b72565b9497909650939450505050565b600060208284031215610c5457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610c8857600080fd5b83018035915067ffffffffffffffff821115610ca357600080fd5b602001915036819003821315610aff57600080fd5b600060018201610cd857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610d0957607f821691505b602082108103610d2957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561068b57600081815260208120601f850160051c81016020861015610d565750805b601f850160051c820191505b81811015610d7557828155600101610d62565b505050505050565b815167ffffffffffffffff811115610d9757610d97610cdf565b610dab81610da58454610cf5565b84610d2f565b602080601f831160018114610de05760008415610dc85750858301515b600019600386901b1c1916600185901b178555610d75565b600085815260208120601f198616915b82811015610e0f57888601518255948401946001909101908401610df0565b5085821015610e2d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015610e6a57858101830151858201604001528201610e4e565b81811115610e7c576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220ae020e48cc3c28b4c7875224126fd3550753c52dddbfc9cfc55d84de34493be764736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100a35760003560e01c806355f804b311610076578063862440e21161005b578063862440e214610106578063989143ee14610119578063b3dbdcde1461012c57600080fd5b806355f804b3146100e057806381b3e575146100f357600080fd5b806301b98ea0146100a85780630cf14c40146100bd57806318249af7146100c557806353df5c7c146100d8575b600080fd5b6100bb6100b6366004610b06565b610134565b005b6100bb610250565b6100bb6100d3366004610bb4565b6102fc565b6100bb6103b8565b6100bb6100ee366004610bb4565b610462565b6100bb610101366004610bb4565b61051a565b6100bb610114366004610bf6565b6105d2565b6100bb610127366004610c42565b610690565b6100bb610734565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101b25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b83811015610249576102378585838181106101d2576101d2610c5b565b905060200201358484848181106101eb576101eb610c5b565b90506020028101906101fd9190610c71565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b8061024181610cb8565b9150506101b5565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102c95760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee805460ff19166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103755760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c292505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104315760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104db5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061098592505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105935760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109f792505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461064b5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b61068b8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107095760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b610731817f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef155565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107ad5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef0805460ff19166001179055565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef154821161084e5760405162461bcd60e51b815260206004820181905260248201527f455243313135354d657461646174613a20746f6b656e555249206c6f636b656460448201526064016101a9565b60008281527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef2602052604090206108858282610d7d565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b826040516108b69190610e3d565b60405180910390a25050565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5460ff161561095a5760405162461bcd60e51b815260206004820152602360248201527f455243313135354d657461646174613a2066616c6c6261636b555249206c6f6360448201527f6b6564000000000000000000000000000000000000000000000000000000000060648201526084016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb6103b48282610d7d565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec5460ff161561095a5760405162461bcd60e51b815260206004820152601f60248201527f455243313135354d657461646174613a2062617365555249206c6f636b65640060448201526064016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef05460ff1615610a8f5760405162461bcd60e51b815260206004820152602160248201527f455243313135354d657461646174613a20757269537566666978206c6f636b6560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceef6103b48282610d7d565b60008083601f840112610acc57600080fd5b50813567ffffffffffffffff811115610ae457600080fd5b6020830191508360208260051b8501011115610aff57600080fd5b9250929050565b60008060008060408587031215610b1c57600080fd5b843567ffffffffffffffff80821115610b3457600080fd5b610b4088838901610aba565b90965094506020870135915080821115610b5957600080fd5b50610b6687828801610aba565b95989497509550505050565b60008083601f840112610b8457600080fd5b50813567ffffffffffffffff811115610b9c57600080fd5b602083019150836020828501011115610aff57600080fd5b60008060208385031215610bc757600080fd5b823567ffffffffffffffff811115610bde57600080fd5b610bea85828601610b72565b90969095509350505050565b600080600060408486031215610c0b57600080fd5b83359250602084013567ffffffffffffffff811115610c2957600080fd5b610c3586828701610b72565b9497909650939450505050565b600060208284031215610c5457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610c8857600080fd5b83018035915067ffffffffffffffff821115610ca357600080fd5b602001915036819003821315610aff57600080fd5b600060018201610cd857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610d0957607f821691505b602082108103610d2957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561068b57600081815260208120601f850160051c81016020861015610d565750805b601f850160051c820191505b81811015610d7557828155600101610d62565b505050505050565b815167ffffffffffffffff811115610d9757610d97610cdf565b610dab81610da58454610cf5565b84610d2f565b602080601f831160018114610de05760008415610dc85750858301515b600019600386901b1c1916600185901b178555610d75565b600085815260208120601f198616915b82811015610e0f57888601518255948401946001909101908401610df0565b5085821015610e2d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015610e6a57858101830151858201604001528201610e4e565b81811115610e7c576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220ae020e48cc3c28b4c7875224126fd3550753c52dddbfc9cfc55d84de34493be764736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../../../access/ownable/OwnableInternal.sol\";\n\nimport \"./ERC1155MetadataInternal.sol\";\nimport \"./ERC1155MetadataStorage.sol\";\nimport \"./IERC1155MetadataAdmin.sol\";\n\n/**\n * @title ERC1155 - Metadata - Admin - Ownable\n * @notice Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\n * @dev See https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies eip165:0x0e89341c\n * @custom:provides-interfaces 0x3f963a7f\n */\ncontract ERC1155MetadataOwnable is IERC1155MetadataAdmin, ERC1155MetadataInternal, OwnableInternal {\n    function setBaseURI(string calldata newBaseURI) public onlyOwner {\n        _setBaseURI(newBaseURI);\n    }\n\n    function setFallbackURI(string calldata newFallbackURI) public onlyOwner {\n        _setFallbackURI(newFallbackURI);\n    }\n\n    function setURISuffix(string calldata newURISuffix) public onlyOwner {\n        _setURISuffix(newURISuffix);\n    }\n\n    function setURI(uint256 tokenId, string calldata newTokenURI) public onlyOwner {\n        _setURI(tokenId, newTokenURI);\n    }\n\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) public onlyOwner {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            _setURI(tokenIds[i], newTokenURIs[i]);\n        }\n    }\n\n    function lockBaseURI() public onlyOwner {\n        _lockBaseURI();\n    }\n\n    function lockFallbackURI() public onlyOwner {\n        _lockFallbackURI();\n    }\n\n    function lockURISuffix() public onlyOwner {\n        _lockURISuffix();\n    }\n\n    function lockURIUntil(uint256 tokenId) public onlyOwner {\n        _lockURIUntil(tokenId);\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByOwner":{"fqn":"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByOwner","version":"2.4.4","address":{"3":"0x00232A8326af43515C8413A00b49282e25f50017","4":"0x3D8C1631b5666D2E0C9a3D5618d41d4E70DCcb84","5":"0x8a94614B8A2a5f464cB1b521325fE5e7cf4dCdB8","goerli":"0x8a94614B8A2a5f464cB1b521325fE5e7cf4dCdB8","rinkeby":"0x3D8C1631b5666D2E0C9a3D5618d41d4E70DCcb84","ropsten":"0x00232A8326af43515C8413A00b49282e25f50017"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155MintByOwner","sourceName":"src/token/ERC1155/facets/minting/ERC1155MintByOwner.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610339806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635135bec114610030575b600080fd5b61004361003e366004610192565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b9061012b908790879087908790600401610282565b600060405180830381600087803b15801561014557600080fd5b505af1158015610159573d6000803e3d6000fd5b5050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156101a857600080fd5b843573ffffffffffffffffffffffffffffffffffffffff811681146101cc57600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff808211156101f757600080fd5b818701915087601f83011261020b57600080fd5b81358181111561021d5761021d610163565b604051601f8201601f19908116603f0116810190838211818310171561024557610245610163565b816040528281528a602084870101111561025e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156102d85785810183015185820160a0015282016102bc565b818111156102ea57600060a083870101525b50601f01601f19169290920160a001969550505050505056fea26469706673582212203e7480709fded241f76290028d3a2456f40942830e2cd3f51f94c71f987b0e9164736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80635135bec114610030575b600080fd5b61004361003e366004610192565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b9061012b908790879087908790600401610282565b600060405180830381600087803b15801561014557600080fd5b505af1158015610159573d6000803e3d6000fd5b5050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156101a857600080fd5b843573ffffffffffffffffffffffffffffffffffffffff811681146101cc57600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff808211156101f757600080fd5b818701915087601f83011261020b57600080fd5b81358181111561021d5761021d610163565b604051601f8201601f19908116603f0116810190838211818310171561024557610245610163565b816040528281528a602084870101111561025e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156102d85785810183015185820160a0015282016102bc565b818111156102ea57600060a083870101525b50601f01601f19169290920160a001969550505050505056fea26469706673582212203e7480709fded241f76290028d3a2456f40942830e2cd3f51f94c71f987b0e9164736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"../../extensions/mintable/IERC1155Mintable.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155MintByOwner.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows owner to mint new tokens.\n */\ncontract ERC1155MintByOwner is IERC1155MintByOwner, OwnableInternal {\n    /**\n     * @inheritdoc IERC1155MintByOwner\n     */\n    function mintByOwner(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual onlyOwner {\n        IERC1155Mintable(address(this)).mintByFacet(to, id, amount, data);\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByOwnerERC2771":{"fqn":"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByOwnerERC2771","version":"2.4.4","address":{"3":"0xBCa9Cd5771322D7BbfabfD4dB816F57195d7B8b1","4":"0xE38322E8201De19c923A0cC16467529a6858174A","5":"0x90D4f1b7b52FAaBAD94725048Ae6Ab3de80D1eCD","goerli":"0x90D4f1b7b52FAaBAD94725048Ae6Ab3de80D1eCD","rinkeby":"0xE38322E8201De19c923A0cC16467529a6858174A","ropsten":"0xBCa9Cd5771322D7BbfabfD4dB816F57195d7B8b1"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155MintByOwnerERC2771","sourceName":"src/token/ERC1155/facets/minting/ERC1155MintByOwnerERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506103b8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635135bec114610030575b600080fd5b61004361003e366004610211565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16610085610180565b73ffffffffffffffffffffffffffffffffffffffff1614610106576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b90610148908790879087908790600401610301565b600060405180830381600087803b15801561016257600080fd5b505af1158015610176573d6000803e3d6000fd5b5050505050505050565b600061018a61018f565b905090565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff1633036101dd575060131936013560601c90565b503390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561022757600080fd5b843573ffffffffffffffffffffffffffffffffffffffff8116811461024b57600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff8082111561027657600080fd5b818701915087601f83011261028a57600080fd5b81358181111561029c5761029c6101e2565b604051601f8201601f19908116603f011681019083821181831017156102c4576102c46101e2565b816040528281528a60208487010111156102dd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156103575785810183015185820160a00152820161033b565b8181111561036957600060a083870101525b50601f01601f19169290920160a001969550505050505056fea2646970667358221220288de6284c77471571e78fe55ff1f1a66b873d4bb249ae5a897a3a30037eeb0064736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80635135bec114610030575b600080fd5b61004361003e366004610211565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16610085610180565b73ffffffffffffffffffffffffffffffffffffffff1614610106576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b90610148908790879087908790600401610301565b600060405180830381600087803b15801561016257600080fd5b505af1158015610176573d6000803e3d6000fd5b5050505050505050565b600061018a61018f565b905090565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff1633036101dd575060131936013560601c90565b503390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561022757600080fd5b843573ffffffffffffffffffffffffffffffffffffffff8116811461024b57600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff8082111561027657600080fd5b818701915087601f83011261028a57600080fd5b81358181111561029c5761029c6101e2565b604051601f8201601f19908116603f011681019083821181831017156102c4576102c46101e2565b816040528281528a60208487010111156102dd57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156103575785810183015185820160a00152820161033b565b8181111561036957600060a083870101525b50601f01601f19169290920160a001969550505050505056fea2646970667358221220288de6284c77471571e78fe55ff1f1a66b873d4bb249ae5a897a3a30037eeb0064736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../metatx/ERC2771ContextInternal.sol\";\nimport \"./ERC1155MintByOwner.sol\";\n\n/**\n * @dev Extension of {ERC1155} to mint as diamond owner with meta-transactions supported via ERC2771.\n */\ncontract ERC1155MintByOwnerERC2771 is ERC1155MintByOwner, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByRole":{"fqn":"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByRole","version":"2.4.4","address":{"3":"0x3c9BA6fd0b1cd2D3C26a193A760a05E7169e9B5e","4":"0x39bc4AbD6aDD4FE5D0dCcA8778E9fCd8D9a31b76","5":"0xFb3905D2B1fBDaC92109F4A8Ffd2035Deb72dEF1","goerli":"0xFb3905D2B1fBDaC92109F4A8Ffd2035Deb72dEF1","rinkeby":"0x39bc4AbD6aDD4FE5D0dCcA8778E9fCd8D9a31b76","ropsten":"0x3c9BA6fd0b1cd2D3C26a193A760a05E7169e9B5e"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155MintByRole","sourceName":"src/token/ERC1155/facets/minting/ERC1155MintByRole.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610740806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806372642f5614610046578063a217fddf1461005b578063d539139314610075575b600080fd5b61005961005436600461046b565b61009c565b005b610063600081565b60405190815260200160405180910390f35b6100637f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100c681610141565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906101089088908890889088906004016105b7565b600060405180830381600087803b15801561012257600080fd5b505af1158015610136573d6000803e3d6000fd5b505050505050505050565b61014b813361014e565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166101f8576101ad816101fc565b6101b8836020610225565b6040516020016101c99291906105fc565b60408051601f198184030181529082905262461bcd60e51b82526101ef9160040161067d565b60405180910390fd5b5050565b606061021f73ffffffffffffffffffffffffffffffffffffffff83166014610225565b92915050565b606060006102348360026106a6565b61023f9060026106c5565b67ffffffffffffffff81111561025757610257610455565b6040519080825280601f01601f191660200182016040528015610281576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106102b8576102b86106dd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061031b5761031b6106dd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006103578460026106a6565b6103629060016106c5565b90505b60018111156103ff577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106103a3576103a36106dd565b1a60f81b8282815181106103b9576103b96106dd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936103f8816106f3565b9050610365565b50831561044e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101ef565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561048157600080fd5b843573ffffffffffffffffffffffffffffffffffffffff811681146104a557600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff808211156104d057600080fd5b818701915087601f8301126104e457600080fd5b8135818111156104f6576104f6610455565b604051601f8201601f19908116603f0116810190838211818310171561051e5761051e610455565b816040528281528a602084870101111561053757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60005b8381101561057657818101518382015260200161055e565b83811115610585576000848401525b50505050565b600081518084526105a381602086016020860161055b565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201528260408201526080606082015260006105f2608083018461058b565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161063481601785016020880161055b565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161067181602884016020880161055b565b01602801949350505050565b60208152600061044e602083018461058b565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106c0576106c0610690565b500290565b600082198211156106d8576106d8610690565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161070257610702610690565b50600019019056fea26469706673582212205192bd73b4ae3f4b62e644ec5a1aa1661738e9639c4b53728ef3ad3add09993564736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c806372642f5614610046578063a217fddf1461005b578063d539139314610075575b600080fd5b61005961005436600461046b565b61009c565b005b610063600081565b60405190815260200160405180910390f35b6100637f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100c681610141565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906101089088908890889088906004016105b7565b600060405180830381600087803b15801561012257600080fd5b505af1158015610136573d6000803e3d6000fd5b505050505050505050565b61014b813361014e565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166101f8576101ad816101fc565b6101b8836020610225565b6040516020016101c99291906105fc565b60408051601f198184030181529082905262461bcd60e51b82526101ef9160040161067d565b60405180910390fd5b5050565b606061021f73ffffffffffffffffffffffffffffffffffffffff83166014610225565b92915050565b606060006102348360026106a6565b61023f9060026106c5565b67ffffffffffffffff81111561025757610257610455565b6040519080825280601f01601f191660200182016040528015610281576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106102b8576102b86106dd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061031b5761031b6106dd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006103578460026106a6565b6103629060016106c5565b90505b60018111156103ff577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106103a3576103a36106dd565b1a60f81b8282815181106103b9576103b96106dd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936103f8816106f3565b9050610365565b50831561044e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101ef565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561048157600080fd5b843573ffffffffffffffffffffffffffffffffffffffff811681146104a557600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff808211156104d057600080fd5b818701915087601f8301126104e457600080fd5b8135818111156104f6576104f6610455565b604051601f8201601f19908116603f0116810190838211818310171561051e5761051e610455565b816040528281528a602084870101111561053757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60005b8381101561057657818101518382015260200161055e565b83811115610585576000848401525b50505050565b600081518084526105a381602086016020860161055b565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201528260408201526080606082015260006105f2608083018461058b565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161063481601785016020880161055b565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000601791840191820152835161067181602884016020880161055b565b01602801949350505050565b60208152600061044e602083018461058b565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106c0576106c0610690565b500290565b600082198211156106d8576106d8610690565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161070257610702610690565b50600019019056fea26469706673582212205192bd73b4ae3f4b62e644ec5a1aa1661738e9639c4b53728ef3ad3add09993564736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/roles/AccessControlInternal.sol\";\nimport \"../../extensions/mintable/IERC1155Mintable.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155MintByRole.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows senders with MINTER_ROLE to mint new tokens.\n */\ncontract ERC1155MintByRole is IERC1155MintByRole, AccessControlInternal {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    /**\n     * @inheritdoc IERC1155MintByRole\n     */\n    function mintByRole(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual onlyRole(MINTER_ROLE) {\n        IERC1155Mintable(address(this)).mintByFacet(to, id, amount, data);\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByRoleERC2771":{"fqn":"flair-sdk:token/ERC1155/facets/minting/ERC1155MintByRoleERC2771","version":"2.4.4","address":{"3":"0x6320E3De0548951F6614fF3C1b8F26a1fdAeA208","4":"0x0eD4903a1040Be77dFfD2ae968bC6419e2b4593F","5":"0x2bAf4f865FF0ca548343cdc29E690317846BD545","goerli":"0x2bAf4f865FF0ca548343cdc29E690317846BD545","rinkeby":"0x0eD4903a1040Be77dFfD2ae968bC6419e2b4593F","ropsten":"0x6320E3De0548951F6614fF3C1b8F26a1fdAeA208"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155MintByRoleERC2771","sourceName":"src/token/ERC1155/facets/minting/ERC1155MintByRoleERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506107a9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806372642f5614610046578063a217fddf1461005b578063d539139314610075575b600080fd5b6100596100543660046104d4565b61009c565b005b610063600081565b60405190815260200160405180910390f35b6100637f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100c681610141565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b90610108908890889088908890600401610620565b600060405180830381600087803b15801561012257600080fd5b505af1158015610136573d6000803e3d6000fd5b505050505050505050565b6101528161014d610155565b610164565b50565b600061015f610212565b905090565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661020e576101c381610265565b6101ce83602061028e565b6040516020016101df929190610665565b60408051601f198184030181529082905262461bcd60e51b8252610205916004016106e6565b60405180910390fd5b5050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff163303610260575060131936013560601c90565b503390565b606061028873ffffffffffffffffffffffffffffffffffffffff8316601461028e565b92915050565b6060600061029d83600261070f565b6102a890600261072e565b67ffffffffffffffff8111156102c0576102c06104be565b6040519080825280601f01601f1916602001820160405280156102ea576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061032157610321610746565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061038457610384610746565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006103c084600261070f565b6103cb90600161072e565b90505b6001811115610468577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061040c5761040c610746565b1a60f81b82828151811061042257610422610746565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936104618161075c565b90506103ce565b5083156104b75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610205565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156104ea57600080fd5b843573ffffffffffffffffffffffffffffffffffffffff8116811461050e57600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff8082111561053957600080fd5b818701915087601f83011261054d57600080fd5b81358181111561055f5761055f6104be565b604051601f8201601f19908116603f01168101908382118183101715610587576105876104be565b816040528281528a60208487010111156105a057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60005b838110156105df5781810151838201526020016105c7565b838111156105ee576000848401525b50505050565b6000815180845261060c8160208601602086016105c4565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015282604082015260806060820152600061065b60808301846105f4565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161069d8160178501602088016105c4565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516106da8160288401602088016105c4565b01602801949350505050565b6020815260006104b760208301846105f4565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610729576107296106f9565b500290565b60008219821115610741576107416106f9565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161076b5761076b6106f9565b50600019019056fea26469706673582212209bf567503d526d7d91404b1a689812b8d757a746880cf936cca2d446a38b933c64736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c806372642f5614610046578063a217fddf1461005b578063d539139314610075575b600080fd5b6100596100543660046104d4565b61009c565b005b610063600081565b60405190815260200160405180910390f35b6100637f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100c681610141565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b90610108908890889088908890600401610620565b600060405180830381600087803b15801561012257600080fd5b505af1158015610136573d6000803e3d6000fd5b505050505050505050565b6101528161014d610155565b610164565b50565b600061015f610212565b905090565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1661020e576101c381610265565b6101ce83602061028e565b6040516020016101df929190610665565b60408051601f198184030181529082905262461bcd60e51b8252610205916004016106e6565b60405180910390fd5b5050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff163303610260575060131936013560601c90565b503390565b606061028873ffffffffffffffffffffffffffffffffffffffff8316601461028e565b92915050565b6060600061029d83600261070f565b6102a890600261072e565b67ffffffffffffffff8111156102c0576102c06104be565b6040519080825280601f01601f1916602001820160405280156102ea576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061032157610321610746565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061038457610384610746565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006103c084600261070f565b6103cb90600161072e565b90505b6001811115610468577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061040c5761040c610746565b1a60f81b82828151811061042257610422610746565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936104618161075c565b90506103ce565b5083156104b75760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610205565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156104ea57600080fd5b843573ffffffffffffffffffffffffffffffffffffffff8116811461050e57600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff8082111561053957600080fd5b818701915087601f83011261054d57600080fd5b81358181111561055f5761055f6104be565b604051601f8201601f19908116603f01168101908382118183101715610587576105876104be565b816040528281528a60208487010111156105a057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60005b838110156105df5781810151838201526020016105c7565b838111156105ee576000848401525b50505050565b6000815180845261060c8160208601602086016105c4565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015282604082015260806060820152600061065b60808301846105f4565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161069d8160178501602088016105c4565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516106da8160288401602088016105c4565b01602801949350505050565b6020815260006104b760208301846105f4565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610729576107296106f9565b500290565b60008219821115610741576107416106f9565b500190565b634e487b7160e01b600052603260045260246000fd5b60008161076b5761076b6106f9565b50600019019056fea26469706673582212209bf567503d526d7d91404b1a689812b8d757a746880cf936cca2d446a38b933c64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../metatx/ERC2771ContextInternal.sol\";\nimport \"./ERC1155MintByRole.sol\";\n\n/**\n * @dev Extension of {ERC1155} to mint by MINTER_ROLE with meta-transactions supported via ERC2771.\n */\ncontract ERC1155MintByRoleERC2771 is ERC1155MintByRole, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyOwnable":{"fqn":"flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyOwnable","version":"2.4.4","address":{"3":"0xD01F2668247FC1c7334591457dc1a8e3C6a5a8E4","4":"0x5ca0011fF1695bd67DB02F4fAEA7328Aa9CF5589","5":"0x185C57DCb7787BB94B183aAFf951DF934F89FFf5","goerli":"0x185C57DCb7787BB94B183aAFf951DF934F89FFf5","rinkeby":"0x5ca0011fF1695bd67DB02F4fAEA7328Aa9CF5589","ropsten":"0xD01F2668247FC1c7334591457dc1a8e3C6a5a8E4"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155SupplyOwnable","sourceName":"src/token/ERC1155/facets/supply/ERC1155SupplyOwnable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"setMaxSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"newValues","type":"uint256[]"}],"name":"setMaxSupplyBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610392806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337da577c1461003b5780636cf6a3fa14610050575b600080fd5b61004e610049366004610245565b610063565b005b61004e61005e3660046102b3565b61011f565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100ee5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60009182527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101a55760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100e5565b6101b1848484846101b7565b50505050565b7f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b8481101561023d578383828181106101f5576101f561031f565b905060200201358260008888858181106102115761021161031f565b90506020020135815260200190815260200160002081905550808061023590610335565b9150506101db565b505050505050565b6000806040838503121561025857600080fd5b50508035926020909101359150565b60008083601f84011261027957600080fd5b50813567ffffffffffffffff81111561029157600080fd5b6020830191508360208260051b85010111156102ac57600080fd5b9250929050565b600080600080604085870312156102c957600080fd5b843567ffffffffffffffff808211156102e157600080fd5b6102ed88838901610267565b9096509450602087013591508082111561030657600080fd5b5061031387828801610267565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161035557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220aa9584fe3da60424d3ae042b26fb769ec9cbacdfc39991e2785fb68354541b1c64736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c806337da577c1461003b5780636cf6a3fa14610050575b600080fd5b61004e610049366004610245565b610063565b005b61004e61005e3660046102b3565b61011f565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100ee5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60009182527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101a55760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100e5565b6101b1848484846101b7565b50505050565b7f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b8481101561023d578383828181106101f5576101f561031f565b905060200201358260008888858181106102115761021161031f565b90506020020135815260200190815260200160002081905550808061023590610335565b9150506101db565b505050505050565b6000806040838503121561025857600080fd5b50508035926020909101359150565b60008083601f84011261027957600080fd5b50813567ffffffffffffffff81111561029157600080fd5b6020830191508360208260051b85010111156102ac57600080fd5b9250929050565b600080600080604085870312156102c957600080fd5b843567ffffffffffffffff808211156102e157600080fd5b6102ed88838901610267565b9096509450602087013591508082111561030657600080fd5b5061031387828801610267565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161035557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220aa9584fe3da60424d3ae042b26fb769ec9cbacdfc39991e2785fb68354541b1c64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../extensions/supply/ERC1155SupplyInternal.sol\";\nimport \"../../extensions/supply/ERC1155SupplyStorage.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"./IERC1155SupplyAdmin.sol\";\n\n/**\n * @title ERC1155 - Supply - Admin - Ownable\n * @notice Allows owner of a EIP-1155 contract to change max supply of token IDs.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies eip165:0xd9b67a26 eip165:0x744f4bd4\n * @custom:provides-interfaces 0x5b2cf486\n */\ncontract ERC1155SupplyOwnable is IERC1155SupplyAdmin, ERC1155SupplyInternal, OwnableInternal {\n    using ERC1155SupplyStorage for ERC1155SupplyStorage.Layout;\n\n    function setMaxSupply(uint256 tokenId, uint256 newValue) public onlyOwner {\n        _setMaxSupply(tokenId, newValue);\n    }\n\n    function setMaxSupplyBatch(uint256[] calldata tokenIds, uint256[] calldata newValues) public onlyOwner {\n        _setMaxSupplyBatch(tokenIds, newValues);\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSales":{"fqn":"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSales","version":"2.4.4","address":{"3":"0x355d2D09CF839D2CBBcdDf29198Fb3460ef0A3F5","4":"0x21c5968a500c87E1116fBf034E131795498d8cBf","5":"0x3f871e44fDdB11d7b82dD687efe2E6c501525c7b","goerli":"0x3f871e44fDdB11d7b82dD687efe2E6c501525c7b","rinkeby":"0x21c5968a500c87E1116fBf034E131795498d8cBf","ropsten":"0x355d2D09CF839D2CBBcdDf29198Fb3460ef0A3F5"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155TieredSales","sourceName":"src/token/ERC1155/facets/sales/ERC1155TieredSales.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"eligibleForTier","outputs":[{"internalType":"uint256","name":"maxMintable","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"mintByTier","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"onTierAllowlist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"remainingForTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reservedMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tierIds","type":"uint256[]"}],"name":"tierToTokenId","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tiers","outputs":[{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReserved","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"}],"name":"walletMintedByTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"","deployedBytecode":"","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\nimport \"../../../../introspection/ERC165Storage.sol\";\nimport \"../../../../finance/sales/TieredSales.sol\";\nimport \"../../extensions/mintable/IERC1155Mintable.sol\";\nimport \"../../extensions/supply/ERC1155SupplyStorage.sol\";\nimport \"../../extensions/supply/IERC1155Supply.sol\";\nimport \"./ERC1155TieredSalesStorage.sol\";\nimport \"./IERC1155TieredSales.sol\";\n\n/**\n * @title ERC1155 - Tiered Sales\n * @notice Sales mechanism for ERC1155 NFTs with multiple tiered pricing, allowlist and allocation plans.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies eip165:0xb164884b\n * @custom:provides-interfaces 0x79f33254 0x5ae18a74\n */\ncontract ERC1155TieredSales is IERC1155TieredSales, ReentrancyGuard, TieredSales {\n    using ERC165Storage for ERC165Storage.Layout;\n    using ERC1155TieredSalesStorage for ERC1155TieredSalesStorage.Layout;\n    using ERC1155SupplyStorage for ERC1155SupplyStorage.Layout;\n\n    function mintByTier(\n        uint256 tierId,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) external payable nonReentrant {\n        super._executeSale(tierId, count, maxAllowance, proof);\n\n        IERC1155Mintable(address(this)).mintByFacet(\n            _msgSender(),\n            ERC1155TieredSalesStorage.layout().tierToTokenId[tierId],\n            count,\n            \"\"\n        );\n    }\n\n    function tierToTokenId(uint256 tierId) external view returns (uint256) {\n        return ERC1155TieredSalesStorage.layout().tierToTokenId[tierId];\n    }\n\n    function tierToTokenId(uint256[] calldata tierIds) external view returns (uint256[] memory) {\n        uint256[] memory tokenIds = new uint256[](tierIds.length);\n\n        for (uint256 i = 0; i < tierIds.length; i++) {\n            tokenIds[i] = ERC1155TieredSalesStorage.layout().tierToTokenId[tierIds[i]];\n        }\n\n        return tokenIds;\n    }\n\n    function _remainingSupplyForTier(uint256 tierId) internal view override returns (uint256) {\n        if (!ERC165Storage.layout().supportedInterfaces[type(IERC1155Supply).interfaceId]) {\n            return type(uint256).max;\n        }\n\n        uint256 tokenId = ERC1155TieredSalesStorage.layout().tierToTokenId[tierId];\n\n        uint256 remainingSupply = ERC1155SupplyStorage.layout().maxSupply[tokenId] -\n            ERC1155SupplyStorage.layout().totalSupply[tokenId];\n\n        return remainingSupply;\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesERC2771":{"fqn":"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesERC2771","version":"2.4.4","address":{"3":"0xe9832698308707D18dE429Aaf6260355196CEFB7","4":"0xe492bA2dCb567993f3aE0ea95a5752Ef3Ba2ebb9","5":"0xD900a97D3A42d3B0C5915a3732658ce676cEd06F","goerli":"0xD900a97D3A42d3B0C5915a3732658ce676cEd06F","rinkeby":"0xe492bA2dCb567993f3aE0ea95a5752Ef3Ba2ebb9","ropsten":"0xe9832698308707D18dE429Aaf6260355196CEFB7"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155TieredSalesERC2771","sourceName":"src/token/ERC1155/facets/sales/ERC1155TieredSalesERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"eligibleForTier","outputs":[{"internalType":"uint256","name":"maxMintable","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"mintByTier","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"onTierAllowlist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"remainingForTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reservedMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tierIds","type":"uint256[]"}],"name":"tierToTokenId","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tiers","outputs":[{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReserved","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"}],"name":"walletMintedByTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"","deployedBytecode":"","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../metatx/ERC2771ContextInternal.sol\";\nimport \"./ERC1155TieredSales.sol\";\n\n/**\n * @dev Tiered Sales facet for ERC1155 with meta-transactions support via ERC2771\n */\ncontract ERC1155TieredSalesERC2771 is ERC1155TieredSales, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesOwnable":{"fqn":"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesOwnable","version":"2.4.4","address":{"3":"0x73fb9dDfA54EC7d0fecC22c88B8e9E98a2C1bF78","4":"0xD6C73dc3D628BC2f7d422350cEaB79C5f7e878F7","5":"0xDFB72f3159C8a3C99D08048299a552De323c6f0e","goerli":"0xDFB72f3159C8a3C99D08048299a552De323c6f0e","rinkeby":"0xD6C73dc3D628BC2f7d422350cEaB79C5f7e878F7","ropsten":"0x73fb9dDfA54EC7d0fecC22c88B8e9E98a2C1bF78"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155TieredSalesOwnable","sourceName":"src/token/ERC1155/facets/sales/ERC1155TieredSalesOwnable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"configureTierTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tierIds","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"configureTierTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b5061041f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bbc2d43d1461003b578063cd07091c14610050575b600080fd5b61004e6100493660046102d2565b610063565b005b61004e61005e366004610340565b61011f565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100ee5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60009182527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101a55760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100e5565b8281146102405760405162461bcd60e51b815260206004820152604360248201527f4552433131353554696572656453616c65734f776e61626c653a20746965724960448201527f647320616e6420746f6b656e496473206d7573742062652073616d65206c656e60648201527f6774680000000000000000000000000000000000000000000000000000000000608482015260a4016100e5565b60005b838110156102cb5782828281811061025d5761025d6103ac565b9050602002013561028b7f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715490565b600087878581811061029f5761029f6103ac565b9050602002013581526020019081526020016000208190555080806102c3906103c2565b915050610243565b5050505050565b600080604083850312156102e557600080fd5b50508035926020909101359150565b60008083601f84011261030657600080fd5b50813567ffffffffffffffff81111561031e57600080fd5b6020830191508360208260051b850101111561033957600080fd5b9250929050565b6000806000806040858703121561035657600080fd5b843567ffffffffffffffff8082111561036e57600080fd5b61037a888389016102f4565b9096509450602087013591508082111561039357600080fd5b506103a0878288016102f4565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016103e257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d3ca763758d0b21b81c8e7afec94207345b71fc6fc05627f79d187dda605d07564736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063bbc2d43d1461003b578063cd07091c14610050575b600080fd5b61004e6100493660046102d2565b610063565b005b61004e61005e366004610340565b61011f565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100ee5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60009182527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101a55760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100e5565b8281146102405760405162461bcd60e51b815260206004820152604360248201527f4552433131353554696572656453616c65734f776e61626c653a20746965724960448201527f647320616e6420746f6b656e496473206d7573742062652073616d65206c656e60648201527f6774680000000000000000000000000000000000000000000000000000000000608482015260a4016100e5565b60005b838110156102cb5782828281811061025d5761025d6103ac565b9050602002013561028b7f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715490565b600087878581811061029f5761029f6103ac565b9050602002013581526020019081526020016000208190555080806102c3906103c2565b915050610243565b5050505050565b600080604083850312156102e557600080fd5b50508035926020909101359150565b60008083601f84011261030657600080fd5b50813567ffffffffffffffff81111561031e57600080fd5b6020830191508360208260051b850101111561033957600080fd5b9250929050565b6000806000806040858703121561035657600080fd5b843567ffffffffffffffff8082111561036e57600080fd5b61037a888389016102f4565b9096509450602087013591508082111561039357600080fd5b506103a0878288016102f4565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016103e257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220d3ca763758d0b21b81c8e7afec94207345b71fc6fc05627f79d187dda605d07564736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"./ERC1155TieredSalesStorage.sol\";\nimport \"./IERC1155TieredSalesAdmin.sol\";\n\n/**\n * @title ERC1155 - Tiered Sales - Admin - Ownable\n * @notice Used to manage which ERC1155 token is related to which the sales tier.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies eip165:0x79f33254\n * @custom:provides-interfaces 0x76c5dd21\n */\ncontract ERC1155TieredSalesOwnable is IERC1155TieredSalesAdmin, OwnableInternal {\n    using ERC1155TieredSalesStorage for ERC1155TieredSalesStorage.Layout;\n\n    function configureTierTokenId(uint256 tierId, uint256 tokenId) external onlyOwner {\n        ERC1155TieredSalesStorage.layout().tierToTokenId[tierId] = tokenId;\n    }\n\n    function configureTierTokenId(uint256[] calldata tierIds, uint256[] calldata tokenIds) external onlyOwner {\n        require(\n            tierIds.length == tokenIds.length,\n            \"ERC1155TieredSalesOwnable: tierIds and tokenIds must be same length\"\n        );\n\n        for (uint256 i = 0; i < tierIds.length; i++) {\n            ERC1155TieredSalesStorage.layout().tierToTokenId[tierIds[i]] = tokenIds[i];\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/ERC1155WithERC2771":{"fqn":"flair-sdk:token/ERC1155/ERC1155WithERC2771","version":"2.4.4","address":{"3":"0xD781b8126F857A2073D5d0DD3D2903253DAA46bD","4":"0x25077bcB7F56Be3cB05CD364863Adae0217f3c07","5":"0x06CE0C5759fad39088a6B428C45755c0f256C9b0","goerli":"0x06CE0C5759fad39088a6B428C45755c0f256C9b0","rinkeby":"0x25077bcB7F56Be3cB05CD364863Adae0217f3c07","ropsten":"0xD781b8126F857A2073D5d0DD3D2903253DAA46bD"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155WithERC2771","sourceName":"src/token/ERC1155/ERC1155WithERC2771.sol","abi":[{"inputs":[],"name":"SenderIsNotSelf","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatchByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnablePausedUntil","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"existsBatch","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ticketTokenIds","type":"uint256[]"}],"name":"locked","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"locked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"maxSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"totalSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unlockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506128d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106101815760003560e01c8063869f7594116100d8578063b164884b1161008c578063e985e9c511610066578063e985e9c514610342578063f242432a1461039d578063f5298aca146103b057600080fd5b8063b164884b14610309578063bd85b0391461031c578063bf7bab731461032f57600080fd5b8063a22cb465116100bd578063a22cb465146102d0578063a47fe40f146102e3578063a91a988a146102f657600080fd5b8063869f7594146102aa578063983da156146102bd57600080fd5b80634e1273f41161013a5780636708a990116101145780636708a990146102715780636b20c4541461028457806377954ac21461029757600080fd5b80634e1273f41461020e5780634f558e791461022e57806352d0a6bb1461025157600080fd5b806314e35aa41161016b57806314e35aa4146101c15780632eb2c2d6146101e857806348f2f536146101fb57600080fd5b8062fdd58e146101865780630ad2bbac146101ac575b600080fd5b610199610194366004611fb3565b6103c3565b6040519081526020015b60405180910390f35b6101bf6101ba3660046120b5565b6103d6565b005b7f20cb9ad5a22f74f90c7fecbece6b6ab3beb2a63812efb8693c5ff39f2b73ee0f54610199565b6101bf6101f636600461219d565b610406565b6101bf610209366004612247565b6104ef565b61022161021c36600461227a565b61051a565b6040516101a39190612380565b61024161023c366004612393565b610741565b60405190151581526020016101a3565b61026461025f3660046123f8565b610778565b6040516101a3919061243a565b6101bf61027f366004612247565b610857565b6101bf6102923660046120b5565b610882565b6102216102a53660046123f8565b610980565b6101996102b8366004612393565b610a50565b6101bf6102cb366004612247565b610a83565b6101bf6102de366004612491565b610aae565b6102216102f13660046123f8565b610bce565b6102216103043660046124c8565b610c9e565b6101bf61031736600461251b565b610d85565b61019961032a366004612393565b610db7565b61019961033d366004611fb3565b610dea565b61024161035036600461257c565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101bf6103ab3660046125af565b610e32565b6101bf6103be366004612247565b610f0e565b60006103cf838361100c565b9392505050565b3033146103f6576040516328be0e2160e21b815260040160405180910390fd5b6104018383836110d1565b505050565b600061041061134f565b9050806001600160a01b0316866001600160a01b0316148061047657506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104d95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084015b60405180910390fd5b6104e781878787878761135e565b505050505050565b30331461050f576040516328be0e2160e21b815260040160405180910390fd5b61040183838361137a565b606081518351146105935760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104d0565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156105d2576105d2611fdd565b6040519080825280602002602001820160405280156105fb578160200160208202803683370190505b50905060005b85518110156107385760006001600160a01b031686828151811061062757610627612614565b60200260200101516001600160a01b0316036106ab5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104d0565b8260008683815181106106c0576106c0612614565b6020026020010151815260200190815260200160002060008783815181106106ea576106ea612614565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061072557610725612614565b6020908102919091010152600101610601565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b606060008267ffffffffffffffff81111561079557610795611fdd565b6040519080825280602002602001820160405280156107be578160200160208202803683370190505b50905060005b8381101561084f5761081b8585838181106107e1576107e1612614565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040902054151590565b82828151811061082d5761082d612614565b911515602092830291909101909101528061084781612640565b9150506107c4565b509392505050565b303314610877576040516328be0e2160e21b815260040160405180910390fd5b61040183838361150e565b61088a61134f565b6001600160a01b0316836001600160a01b0316148061092257503063e985e9c5846108b361134f565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190612659565b6103f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104d0565b606060008267ffffffffffffffff81111561099d5761099d611fdd565b6040519080825280602002602001820160405280156109c6578160200160208202803683370190505b50905060005b8381101561084f57610a218585838181106109e9576109e9612614565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604090205490565b828281518110610a3357610a33612614565b602090810291909101015280610a4881612640565b9150506109cc565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea66020526040812054610772565b303314610aa3576040516328be0e2160e21b815260040160405180910390fd5b6104018383836115cb565b6000610ab861134f565b9050826001600160a01b0316816001600160a01b031603610b415760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104d0565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610beb57610beb611fdd565b604051908082528060200260200182016040528015610c14578160200160208202803683370190505b50905060005b8381101561084f57610c6f858583818110610c3757610c37612614565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090205490565b828281518110610c8157610c81612614565b602090810291909101015280610c9681612640565b915050610c1a565b606060008267ffffffffffffffff811115610cbb57610cbb611fdd565b604051908082528060200260200182016040528015610ce4578160200160208202803683370190505b50905060005b8381101561073857610d5686868684818110610d0857610d08612614565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610d6857610d68612614565b602090810291909101015280610d7d81612640565b915050610cea565b303314610da5576040516328be0e2160e21b815260040160405180910390fd5b610db184848484611692565b50505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040812054610772565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b287527820602090815260408083208484529091528120546103cf565b6000610e3c61134f565b9050806001600160a01b0316866001600160a01b03161480610ea257506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610f005760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104d0565b6104e78187878787876117d8565b610f1661134f565b6001600160a01b0316836001600160a01b03161480610fae57503063e985e9c584610f3f61134f565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae9190612659565b61050f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104d0565b60006001600160a01b03831661108a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104d0565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b6001600160a01b0383166111335760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104d0565b80518251146111955760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104d0565b600061119f61134f565b90506111bf818560008686604051806020016040528060008152506117f4565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b84518110156112ef57600085828151811061120057611200612614565b6020026020010151905084828151811061121c5761121c612614565b602090810291909101810151600083815285835260408082206001600160a01b038c168352909352919091205410156112a35760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104d0565b8482815181106112b5576112b5612614565b602090810291909101810151600092835284825260408084206001600160a01b038b168552909252912080549190910390556001016111e3565b5060006001600160a01b0316856001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611340929190612676565b60405180910390a45050505050565b60006113596117f9565b905090565b61136c868686868686611803565b6104e7868686868686611a90565b6001600160a01b0383166113dc5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104d0565b60006113e661134f565b9050611416818560006113f887611c3e565b61140187611c3e565b604051806020016040528060008152506117f4565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038816845291829052909120548311156114b55760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104d0565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101611340565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b2875278206020908152604080832085845291829052909120548211156115a25760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104d0565b600083815260208290526040812080548492906115c09084906126a4565b909155505050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b287527820602090815260408083208584529182905290912054829061161c868661100c565b61162691906126a4565b10156116745760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104d0565b600083815260208290526040812080548492906115c09084906126bb565b600061169c61134f565b90506001600160a01b03851661171a5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104d0565b6117398160008761172a88611c3e565b61173388611c3e565b876117f4565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b03891684529091528120805485929061178a9084906126bb565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101611340565b6117e6868686868686611c89565b6104e7868686868686611e52565b6104e7565b6000611359611f4e565b6001600160a01b0384166118675760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104d0565b81518351146118c95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104d0565b6118d78686868686866117f4565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015611a2f57600085828151811061191857611918612614565b60200260200101519050600085838151811061193657611936612614565b602090810291909101810151600084815286835260408082206001600160a01b038e1683529093529190912054909150818110156119dc5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104d0565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290611a229084906126bb565b909155506118fb92505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611a7f929190612676565b60405180910390a450505050505050565b6001600160a01b0384163b156104e75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611ad49089908990889088908890600401612720565b6020604051808303816000875af1925050508015611b0f575060408051601f3d908101601f19168201909252611b0c9181019061277e565b60015b611bc457611b1b6127a8565b806308c379a003611b545750611b2f6127c3565b80611b3a5750611b56565b8060405162461bcd60e51b81526004016104d0919061284d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104d0565b6001600160e01b0319811663bc197c8160e01b14611c355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104d0565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611c7857611c78612614565b602090810291909101015292915050565b6001600160a01b038416611ced5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104d0565b611d0b868686611cfc87611c3e565b611d0587611c3e565b866117f4565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038a1685529091529091205483811015611dc45760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104d0565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290611e039084906126bb565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101611a7f565b6001600160a01b0384163b156104e75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611e969089908990889088908890600401612860565b6020604051808303816000875af1925050508015611ed1575060408051601f3d908101601f19168201909252611ece9181019061277e565b60015b611edd57611b1b6127a8565b6001600160e01b0319811663f23a6e6160e01b14611c355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104d0565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f420546000906001600160a01b03163303611f8f575060131936013560601c90565b503390565b90565b80356001600160a01b0381168114611fae57600080fd5b919050565b60008060408385031215611fc657600080fd5b611fcf83611f97565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561201957612019611fdd565b6040525050565b600067ffffffffffffffff82111561203a5761203a611fdd565b5060051b60200190565b600082601f83011261205557600080fd5b8135602061206282612020565b60405161206f8282611ff3565b83815260059390931b850182019282810191508684111561208f57600080fd5b8286015b848110156120aa5780358352918301918301612093565b509695505050505050565b6000806000606084860312156120ca57600080fd5b6120d384611f97565b9250602084013567ffffffffffffffff808211156120f057600080fd5b6120fc87838801612044565b9350604086013591508082111561211257600080fd5b5061211f86828701612044565b9150509250925092565b600082601f83011261213a57600080fd5b813567ffffffffffffffff81111561215457612154611fdd565b60405161216b601f8301601f191660200182611ff3565b81815284602083860101111561218057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156121b557600080fd5b6121be86611f97565b94506121cc60208701611f97565b9350604086013567ffffffffffffffff808211156121e957600080fd5b6121f589838a01612044565b9450606088013591508082111561220b57600080fd5b61221789838a01612044565b9350608088013591508082111561222d57600080fd5b5061223a88828901612129565b9150509295509295909350565b60008060006060848603121561225c57600080fd5b61226584611f97565b95602085013595506040909401359392505050565b6000806040838503121561228d57600080fd5b823567ffffffffffffffff808211156122a557600080fd5b818501915085601f8301126122b957600080fd5b813560206122c682612020565b6040516122d38282611ff3565b83815260059390931b85018201928281019150898411156122f357600080fd5b948201945b838610156123185761230986611f97565b825294820194908201906122f8565b9650508601359250508082111561232e57600080fd5b5061233b85828601612044565b9150509250929050565b600081518084526020808501945080840160005b8381101561237557815187529582019590820190600101612359565b509495945050505050565b6020815260006103cf6020830184612345565b6000602082840312156123a557600080fd5b5035919050565b60008083601f8401126123be57600080fd5b50813567ffffffffffffffff8111156123d657600080fd5b6020830191508360208260051b85010111156123f157600080fd5b9250929050565b6000806020838503121561240b57600080fd5b823567ffffffffffffffff81111561242257600080fd5b61242e858286016123ac565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015612474578351151583529284019291840191600101612456565b50909695505050505050565b801515811461248e57600080fd5b50565b600080604083850312156124a457600080fd5b6124ad83611f97565b915060208301356124bd81612480565b809150509250929050565b6000806000604084860312156124dd57600080fd5b6124e684611f97565b9250602084013567ffffffffffffffff81111561250257600080fd5b61250e868287016123ac565b9497909650939450505050565b6000806000806080858703121561253157600080fd5b61253a85611f97565b93506020850135925060408501359150606085013567ffffffffffffffff81111561256457600080fd5b61257087828801612129565b91505092959194509250565b6000806040838503121561258f57600080fd5b61259883611f97565b91506125a660208401611f97565b90509250929050565b600080600080600060a086880312156125c757600080fd5b6125d086611f97565b94506125de60208701611f97565b93506040860135925060608601359150608086013567ffffffffffffffff81111561260857600080fd5b61223a88828901612129565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016126525761265261262a565b5060010190565b60006020828403121561266b57600080fd5b81516103cf81612480565b6040815260006126896040830185612345565b828103602084015261269b8185612345565b95945050505050565b6000828210156126b6576126b661262a565b500390565b600082198211156126ce576126ce61262a565b500190565b6000815180845260005b818110156126f9576020818501810151868301820152016126dd565b8181111561270b576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a0604083015261274c60a0830186612345565b828103606084015261275e8186612345565b9050828103608084015261277281856126d3565b98975050505050505050565b60006020828403121561279057600080fd5b81516001600160e01b0319811681146103cf57600080fd5b600060033d1115611f945760046000803e5060005160e01c90565b600060443d10156127d15790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561280157505050505090565b82850191508151818111156128195750505050505090565b843d87010160208285010111156128335750505050505090565b61284260208286010187611ff3565b509095945050505050565b6020815260006103cf60208301846126d3565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261289860a08301846126d3565b97965050505050505056fea26469706673582212208feba9bc79691ca0ffeb04b04b2e2b6faa7d1f85192c1ba9433735f2189f082c64736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106101815760003560e01c8063869f7594116100d8578063b164884b1161008c578063e985e9c511610066578063e985e9c514610342578063f242432a1461039d578063f5298aca146103b057600080fd5b8063b164884b14610309578063bd85b0391461031c578063bf7bab731461032f57600080fd5b8063a22cb465116100bd578063a22cb465146102d0578063a47fe40f146102e3578063a91a988a146102f657600080fd5b8063869f7594146102aa578063983da156146102bd57600080fd5b80634e1273f41161013a5780636708a990116101145780636708a990146102715780636b20c4541461028457806377954ac21461029757600080fd5b80634e1273f41461020e5780634f558e791461022e57806352d0a6bb1461025157600080fd5b806314e35aa41161016b57806314e35aa4146101c15780632eb2c2d6146101e857806348f2f536146101fb57600080fd5b8062fdd58e146101865780630ad2bbac146101ac575b600080fd5b610199610194366004611fb3565b6103c3565b6040519081526020015b60405180910390f35b6101bf6101ba3660046120b5565b6103d6565b005b7f20cb9ad5a22f74f90c7fecbece6b6ab3beb2a63812efb8693c5ff39f2b73ee0f54610199565b6101bf6101f636600461219d565b610406565b6101bf610209366004612247565b6104ef565b61022161021c36600461227a565b61051a565b6040516101a39190612380565b61024161023c366004612393565b610741565b60405190151581526020016101a3565b61026461025f3660046123f8565b610778565b6040516101a3919061243a565b6101bf61027f366004612247565b610857565b6101bf6102923660046120b5565b610882565b6102216102a53660046123f8565b610980565b6101996102b8366004612393565b610a50565b6101bf6102cb366004612247565b610a83565b6101bf6102de366004612491565b610aae565b6102216102f13660046123f8565b610bce565b6102216103043660046124c8565b610c9e565b6101bf61031736600461251b565b610d85565b61019961032a366004612393565b610db7565b61019961033d366004611fb3565b610dea565b61024161035036600461257c565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101bf6103ab3660046125af565b610e32565b6101bf6103be366004612247565b610f0e565b60006103cf838361100c565b9392505050565b3033146103f6576040516328be0e2160e21b815260040160405180910390fd5b6104018383836110d1565b505050565b600061041061134f565b9050806001600160a01b0316866001600160a01b0316148061047657506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104d95760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084015b60405180910390fd5b6104e781878787878761135e565b505050505050565b30331461050f576040516328be0e2160e21b815260040160405180910390fd5b61040183838361137a565b606081518351146105935760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104d0565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156105d2576105d2611fdd565b6040519080825280602002602001820160405280156105fb578160200160208202803683370190505b50905060005b85518110156107385760006001600160a01b031686828151811061062757610627612614565b60200260200101516001600160a01b0316036106ab5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104d0565b8260008683815181106106c0576106c0612614565b6020026020010151815260200190815260200160002060008783815181106106ea576106ea612614565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061072557610725612614565b6020908102919091010152600101610601565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b606060008267ffffffffffffffff81111561079557610795611fdd565b6040519080825280602002602001820160405280156107be578160200160208202803683370190505b50905060005b8381101561084f5761081b8585838181106107e1576107e1612614565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040902054151590565b82828151811061082d5761082d612614565b911515602092830291909101909101528061084781612640565b9150506107c4565b509392505050565b303314610877576040516328be0e2160e21b815260040160405180910390fd5b61040183838361150e565b61088a61134f565b6001600160a01b0316836001600160a01b0316148061092257503063e985e9c5846108b361134f565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190612659565b6103f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104d0565b606060008267ffffffffffffffff81111561099d5761099d611fdd565b6040519080825280602002602001820160405280156109c6578160200160208202803683370190505b50905060005b8381101561084f57610a218585838181106109e9576109e9612614565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604090205490565b828281518110610a3357610a33612614565b602090810291909101015280610a4881612640565b9150506109cc565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea66020526040812054610772565b303314610aa3576040516328be0e2160e21b815260040160405180910390fd5b6104018383836115cb565b6000610ab861134f565b9050826001600160a01b0316816001600160a01b031603610b415760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104d0565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610beb57610beb611fdd565b604051908082528060200260200182016040528015610c14578160200160208202803683370190505b50905060005b8381101561084f57610c6f858583818110610c3757610c37612614565b9050602002013560009081527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090205490565b828281518110610c8157610c81612614565b602090810291909101015280610c9681612640565b915050610c1a565b606060008267ffffffffffffffff811115610cbb57610cbb611fdd565b604051908082528060200260200182016040528015610ce4578160200160208202803683370190505b50905060005b8381101561073857610d5686868684818110610d0857610d08612614565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610d6857610d68612614565b602090810291909101015280610d7d81612640565b915050610cea565b303314610da5576040516328be0e2160e21b815260040160405180910390fd5b610db184848484611692565b50505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040812054610772565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b287527820602090815260408083208484529091528120546103cf565b6000610e3c61134f565b9050806001600160a01b0316866001600160a01b03161480610ea257506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610f005760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104d0565b6104e78187878787876117d8565b610f1661134f565b6001600160a01b0316836001600160a01b03161480610fae57503063e985e9c584610f3f61134f565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610f8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fae9190612659565b61050f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016104d0565b60006001600160a01b03831661108a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104d0565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b6001600160a01b0383166111335760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104d0565b80518251146111955760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104d0565b600061119f61134f565b90506111bf818560008686604051806020016040528060008152506117f4565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b84518110156112ef57600085828151811061120057611200612614565b6020026020010151905084828151811061121c5761121c612614565b602090810291909101810151600083815285835260408082206001600160a01b038c168352909352919091205410156112a35760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104d0565b8482815181106112b5576112b5612614565b602090810291909101810151600092835284825260408084206001600160a01b038b168552909252912080549190910390556001016111e3565b5060006001600160a01b0316856001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611340929190612676565b60405180910390a45050505050565b60006113596117f9565b905090565b61136c868686868686611803565b6104e7868686868686611a90565b6001600160a01b0383166113dc5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016104d0565b60006113e661134f565b9050611416818560006113f887611c3e565b61140187611c3e565b604051806020016040528060008152506117f4565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038816845291829052909120548311156114b55760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016104d0565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101611340565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b2875278206020908152604080832085845291829052909120548211156115a25760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104d0565b600083815260208290526040812080548492906115c09084906126a4565b909155505050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b287527820602090815260408083208584529182905290912054829061161c868661100c565b61162691906126a4565b10156116745760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104d0565b600083815260208290526040812080548492906115c09084906126bb565b600061169c61134f565b90506001600160a01b03851661171a5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104d0565b6117398160008761172a88611c3e565b61173388611c3e565b876117f4565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b03891684529091528120805485929061178a9084906126bb565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101611340565b6117e6868686868686611c89565b6104e7868686868686611e52565b6104e7565b6000611359611f4e565b6001600160a01b0384166118675760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104d0565b81518351146118c95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016104d0565b6118d78686868686866117f4565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015611a2f57600085828151811061191857611918612614565b60200260200101519050600085838151811061193657611936612614565b602090810291909101810151600084815286835260408082206001600160a01b038e1683529093529190912054909150818110156119dc5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104d0565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290611a229084906126bb565b909155506118fb92505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051611a7f929190612676565b60405180910390a450505050505050565b6001600160a01b0384163b156104e75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611ad49089908990889088908890600401612720565b6020604051808303816000875af1925050508015611b0f575060408051601f3d908101601f19168201909252611b0c9181019061277e565b60015b611bc457611b1b6127a8565b806308c379a003611b545750611b2f6127c3565b80611b3a5750611b56565b8060405162461bcd60e51b81526004016104d0919061284d565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104d0565b6001600160e01b0319811663bc197c8160e01b14611c355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104d0565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611c7857611c78612614565b602090810291909101015292915050565b6001600160a01b038416611ced5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016104d0565b611d0b868686611cfc87611c3e565b611d0587611c3e565b866117f4565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038a1685529091529091205483811015611dc45760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104d0565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290611e039084906126bb565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f629101611a7f565b6001600160a01b0384163b156104e75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611e969089908990889088908890600401612860565b6020604051808303816000875af1925050508015611ed1575060408051601f3d908101601f19168201909252611ece9181019061277e565b60015b611edd57611b1b6127a8565b6001600160e01b0319811663f23a6e6160e01b14611c355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b60648201526084016104d0565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f420546000906001600160a01b03163303611f8f575060131936013560601c90565b503390565b90565b80356001600160a01b0381168114611fae57600080fd5b919050565b60008060408385031215611fc657600080fd5b611fcf83611f97565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff8111828210171561201957612019611fdd565b6040525050565b600067ffffffffffffffff82111561203a5761203a611fdd565b5060051b60200190565b600082601f83011261205557600080fd5b8135602061206282612020565b60405161206f8282611ff3565b83815260059390931b850182019282810191508684111561208f57600080fd5b8286015b848110156120aa5780358352918301918301612093565b509695505050505050565b6000806000606084860312156120ca57600080fd5b6120d384611f97565b9250602084013567ffffffffffffffff808211156120f057600080fd5b6120fc87838801612044565b9350604086013591508082111561211257600080fd5b5061211f86828701612044565b9150509250925092565b600082601f83011261213a57600080fd5b813567ffffffffffffffff81111561215457612154611fdd565b60405161216b601f8301601f191660200182611ff3565b81815284602083860101111561218057600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156121b557600080fd5b6121be86611f97565b94506121cc60208701611f97565b9350604086013567ffffffffffffffff808211156121e957600080fd5b6121f589838a01612044565b9450606088013591508082111561220b57600080fd5b61221789838a01612044565b9350608088013591508082111561222d57600080fd5b5061223a88828901612129565b9150509295509295909350565b60008060006060848603121561225c57600080fd5b61226584611f97565b95602085013595506040909401359392505050565b6000806040838503121561228d57600080fd5b823567ffffffffffffffff808211156122a557600080fd5b818501915085601f8301126122b957600080fd5b813560206122c682612020565b6040516122d38282611ff3565b83815260059390931b85018201928281019150898411156122f357600080fd5b948201945b838610156123185761230986611f97565b825294820194908201906122f8565b9650508601359250508082111561232e57600080fd5b5061233b85828601612044565b9150509250929050565b600081518084526020808501945080840160005b8381101561237557815187529582019590820190600101612359565b509495945050505050565b6020815260006103cf6020830184612345565b6000602082840312156123a557600080fd5b5035919050565b60008083601f8401126123be57600080fd5b50813567ffffffffffffffff8111156123d657600080fd5b6020830191508360208260051b85010111156123f157600080fd5b9250929050565b6000806020838503121561240b57600080fd5b823567ffffffffffffffff81111561242257600080fd5b61242e858286016123ac565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015612474578351151583529284019291840191600101612456565b50909695505050505050565b801515811461248e57600080fd5b50565b600080604083850312156124a457600080fd5b6124ad83611f97565b915060208301356124bd81612480565b809150509250929050565b6000806000604084860312156124dd57600080fd5b6124e684611f97565b9250602084013567ffffffffffffffff81111561250257600080fd5b61250e868287016123ac565b9497909650939450505050565b6000806000806080858703121561253157600080fd5b61253a85611f97565b93506020850135925060408501359150606085013567ffffffffffffffff81111561256457600080fd5b61257087828801612129565b91505092959194509250565b6000806040838503121561258f57600080fd5b61259883611f97565b91506125a660208401611f97565b90509250929050565b600080600080600060a086880312156125c757600080fd5b6125d086611f97565b94506125de60208701611f97565b93506040860135925060608601359150608086013567ffffffffffffffff81111561260857600080fd5b61223a88828901612129565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016126525761265261262a565b5060010190565b60006020828403121561266b57600080fd5b81516103cf81612480565b6040815260006126896040830185612345565b828103602084015261269b8185612345565b95945050505050565b6000828210156126b6576126b661262a565b500390565b600082198211156126ce576126ce61262a565b500190565b6000815180845260005b818110156126f9576020818501810151868301820152016126dd565b8181111561270b576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a0604083015261274c60a0830186612345565b828103606084015261275e8186612345565b9050828103608084015261277281856126d3565b98975050505050505050565b60006020828403121561279057600080fd5b81516001600160e01b0319811681146103cf57600080fd5b600060033d1115611f945760046000803e5060005160e01c90565b600060443d10156127d15790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561280157505050505090565b82850191508151818111156128195750505050505090565b843d87010160208285010111156128335750505050505090565b61284260208286010187611ff3565b509095945050505050565b6020815260006103cf60208301846126d3565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261289860a08301846126d3565b97965050505050505056fea26469706673582212208feba9bc79691ca0ffeb04b04b2e2b6faa7d1f85192c1ba9433735f2189f082c64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./base/ERC1155BaseERC2771.sol\";\nimport \"./extensions/supply/ERC1155Supply.sol\";\nimport \"./extensions/lockable/ERC1155Lockable.sol\";\nimport \"./extensions/mintable/ERC1155Mintable.sol\";\nimport \"./extensions/burnable/ERC1155Burnable.sol\";\n\ncontract ERC1155WithERC2771 is ERC1155BaseERC2771, ERC1155Supply, ERC1155Mintable, ERC1155Burnable, ERC1155Lockable {\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override(ERC1155BaseInternal, ERC1155SupplyInternal, ERC1155LockableInternal) {\n        ERC1155BaseInternal._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n\n    function _msgSender() internal view virtual override(Context, ERC1155BaseERC2771) returns (address) {\n        return ERC1155BaseERC2771._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC1155BaseERC2771) returns (bytes calldata) {\n        return ERC1155BaseERC2771._msgData();\n    }\n}\n"},"flair-sdk:introspection/ERC165":{"fqn":"flair-sdk:introspection/ERC165","version":"2.4.4","address":{"3":"0x4F9bf8f997b2Ce586f7Bc7a976aEBAc8D17312D3","4":"0x0A42B5Df15924b40fb98dedb0a0A9f3CC962c09E","5":"0xE59823282f481889A1264469ACa219f6aCa2fE40","goerli":"0xE59823282f481889A1264469ACa219f6aCa2fE40","rinkeby":"0x0A42B5Df15924b40fb98dedb0a0A9f3CC962c09E","ropsten":"0x4F9bf8f997b2Ce586f7Bc7a976aEBAc8D17312D3"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC165","sourceName":"src/introspection/ERC165.sol","abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b5061011f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b608e603836600460a2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed2640602052604090205460ff1690565b604051901515815260200160405180910390f35b60006020828403121560b357600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811460e257600080fd5b939250505056fea2646970667358221220978c0f9d0ff751ebb5636f15644f255b2df4fde84b5657d3fc110466d7ccc52464736f6c634300080f0033","deployedBytecode":"0x6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b608e603836600460a2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed2640602052604090205460ff1690565b604051901515815260200160405180910390f35b60006020828403121560b357600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811460e257600080fd5b939250505056fea2646970667358221220978c0f9d0ff751ebb5636f15644f255b2df4fde84b5657d3fc110466d7ccc52464736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./IERC165.sol\";\nimport \"./ERC165Storage.sol\";\n\n/**\n * @title ERC165 implementation\n */\ncontract ERC165 is IERC165 {\n    using ERC165Storage for ERC165Storage.Layout;\n\n    /**\n     * @inheritdoc IERC165\n     */\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\n        return ERC165Storage.layout().isSupportedInterface(interfaceId);\n    }\n}\n"},"flair-sdk:introspection/ERC165Ownable":{"fqn":"flair-sdk:introspection/ERC165Ownable","version":"2.4.4","address":{"3":"0xE07116Ab6e1599eF4991986D68E0377d705Ab455","4":"0xdd13cD39976d4Ae6c7Bb6F0333bB68Abcd0b8f88","5":"0x52AF631599F413FdfDD8AEC5D72578B73708Dd3C","goerli":"0x52AF631599F413FdfDD8AEC5D72578B73708Dd3C","rinkeby":"0xdd13cD39976d4Ae6c7Bb6F0333bB68Abcd0b8f88","ropsten":"0xE07116Ab6e1599eF4991986D68E0377d705Ab455"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC165Ownable","sourceName":"src/introspection/ERC165Ownable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"bytes4[]","name":"interfaceIds","type":"bytes4[]"},{"internalType":"bytes4[]","name":"interfaceIdsToRemove","type":"bytes4[]"}],"name":"setERC165","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506103f0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a84809114610030575b600080fd5b61004361003e3660046102c8565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f01ffc9a70000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264060208190527fe1cd5a39bd0bb11debfd51073019ab01630b5cba823095c51b2463cd8445abf8805460ff19166001179055905b848110156101ea57600182600088888581811061018257610182610334565b9050602002016020810190610197919061034a565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff1916911515919091179055806101e281610393565b915050610163565b5060005b82811015610274576000828186868581811061020c5761020c610334565b9050602002016020810190610221919061034a565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff19169115159190911790558061026c81610393565b9150506101ee565b505050505050565b60008083601f84011261028e57600080fd5b50813567ffffffffffffffff8111156102a657600080fd5b6020830191508360208260051b85010111156102c157600080fd5b9250929050565b600080600080604085870312156102de57600080fd5b843567ffffffffffffffff808211156102f657600080fd5b6103028883890161027c565b9096509450602087013591508082111561031b57600080fd5b506103288782880161027c565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561035c57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461038c57600080fd5b9392505050565b6000600182016103b357634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122073a69efeed33091ae3f263e0f10f05ffedabf51097fa3293ec1990c5a6b8f8b764736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a84809114610030575b600080fd5b61004361003e3660046102c8565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f01ffc9a70000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264060208190527fe1cd5a39bd0bb11debfd51073019ab01630b5cba823095c51b2463cd8445abf8805460ff19166001179055905b848110156101ea57600182600088888581811061018257610182610334565b9050602002016020810190610197919061034a565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff1916911515919091179055806101e281610393565b915050610163565b5060005b82811015610274576000828186868581811061020c5761020c610334565b9050602002016020810190610221919061034a565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff19169115159190911790558061026c81610393565b9150506101ee565b505050505050565b60008083601f84011261028e57600080fd5b50813567ffffffffffffffff8111156102a657600080fd5b6020830191508360208260051b85010111156102c157600080fd5b9250929050565b600080600080604085870312156102de57600080fd5b843567ffffffffffffffff808211156102f657600080fd5b6103028883890161027c565b9096509450602087013591508082111561031b57600080fd5b506103288782880161027c565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561035c57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461038c57600080fd5b9392505050565b6000600182016103b357634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122073a69efeed33091ae3f263e0f10f05ffedabf51097fa3293ec1990c5a6b8f8b764736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../access/ownable/OwnableInternal.sol\";\nimport \"./IERC165.sol\";\nimport \"./ERC165Storage.sol\";\nimport \"./IERC165Admin.sol\";\n\n/**\n * @title ERC165 - Admin - Ownable\n * @notice Standard EIP-165 management facet using Ownable extension for access control.\n *\n * @custom:type eip-2535-facet\n * @custom:category Diamonds\n * @custom:provides-interfaces 0x2a848091\n */\ncontract ERC165Ownable is IERC165Admin, OwnableInternal {\n    using ERC165Storage for ERC165Storage.Layout;\n\n    /**\n     * @param interfaceIds list of interface id to set as supported\n     * @param interfaceIdsToRemove list of interface id to unset as supported\n     */\n    function setERC165(bytes4[] calldata interfaceIds, bytes4[] calldata interfaceIdsToRemove) public onlyOwner {\n        ERC165Storage.Layout storage l = ERC165Storage.layout();\n\n        l.supportedInterfaces[type(IERC165).interfaceId] = true;\n\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            l.supportedInterfaces[interfaceIds[i]] = true;\n        }\n\n        for (uint256 i = 0; i < interfaceIdsToRemove.length; i++) {\n            l.supportedInterfaces[interfaceIdsToRemove[i]] = false;\n        }\n    }\n}\n"},"flair-sdk:metatx/ERC2771Context":{"fqn":"flair-sdk:metatx/ERC2771Context","version":"2.4.4","address":{"3":"0x4c4226c746c9ce072710f44d7ee8798c6f6dcffd","4":"0x84B454aC1e3f1CFE1551D86a5BECa645Ee1D8393","5":"0x208Fc6bcB67CC184162e18Ba53b11cFD568B53d5","goerli":"0x208Fc6bcB67CC184162e18Ba53b11cFD568B53d5","rinkeby":"0x84B454aC1e3f1CFE1551D86a5BECa645Ee1D8393","ropsten":"0x4c4226c746c9ce072710f44d7ee8798c6f6dcffd"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC2771Context","sourceName":"src/metatx/ERC2771Context.sol","abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b5060fd8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063572b6c0514602d575b600080fd5b60786038366004608c565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b604051901515815260200160405180910390f35b600060208284031215609d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460c057600080fd5b939250505056fea264697066735822122036045f6946f82eb62e22b239246a916163dfa7bda5f809f73e73ac0438e1ffa564736f6c634300080f0033","deployedBytecode":"0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063572b6c0514602d575b600080fd5b60786038366004608c565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b604051901515815260200160405180910390f35b600060208284031215609d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460c057600080fd5b939250505056fea264697066735822122036045f6946f82eb62e22b239246a916163dfa7bda5f809f73e73ac0438e1ffa564736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./ERC2771ContextStorage.sol\";\nimport \"./ERC2771ContextInternal.sol\";\nimport \"./IERC2771Context.sol\";\n\ncontract ERC2771Context is IERC2771Context, ERC2771ContextInternal {\n    using ERC2771ContextStorage for ERC2771ContextStorage.Layout;\n\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return _isTrustedForwarder(forwarder);\n    }\n}\n"},"flair-sdk:metatx/ERC2771ContextOwnable":{"fqn":"flair-sdk:metatx/ERC2771ContextOwnable","version":"2.4.4","address":{"3":"0xD89b756f2a891E99C1eC9FB452d99Fe1cd9C0876","4":"0x2FE6A1c703baAa73901E4e2D533e3F3A0cE29332","5":"0x9d9Ec7d191a11F38d3941A2A8d656584aF01748e","goerli":"0x9d9Ec7d191a11F38d3941A2A8d656584aF01748e","rinkeby":"0x2FE6A1c703baAa73901E4e2D533e3F3A0cE29332","ropsten":"0xD89b756f2a891E99C1eC9FB452d99Fe1cd9C0876"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC2771ContextOwnable","sourceName":"src/metatx/ERC2771ContextOwnable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"trustedForwarder","type":"address"}],"name":"setTrustedForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506101c2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da74222814610030575b600080fd5b61004361003e36600461014f565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f42080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561016157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461018557600080fd5b939250505056fea264697066735822122013fab626059dddf1e1ab5b6c661f17c68a6b37de16d9a867be3aedd0def9fa5a64736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da74222814610030575b600080fd5b61004361003e36600461014f565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f42080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561016157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461018557600080fd5b939250505056fea264697066735822122013fab626059dddf1e1ab5b6c661f17c68a6b37de16d9a867be3aedd0def9fa5a64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../access/ownable/OwnableInternal.sol\";\nimport \"./ERC2771ContextStorage.sol\";\nimport \"./IERC2771ContextAdmin.sol\";\n\ncontract ERC2771ContextOwnable is IERC2771ContextAdmin, OwnableInternal {\n    function setTrustedForwarder(address trustedForwarder) public onlyOwner {\n        ERC2771ContextStorage.layout().trustedForwarder = trustedForwarder;\n    }\n}\n"},"flair-sdk:factory/FlairFactory":{"fqn":"flair-sdk:factory/FlairFactory","version":"2.4.4","address":{"3":"0x88D339113E47355A9544E0665193F47A0325EBcB","5":"0xE9fCC8544F378332CAF85A9AbBd1d24872feAd54","goerli":"0xE9fCC8544F378332CAF85A9AbBd1d24872feAd54","ropsten":"0x88D339113E47355A9544E0665193F47A0325EBcB"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"FlairFactory","sourceName":"src/factory/FlairFactory.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"deployer","type":"address"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"anonymous":false,"inputs":[],"name":"WithdrawPowerRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"claimTokens","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"cloneDeterministicSimple","outputs":[{"internalType":"address","name":"deployedProxy","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"name":"predictDeterministicSimple","outputs":[{"internalType":"address","name":"deployedProxy","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeWithdrawPower","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum WithdrawMode","name":"_withdrawMode","type":"uint8"}],"name":"setWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawRecipient","type":"address"}],"name":"setWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"claimTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawMode","outputs":[{"internalType":"enum WithdrawMode","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawModeLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawPowerRevoked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRecipientLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x60806040523480156200001157600080fd5b506200001d336200002d565b6200002762000088565b62000390565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff1615808015620000a95750600054600160ff909116105b80620000d95750620000c630620001bd60201b62000c071760201c565b158015620000d9575060005460ff166001145b620001425760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000166576000805461ff0019166101001790555b62000173336000620001cc565b8015620001ba576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620002285760405162461bcd60e51b815260206004820152602b602482015260008051602062001a0a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b62000234828262000238565b5050565b600054610100900460ff16620002945760405162461bcd60e51b815260206004820152602b602482015260008051602062001a0a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b620002a663ac2ba33360e01b620002f6565b600280546001600160a01b0384166001600160a01b0319821681178355839291600162ff000160a01b03191617600160b01b836003811115620002ed57620002ed6200037a565b02179055505050565b6001600160e01b03198082169003620003525760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640162000139565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b634e487b7160e01b600052602160045260246000fd5b61166a80620003a06000396000f3fe6080604052600436106101295760003560e01c8063837fe140116100a5578063c723955a11610074578063dcbe353f11610059578063dcbe353f1461030e578063de6d6d961461032e578063f2fde38b1461034e57600080fd5b8063c723955a146102e4578063da82b227146102f957600080fd5b8063837fe1401461026a5780638da5cb5b1461027f578063af121f54146102a3578063c0bb38ff146102c457600080fd5b806347791ece116100fc5780636057e0ec116100e15780636057e0ec1461021f578063715018a6146102405780638129fc1c1461025557600080fd5b806347791ece146101eb57806349561cb9146101fe57600080fd5b806301ffc9a71461012e57806310db94b9146101635780632c2330671461019b5780632d00b587146101bd575b600080fd5b34801561013a57600080fd5b5061014e610149366004611301565b61036e565b60405190151581526020015b60405180910390f35b34801561016f57600080fd5b5061018361017e366004611347565b6103c7565b6040516001600160a01b03909116815260200161015a565b3480156101a757600080fd5b506101bb6101b6366004611371565b61041b565b005b3480156101c957600080fd5b506002546101de90600160b01b900460ff1681565b60405161015a91906113a8565b6101836101f93660046113d0565b6104b3565b34801561020a57600080fd5b5060025461014e90600160b81b900460ff1681565b34801561022b57600080fd5b5060025461014e90600160a01b900460ff1681565b34801561024c57600080fd5b506101bb61060a565b34801561026157600080fd5b506101bb61061e565b34801561027657600080fd5b506101bb610741565b34801561028b57600080fd5b506000546201000090046001600160a01b0316610183565b3480156102af57600080fd5b5060025461014e90600160a81b900460ff1681565b3480156102d057600080fd5b506101bb6102df366004611457565b6107bc565b3480156102f057600080fd5b506101bb610836565b34801561030557600080fd5b506101bb6108c8565b34801561031a57600080fd5b50600254610183906001600160a01b031681565b34801561033a57600080fd5b506101bb6103493660046114be565b610929565b34801561035a57600080fd5b506101bb610369366004611457565b610b7a565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806103c157506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506104138482610c16565b949350505050565b610423610c99565b600254600160b81b900460ff161561046b5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064015b60405180910390fd5b600280548291907fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b8360038111156104ab576104ab611392565b021790555050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810184905260009081906054016040516020818303038152906040528051906020012090506104ff8682610cfa565b915082156105cb57600080836001600160a01b0316868660405161052492919061152a565b6000604051808303816000865af19150503d8060008114610561576040519150601f19603f3d011682016040523d82523d6000602084013e610566565b606091505b5091509150816105c8578051156105805780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e4500000000000000000000000000000000006044820152606401610462565b50505b6040516001600160a01b0383169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b610612610c99565b61061c6000610db1565b565b600054610100900460ff161580801561063e5750600054600160ff909116105b806106585750303b158015610658575060005460ff166001145b6106ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610462565b6000805460ff1916600117905580156106ed576000805461ff0019166101001790555b6106f8336000610e22565b801561073e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610749610c99565b600254600160a01b900460ff161561078c5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610462565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b6107c4610c99565b600254600160a01b900460ff16156108075760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610462565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61083e610c99565b600254600160b81b900460ff16156108985760405162461bcd60e51b815260206004820152600560248201527f4f434b45440000000000000000000000000000000000000000000000000000006044820152606401610462565b600280547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b179055565b6108d0610c99565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b61093233610ead565b6002546001600160a01b031661098a5760405162461bcd60e51b815260206004820152601560248201527f57495448445241572f4e4f5f524543495049454e5400000000000000000000006044820152606401610462565b600254600160a81b900460ff16156109e45760405162461bcd60e51b815260206004820181905260248201527f57495448445241572f454d455247454e43595f504f5745525f5245564f4b45446044820152606401610462565b60005b83811015610b36576000858583818110610a0357610a0361153a565b9050602002016020810190610a189190611457565b6001600160a01b031603610a5b57610a56838383818110610a3b57610a3b61153a565b6002546001600160a01b03169260209091020135905061104b565b610b24565b848482818110610a6d57610a6d61153a565b9050602002016020810190610a829190611457565b6002546001600160a01b039182169163a9059cbb9116858585818110610aaa57610aaa61153a565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b229190611550565b505b80610b2e81611572565b9150506109e7565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a584848484604051610b6c9493929190611599565b60405180910390a150505050565b610b82610c99565b6001600160a01b038116610bfe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610462565b61073e81610db1565b6001600160a01b03163b151590565b6000610c928383306040517f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000008152606093841b60148201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b6000546001600160a01b036201000090910416331461061c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610462565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f59150506001600160a01b0381166103c15760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610462565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff16610e9f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610462565b610ea98282611169565b5050565b6003600254600160b01b900460ff166003811115610ecd57610ecd611392565b03610f1a5760405162461bcd60e51b815260206004820152600f60248201527f57495448445241572f4c4f434b454400000000000000000000000000000000006044820152606401610462565b60028054600160b01b900460ff166003811115610f3957610f39611392565b03610f415750565b6001600254600160b01b900460ff166003811115610f6157610f61611392565b03610fc3576002546001600160a01b0382811691161461073e5760405162461bcd60e51b815260206004820152601760248201527f57495448445241572f4f4e4c595f524543495049454e540000000000000000006044820152606401610462565b6000600254600160b01b900460ff166003811115610fe357610fe3611392565b0361073e576000546001600160a01b0382811662010000909204161461073e5760405162461bcd60e51b815260206004820152601360248201527f57495448445241572f4f4e4c595f4f574e4552000000000000000000000000006044820152606401610462565b8047101561109b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610462565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110e8576040519150601f19603f3d011682016040523d82523d6000602084013e6110ed565b606091505b50509050806111645760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610462565b505050565b600054610100900460ff166111e65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610462565b61120f7fac2ba3330000000000000000000000000000000000000000000000000000000061127f565b600280546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff198216811783558392917fffffffffffffffffff00ffff00000000000000000000000000000000000000001617600160b01b83600381111561127657611276611392565b02179055505050565b6001600160e01b031980821690036112d95760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610462565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b60006020828403121561131357600080fd5b81356001600160e01b031981168114610c9257600080fd5b80356001600160a01b038116811461134257600080fd5b919050565b6000806040838503121561135a57600080fd5b6113638361132b565b946020939093013593505050565b60006020828403121561138357600080fd5b813560048110610c9257600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106113ca57634e487b7160e01b600052602160045260246000fd5b91905290565b600080600080606085870312156113e657600080fd5b6113ef8561132b565b935060208501359250604085013567ffffffffffffffff8082111561141357600080fd5b818701915087601f83011261142757600080fd5b81358181111561143657600080fd5b88602082850101111561144857600080fd5b95989497505060200194505050565b60006020828403121561146957600080fd5b610c928261132b565b60008083601f84011261148457600080fd5b50813567ffffffffffffffff81111561149c57600080fd5b6020830191508360208260051b85010111156114b757600080fd5b9250929050565b600080600080604085870312156114d457600080fd5b843567ffffffffffffffff808211156114ec57600080fd5b6114f888838901611472565b9096509450602087013591508082111561151157600080fd5b5061151e87828801611472565b95989497509550505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561156257600080fd5b81518015158114610c9257600080fd5b60006001820161159257634e487b7160e01b600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b878110156115da576001600160a01b036115c58461132b565b168252602092830192909101906001016115ac565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561161357600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220ed60731ee92a21b70bac7c8c9a33fc8b9336ce44dff44c362abff4367aaed54764736f6c634300080f0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","deployedBytecode":"0x6080604052600436106101295760003560e01c8063837fe140116100a5578063c723955a11610074578063dcbe353f11610059578063dcbe353f1461030e578063de6d6d961461032e578063f2fde38b1461034e57600080fd5b8063c723955a146102e4578063da82b227146102f957600080fd5b8063837fe1401461026a5780638da5cb5b1461027f578063af121f54146102a3578063c0bb38ff146102c457600080fd5b806347791ece116100fc5780636057e0ec116100e15780636057e0ec1461021f578063715018a6146102405780638129fc1c1461025557600080fd5b806347791ece146101eb57806349561cb9146101fe57600080fd5b806301ffc9a71461012e57806310db94b9146101635780632c2330671461019b5780632d00b587146101bd575b600080fd5b34801561013a57600080fd5b5061014e610149366004611301565b61036e565b60405190151581526020015b60405180910390f35b34801561016f57600080fd5b5061018361017e366004611347565b6103c7565b6040516001600160a01b03909116815260200161015a565b3480156101a757600080fd5b506101bb6101b6366004611371565b61041b565b005b3480156101c957600080fd5b506002546101de90600160b01b900460ff1681565b60405161015a91906113a8565b6101836101f93660046113d0565b6104b3565b34801561020a57600080fd5b5060025461014e90600160b81b900460ff1681565b34801561022b57600080fd5b5060025461014e90600160a01b900460ff1681565b34801561024c57600080fd5b506101bb61060a565b34801561026157600080fd5b506101bb61061e565b34801561027657600080fd5b506101bb610741565b34801561028b57600080fd5b506000546201000090046001600160a01b0316610183565b3480156102af57600080fd5b5060025461014e90600160a81b900460ff1681565b3480156102d057600080fd5b506101bb6102df366004611457565b6107bc565b3480156102f057600080fd5b506101bb610836565b34801561030557600080fd5b506101bb6108c8565b34801561031a57600080fd5b50600254610183906001600160a01b031681565b34801561033a57600080fd5b506101bb6103493660046114be565b610929565b34801561035a57600080fd5b506101bb610369366004611457565b610b7a565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806103c157506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506104138482610c16565b949350505050565b610423610c99565b600254600160b81b900460ff161561046b5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064015b60405180910390fd5b600280548291907fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b8360038111156104ab576104ab611392565b021790555050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810184905260009081906054016040516020818303038152906040528051906020012090506104ff8682610cfa565b915082156105cb57600080836001600160a01b0316868660405161052492919061152a565b6000604051808303816000865af19150503d8060008114610561576040519150601f19603f3d011682016040523d82523d6000602084013e610566565b606091505b5091509150816105c8578051156105805780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e4500000000000000000000000000000000006044820152606401610462565b50505b6040516001600160a01b0383169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b610612610c99565b61061c6000610db1565b565b600054610100900460ff161580801561063e5750600054600160ff909116105b806106585750303b158015610658575060005460ff166001145b6106ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610462565b6000805460ff1916600117905580156106ed576000805461ff0019166101001790555b6106f8336000610e22565b801561073e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610749610c99565b600254600160a01b900460ff161561078c5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610462565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b6107c4610c99565b600254600160a01b900460ff16156108075760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610462565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61083e610c99565b600254600160b81b900460ff16156108985760405162461bcd60e51b815260206004820152600560248201527f4f434b45440000000000000000000000000000000000000000000000000000006044820152606401610462565b600280547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b179055565b6108d0610c99565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b61093233610ead565b6002546001600160a01b031661098a5760405162461bcd60e51b815260206004820152601560248201527f57495448445241572f4e4f5f524543495049454e5400000000000000000000006044820152606401610462565b600254600160a81b900460ff16156109e45760405162461bcd60e51b815260206004820181905260248201527f57495448445241572f454d455247454e43595f504f5745525f5245564f4b45446044820152606401610462565b60005b83811015610b36576000858583818110610a0357610a0361153a565b9050602002016020810190610a189190611457565b6001600160a01b031603610a5b57610a56838383818110610a3b57610a3b61153a565b6002546001600160a01b03169260209091020135905061104b565b610b24565b848482818110610a6d57610a6d61153a565b9050602002016020810190610a829190611457565b6002546001600160a01b039182169163a9059cbb9116858585818110610aaa57610aaa61153a565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b229190611550565b505b80610b2e81611572565b9150506109e7565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a584848484604051610b6c9493929190611599565b60405180910390a150505050565b610b82610c99565b6001600160a01b038116610bfe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610462565b61073e81610db1565b6001600160a01b03163b151590565b6000610c928383306040517f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000008152606093841b60148201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b6000546001600160a01b036201000090910416331461061c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610462565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f59150506001600160a01b0381166103c15760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610462565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff16610e9f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610462565b610ea98282611169565b5050565b6003600254600160b01b900460ff166003811115610ecd57610ecd611392565b03610f1a5760405162461bcd60e51b815260206004820152600f60248201527f57495448445241572f4c4f434b454400000000000000000000000000000000006044820152606401610462565b60028054600160b01b900460ff166003811115610f3957610f39611392565b03610f415750565b6001600254600160b01b900460ff166003811115610f6157610f61611392565b03610fc3576002546001600160a01b0382811691161461073e5760405162461bcd60e51b815260206004820152601760248201527f57495448445241572f4f4e4c595f524543495049454e540000000000000000006044820152606401610462565b6000600254600160b01b900460ff166003811115610fe357610fe3611392565b0361073e576000546001600160a01b0382811662010000909204161461073e5760405162461bcd60e51b815260206004820152601360248201527f57495448445241572f4f4e4c595f4f574e4552000000000000000000000000006044820152606401610462565b8047101561109b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610462565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110e8576040519150601f19603f3d011682016040523d82523d6000602084013e6110ed565b606091505b50509050806111645760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610462565b505050565b600054610100900460ff166111e65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610462565b61120f7fac2ba3330000000000000000000000000000000000000000000000000000000061127f565b600280546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff198216811783558392917fffffffffffffffffff00ffff00000000000000000000000000000000000000001617600160b01b83600381111561127657611276611392565b02179055505050565b6001600160e01b031980821690036112d95760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610462565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b60006020828403121561131357600080fd5b81356001600160e01b031981168114610c9257600080fd5b80356001600160a01b038116811461134257600080fd5b919050565b6000806040838503121561135a57600080fd5b6113638361132b565b946020939093013593505050565b60006020828403121561138357600080fd5b813560048110610c9257600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106113ca57634e487b7160e01b600052602160045260246000fd5b91905290565b600080600080606085870312156113e657600080fd5b6113ef8561132b565b935060208501359250604085013567ffffffffffffffff8082111561141357600080fd5b818701915087601f83011261142757600080fd5b81358181111561143657600080fd5b88602082850101111561144857600080fd5b95989497505060200194505050565b60006020828403121561146957600080fd5b610c928261132b565b60008083601f84011261148457600080fd5b50813567ffffffffffffffff81111561149c57600080fd5b6020830191508360208260051b85010111156114b757600080fd5b9250929050565b600080600080604085870312156114d457600080fd5b843567ffffffffffffffff808211156114ec57600080fd5b6114f888838901611472565b9096509450602087013591508082111561151157600080fd5b5061151e87828801611472565b95989497509550505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561156257600080fd5b81518015158114610c9257600080fd5b60006001820161159257634e487b7160e01b600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b878110156115da576001600160a01b036115c58461132b565b168252602092830192909101906001016115ac565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561161357600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220ed60731ee92a21b70bac7c8c9a33fc8b9336ce44dff44c362abff4367aaed54764736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"../common/WithdrawExtension.sol\";\nimport \"./Clones.sol\";\n\ncontract FlairFactory is Initializable, Ownable, WithdrawExtension {\n    event ProxyCreated(address indexed deployer, address indexed proxyAddress);\n\n    constructor() {\n        initialize();\n    }\n\n    function initialize() public initializer {\n        __WithdrawExtension_init(_msgSender(), WithdrawMode.OWNER);\n    }\n\n    function cloneDeterministicSimple(\n        address implementation,\n        bytes32 salt,\n        bytes calldata data\n    ) external payable returns (address deployedProxy) {\n        bytes32 _salt = keccak256(abi.encodePacked(msg.sender, salt));\n        deployedProxy = Clones.cloneDeterministic(implementation, _salt);\n\n        if (data.length > 0) {\n            (bool success, bytes memory returndata) = deployedProxy.call(data);\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (returndata.length > 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    assembly {\n                        let returndata_size := mload(returndata)\n                        revert(add(32, returndata), returndata_size)\n                    }\n                } else {\n                    revert(\"FAILED_TO_CLONE\");\n                }\n            }\n        }\n\n        emit ProxyCreated(msg.sender, deployedProxy);\n    }\n\n    function predictDeterministicSimple(address implementation, bytes32 salt)\n        external\n        view\n        returns (address deployedProxy)\n    {\n        bytes32 _salt = keccak256(abi.encodePacked(msg.sender, salt));\n        deployedProxy = Clones.predictDeterministicAddress(\n            implementation,\n            _salt\n        );\n    }\n}\n"},"flair-sdk:factory/FlairFactoryNewable":{"fqn":"flair-sdk:factory/FlairFactoryNewable","version":"2.4.4","address":{"3":"0x5e88650C4e38206addb2561cec3103Fa6C6A9bF7","5":"0x53F5Dd7344Dc677963d07a5B6a9267316B52baC3","goerli":"0x53F5Dd7344Dc677963d07a5B6a9267316B52baC3","ropsten":"0x5e88650C4e38206addb2561cec3103Fa6C6A9bF7"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"FlairFactoryNewable","sourceName":"src/factory/FlairFactoryNewable.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"deployer","type":"address"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"anonymous":false,"inputs":[],"name":"WithdrawPowerRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"claimTokens","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"cloneDeterministicSimple","outputs":[{"internalType":"address","name":"deployedProxy","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeWithdrawPower","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum WithdrawMode","name":"_withdrawMode","type":"uint8"}],"name":"setWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawRecipient","type":"address"}],"name":"setWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"claimTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawMode","outputs":[{"internalType":"enum WithdrawMode","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawModeLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawPowerRevoked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRecipientLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x60806040523480156200001157600080fd5b506200001d336200002d565b6200002762000088565b62000390565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff1615808015620000a95750600054600160ff909116105b80620000d95750620000c630620001bd60201b62000b711760201c565b158015620000d9575060005460ff166001145b620001425760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000166576000805461ff0019166101001790555b62000173336000620001cc565b8015620001ba576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620002285760405162461bcd60e51b815260206004820152602b60248201526000805160206200199683398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b62000234828262000238565b5050565b600054610100900460ff16620002945760405162461bcd60e51b815260206004820152602b60248201526000805160206200199683398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b620002a663ac2ba33360e01b620002f6565b600280546001600160a01b0384166001600160a01b0319821681178355839291600162ff000160a01b03191617600160b01b836003811115620002ed57620002ed6200037a565b02179055505050565b6001600160e01b03198082169003620003525760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640162000139565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b634e487b7160e01b600052602160045260246000fd5b6115f680620003a06000396000f3fe60806040526004361061010e5760003560e01c8063837fe140116100a5578063c723955a11610074578063dcbe353f11610059578063dcbe353f146102d3578063de6d6d96146102f3578063f2fde38b1461031357600080fd5b8063c723955a146102a9578063da82b227146102be57600080fd5b8063837fe1401461022f5780638da5cb5b14610244578063af121f5414610268578063c0bb38ff1461028957600080fd5b806349561cb9116100e157806349561cb9146101c35780636057e0ec146101e4578063715018a6146102055780638129fc1c1461021a57600080fd5b806301ffc9a7146101135780632c233067146101485780632d00b5871461016a57806347791ece14610198575b600080fd5b34801561011f57600080fd5b5061013361012e36600461113e565b610333565b60405190151581526020015b60405180910390f35b34801561015457600080fd5b5061016861016336600461116f565b61038c565b005b34801561017657600080fd5b5060025461018b90600160b01b900460ff1681565b60405161013f91906111a6565b6101ab6101a63660046111ea565b610424565b6040516001600160a01b03909116815260200161013f565b3480156101cf57600080fd5b5060025461013390600160b81b900460ff1681565b3480156101f057600080fd5b5060025461013390600160a01b900460ff1681565b34801561021157600080fd5b50610168610574565b34801561022657600080fd5b50610168610588565b34801561023b57600080fd5b506101686106ab565b34801561025057600080fd5b506000546201000090046001600160a01b03166101ab565b34801561027457600080fd5b5060025461013390600160a81b900460ff1681565b34801561029557600080fd5b506101686102a4366004611271565b610726565b3480156102b557600080fd5b506101686107a0565b3480156102ca57600080fd5b50610168610832565b3480156102df57600080fd5b506002546101ab906001600160a01b031681565b3480156102ff57600080fd5b5061016861030e3660046112d8565b610893565b34801561031f57600080fd5b5061016861032e366004611271565b610ae4565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061038657506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b610394610b80565b600254600160b81b900460ff16156103dc5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064015b60405180910390fd5b600280548291907fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b83600381111561041c5761041c611190565b021790555050565b600080848660405161043590611131565b6001600160a01b0390911681526020018190604051809103906000f5905080158015610465573d6000803e3d6000fd5b509150819050821561053557600080836001600160a01b0316868660405161048e929190611344565b6000604051808303816000865af19150503d80600081146104cb576040519150601f19603f3d011682016040523d82523d6000602084013e6104d0565b606091505b509150915081610532578051156104ea5780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e45000000000000000000000000000000000060448201526064016103d3565b50505b6040516001600160a01b0383169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b61057c610b80565b6105866000610be1565b565b600054610100900460ff16158080156105a85750600054600160ff909116105b806105c25750303b1580156105c2575060005460ff166001145b6106345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103d3565b6000805460ff191660011790558015610657576000805461ff0019166101001790555b610662336000610c52565b80156106a8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6106b3610b80565b600254600160a01b900460ff16156106f65760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064016103d3565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b61072e610b80565b600254600160a01b900460ff16156107715760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064016103d3565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6107a8610b80565b600254600160b81b900460ff16156108025760405162461bcd60e51b815260206004820152600560248201527f4f434b454400000000000000000000000000000000000000000000000000000060448201526064016103d3565b600280547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b179055565b61083a610b80565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b61089c33610cdd565b6002546001600160a01b03166108f45760405162461bcd60e51b815260206004820152601560248201527f57495448445241572f4e4f5f524543495049454e54000000000000000000000060448201526064016103d3565b600254600160a81b900460ff161561094e5760405162461bcd60e51b815260206004820181905260248201527f57495448445241572f454d455247454e43595f504f5745525f5245564f4b454460448201526064016103d3565b60005b83811015610aa057600085858381811061096d5761096d611354565b90506020020160208101906109829190611271565b6001600160a01b0316036109c5576109c08383838181106109a5576109a5611354565b6002546001600160a01b031692602090910201359050610e7b565b610a8e565b8484828181106109d7576109d7611354565b90506020020160208101906109ec9190611271565b6002546001600160a01b039182169163a9059cbb9116858585818110610a1457610a14611354565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c919061136a565b505b80610a988161138c565b915050610951565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a584848484604051610ad694939291906113b3565b60405180910390a150505050565b610aec610b80565b6001600160a01b038116610b685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d3565b6106a881610be1565b6001600160a01b03163b151590565b6000546001600160a01b03620100009091041633146105865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d3565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff16610ccf5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d3565b610cd98282610f99565b5050565b6003600254600160b01b900460ff166003811115610cfd57610cfd611190565b03610d4a5760405162461bcd60e51b815260206004820152600f60248201527f57495448445241572f4c4f434b4544000000000000000000000000000000000060448201526064016103d3565b60028054600160b01b900460ff166003811115610d6957610d69611190565b03610d715750565b6001600254600160b01b900460ff166003811115610d9157610d91611190565b03610df3576002546001600160a01b038281169116146106a85760405162461bcd60e51b815260206004820152601760248201527f57495448445241572f4f4e4c595f524543495049454e5400000000000000000060448201526064016103d3565b6000600254600160b01b900460ff166003811115610e1357610e13611190565b036106a8576000546001600160a01b038281166201000090920416146106a85760405162461bcd60e51b815260206004820152601360248201527f57495448445241572f4f4e4c595f4f574e45520000000000000000000000000060448201526064016103d3565b80471015610ecb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103d3565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f18576040519150601f19603f3d011682016040523d82523d6000602084013e610f1d565b606091505b5050905080610f945760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103d3565b505050565b600054610100900460ff166110165760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d3565b61103f7fac2ba333000000000000000000000000000000000000000000000000000000006110af565b600280546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff198216811783558392917fffffffffffffffffff00ffff00000000000000000000000000000000000000001617600160b01b8360038111156110a6576110a6611190565b02179055505050565b6001600160e01b031980821690036111095760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016103d3565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b6101728061144f83390190565b60006020828403121561115057600080fd5b81356001600160e01b03198116811461116857600080fd5b9392505050565b60006020828403121561118157600080fd5b81356004811061116857600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106111c857634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160a01b03811681146111e557600080fd5b919050565b6000806000806060858703121561120057600080fd5b611209856111ce565b935060208501359250604085013567ffffffffffffffff8082111561122d57600080fd5b818701915087601f83011261124157600080fd5b81358181111561125057600080fd5b88602082850101111561126257600080fd5b95989497505060200194505050565b60006020828403121561128357600080fd5b611168826111ce565b60008083601f84011261129e57600080fd5b50813567ffffffffffffffff8111156112b657600080fd5b6020830191508360208260051b85010111156112d157600080fd5b9250929050565b600080600080604085870312156112ee57600080fd5b843567ffffffffffffffff8082111561130657600080fd5b6113128883890161128c565b9096509450602087013591508082111561132b57600080fd5b506113388782880161128c565b95989497509550505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561137c57600080fd5b8151801515811461116857600080fd5b6000600182016113ac57634e487b7160e01b600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b878110156113f4576001600160a01b036113df846111ce565b168252602092830192909101906001016113c6565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561142d57600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fe608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea264697066735822122010e3d1afd2c437d773a5002b589123ae499d9167b69637e26ef5120fc87f46dc64736f6c634300080f0033a2646970667358221220516ebf9c27f086c09355dd72ef43f510961e1e6800bf2157730909d8b6cad2e664736f6c634300080f0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069","deployedBytecode":"0x60806040526004361061010e5760003560e01c8063837fe140116100a5578063c723955a11610074578063dcbe353f11610059578063dcbe353f146102d3578063de6d6d96146102f3578063f2fde38b1461031357600080fd5b8063c723955a146102a9578063da82b227146102be57600080fd5b8063837fe1401461022f5780638da5cb5b14610244578063af121f5414610268578063c0bb38ff1461028957600080fd5b806349561cb9116100e157806349561cb9146101c35780636057e0ec146101e4578063715018a6146102055780638129fc1c1461021a57600080fd5b806301ffc9a7146101135780632c233067146101485780632d00b5871461016a57806347791ece14610198575b600080fd5b34801561011f57600080fd5b5061013361012e36600461113e565b610333565b60405190151581526020015b60405180910390f35b34801561015457600080fd5b5061016861016336600461116f565b61038c565b005b34801561017657600080fd5b5060025461018b90600160b01b900460ff1681565b60405161013f91906111a6565b6101ab6101a63660046111ea565b610424565b6040516001600160a01b03909116815260200161013f565b3480156101cf57600080fd5b5060025461013390600160b81b900460ff1681565b3480156101f057600080fd5b5060025461013390600160a01b900460ff1681565b34801561021157600080fd5b50610168610574565b34801561022657600080fd5b50610168610588565b34801561023b57600080fd5b506101686106ab565b34801561025057600080fd5b506000546201000090046001600160a01b03166101ab565b34801561027457600080fd5b5060025461013390600160a81b900460ff1681565b34801561029557600080fd5b506101686102a4366004611271565b610726565b3480156102b557600080fd5b506101686107a0565b3480156102ca57600080fd5b50610168610832565b3480156102df57600080fd5b506002546101ab906001600160a01b031681565b3480156102ff57600080fd5b5061016861030e3660046112d8565b610893565b34801561031f57600080fd5b5061016861032e366004611271565b610ae4565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061038657506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b610394610b80565b600254600160b81b900460ff16156103dc5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064015b60405180910390fd5b600280548291907fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b83600381111561041c5761041c611190565b021790555050565b600080848660405161043590611131565b6001600160a01b0390911681526020018190604051809103906000f5905080158015610465573d6000803e3d6000fd5b509150819050821561053557600080836001600160a01b0316868660405161048e929190611344565b6000604051808303816000865af19150503d80600081146104cb576040519150601f19603f3d011682016040523d82523d6000602084013e6104d0565b606091505b509150915081610532578051156104ea5780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e45000000000000000000000000000000000060448201526064016103d3565b50505b6040516001600160a01b0383169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b61057c610b80565b6105866000610be1565b565b600054610100900460ff16158080156105a85750600054600160ff909116105b806105c25750303b1580156105c2575060005460ff166001145b6106345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103d3565b6000805460ff191660011790558015610657576000805461ff0019166101001790555b610662336000610c52565b80156106a8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6106b3610b80565b600254600160a01b900460ff16156106f65760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064016103d3565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b61072e610b80565b600254600160a01b900460ff16156107715760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064016103d3565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6107a8610b80565b600254600160b81b900460ff16156108025760405162461bcd60e51b815260206004820152600560248201527f4f434b454400000000000000000000000000000000000000000000000000000060448201526064016103d3565b600280547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b179055565b61083a610b80565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b61089c33610cdd565b6002546001600160a01b03166108f45760405162461bcd60e51b815260206004820152601560248201527f57495448445241572f4e4f5f524543495049454e54000000000000000000000060448201526064016103d3565b600254600160a81b900460ff161561094e5760405162461bcd60e51b815260206004820181905260248201527f57495448445241572f454d455247454e43595f504f5745525f5245564f4b454460448201526064016103d3565b60005b83811015610aa057600085858381811061096d5761096d611354565b90506020020160208101906109829190611271565b6001600160a01b0316036109c5576109c08383838181106109a5576109a5611354565b6002546001600160a01b031692602090910201359050610e7b565b610a8e565b8484828181106109d7576109d7611354565b90506020020160208101906109ec9190611271565b6002546001600160a01b039182169163a9059cbb9116858585818110610a1457610a14611354565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c919061136a565b505b80610a988161138c565b915050610951565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a584848484604051610ad694939291906113b3565b60405180910390a150505050565b610aec610b80565b6001600160a01b038116610b685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d3565b6106a881610be1565b6001600160a01b03163b151590565b6000546001600160a01b03620100009091041633146105865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d3565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff16610ccf5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d3565b610cd98282610f99565b5050565b6003600254600160b01b900460ff166003811115610cfd57610cfd611190565b03610d4a5760405162461bcd60e51b815260206004820152600f60248201527f57495448445241572f4c4f434b4544000000000000000000000000000000000060448201526064016103d3565b60028054600160b01b900460ff166003811115610d6957610d69611190565b03610d715750565b6001600254600160b01b900460ff166003811115610d9157610d91611190565b03610df3576002546001600160a01b038281169116146106a85760405162461bcd60e51b815260206004820152601760248201527f57495448445241572f4f4e4c595f524543495049454e5400000000000000000060448201526064016103d3565b6000600254600160b01b900460ff166003811115610e1357610e13611190565b036106a8576000546001600160a01b038281166201000090920416146106a85760405162461bcd60e51b815260206004820152601360248201527f57495448445241572f4f4e4c595f4f574e45520000000000000000000000000060448201526064016103d3565b80471015610ecb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103d3565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f18576040519150601f19603f3d011682016040523d82523d6000602084013e610f1d565b606091505b5050905080610f945760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103d3565b505050565b600054610100900460ff166110165760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d3565b61103f7fac2ba333000000000000000000000000000000000000000000000000000000006110af565b600280546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff198216811783558392917fffffffffffffffffff00ffff00000000000000000000000000000000000000001617600160b01b8360038111156110a6576110a6611190565b02179055505050565b6001600160e01b031980821690036111095760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016103d3565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b6101728061144f83390190565b60006020828403121561115057600080fd5b81356001600160e01b03198116811461116857600080fd5b9392505050565b60006020828403121561118157600080fd5b81356004811061116857600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106111c857634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160a01b03811681146111e557600080fd5b919050565b6000806000806060858703121561120057600080fd5b611209856111ce565b935060208501359250604085013567ffffffffffffffff8082111561122d57600080fd5b818701915087601f83011261124157600080fd5b81358181111561125057600080fd5b88602082850101111561126257600080fd5b95989497505060200194505050565b60006020828403121561128357600080fd5b611168826111ce565b60008083601f84011261129e57600080fd5b50813567ffffffffffffffff8111156112b657600080fd5b6020830191508360208260051b85010111156112d157600080fd5b9250929050565b600080600080604085870312156112ee57600080fd5b843567ffffffffffffffff8082111561130657600080fd5b6113128883890161128c565b9096509450602087013591508082111561132b57600080fd5b506113388782880161128c565b95989497509550505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561137c57600080fd5b8151801515811461116857600080fd5b6000600182016113ac57634e487b7160e01b600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b878110156113f4576001600160a01b036113df846111ce565b168252602092830192909101906001016113c6565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561142d57600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fe608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea264697066735822122010e3d1afd2c437d773a5002b589123ae499d9167b69637e26ef5120fc87f46dc64736f6c634300080f0033a2646970667358221220516ebf9c27f086c09355dd72ef43f510961e1e6800bf2157730909d8b6cad2e664736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"../common/WithdrawExtension.sol\";\nimport \"./Clones.sol\";\nimport \"./MinimalProxy.sol\";\n\ncontract FlairFactoryNewable is Initializable, Ownable, WithdrawExtension {\n    event ProxyCreated(address indexed deployer, address indexed proxyAddress);\n\n    constructor() {\n        initialize();\n    }\n\n    function initialize() public initializer {\n        __WithdrawExtension_init(_msgSender(), WithdrawMode.OWNER);\n    }\n\n    function cloneDeterministicSimple(\n        address implementation,\n        bytes32 salt,\n        bytes calldata data\n    ) external payable returns (address deployedProxy) {\n        MinimalProxy p = new MinimalProxy{salt: salt}(implementation);\n        deployedProxy = address(p);\n\n        if (data.length > 0) {\n            (bool success, bytes memory returndata) = deployedProxy.call(data);\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (returndata.length > 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    assembly {\n                        let returndata_size := mload(returndata)\n                        revert(add(32, returndata), returndata_size)\n                    }\n                } else {\n                    revert(\"FAILED_TO_CLONE\");\n                }\n            }\n        }\n\n        emit ProxyCreated(msg.sender, address(deployedProxy));\n    }\n}\n"},"flair-sdk:access/ownable/Ownable":{"fqn":"flair-sdk:access/ownable/Ownable","version":"2.4.4","address":{"3":"0x0459EE30E19776c6283Ce0A97DEC799c914BEB96","4":"0x2620537bcb9d8c3442547D8D8D1d19f62B187079","5":"0x6d018457d731E1EFA8700a454a52e46c2Ce1451e","goerli":"0x6d018457d731E1EFA8700a454a52e46c2Ce1451e","rinkeby":"0x2620537bcb9d8c3442547D8D8D1d19f62B187079","ropsten":"0x0459EE30E19776c6283Ce0A97DEC799c914BEB96"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"Ownable","sourceName":"src/access/ownable/Ownable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b506102bf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e610087565b005b610058610111565b6040516001600160a01b03909116815260200160405180910390f35b61004e610082366004610259565b610149565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101055760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61010f60006101ce565b565b60006101447fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031690565b905090565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101c25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100fc565b6101cb816101ce565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790556040516001600160a01b0382169033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60006020828403121561026b57600080fd5b81356001600160a01b038116811461028257600080fd5b939250505056fea2646970667358221220054c9f312d50129e913357c91589315c6f5bfd771c661672099a4112c1118e1164736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e610087565b005b610058610111565b6040516001600160a01b03909116815260200160405180910390f35b61004e610082366004610259565b610149565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101055760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61010f60006101ce565b565b60006101447fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031690565b905090565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101c25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100fc565b6101cb816101ce565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed480547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0383161790556040516001600160a01b0382169033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b60006020828403121561026b57600080fd5b81356001600160a01b038116811461028257600080fd5b939250505056fea2646970667358221220054c9f312d50129e913357c91589315c6f5bfd771c661672099a4112c1118e1164736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./IERC173.sol\";\nimport \"./OwnableInternal.sol\";\n\n/**\n * @title Ownership access control based on ERC173\n */\ncontract Ownable is IERC173, OwnableInternal {\n    /**\n     * @inheritdoc IERC173\n     */\n    function owner() public view virtual returns (address) {\n        return _owner();\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @inheritdoc IERC173\n     */\n    function transferOwnership(address account) public virtual onlyOwner {\n        _transferOwnership(account);\n    }\n}\n"},"flair-sdk:finance/sales/TieredSalesOwnable":{"fqn":"flair-sdk:finance/sales/TieredSalesOwnable","version":"2.4.4","address":{"3":"0xe61cc06a7435EC72507c028a577BbAD42E67eAc1","4":"0x80b613989a974AD6877b163eE2fa59535d462F47","5":"0xedE905c334D4278194fF240a3B2009E05C09879A","goerli":"0xedE905c334D4278194fF240a3B2009E05C09879A","rinkeby":"0x80b613989a974AD6877b163eE2fa59535d462F47","ropsten":"0xe61cc06a7435EC72507c028a577BbAD42E67eAc1"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"TieredSalesOwnable","sourceName":"src/finance/sales/TieredSalesOwnable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier","name":"tier","type":"tuple"}],"name":"configureTiering","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tierIds","type":"uint256[]"},{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier[]","name":"tiers","type":"tuple[]"}],"name":"configureTiering","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b50610654806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806320f1bb301461003b578063d8b436fd14610050575b600080fd5b61004e6100493660046103fa565b610063565b005b61004e61005e366004610434565b6100fc565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100ee5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6100f88282610194565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101825760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100e5565b61018e8484848461039c565b50505050565b60008281527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9060e083013510156102375760405162461bcd60e51b815260206004820152601160248201527f4c4f5745525f5448414e5f4d494e54454400000000000000000000000000000060448201526064016100e5565b6000838152600282016020526040902060060154156102b457600083815260038201602052604090205460c083013510156102b45760405162461bcd60e51b815260206004820152601260248201527f4c4f575f524553455256455f414d4f554e54000000000000000000000000000060448201526064016100e5565b600083815260038201602052604090205415610331576000838152600282016020526040902060040154608083013510156103315760405162461bcd60e51b815260206004820152601260248201527f4c4f575f4d41585f5045525f57414c4c4554000000000000000000000000000060448201526064016100e5565b6000838152600282016020526040812060060154825490918391610356908490610512565b90915550506000838152600282016020526040902082906103778282610529565b9050508160c0013581600001600082825461039291906105d7565b9091555050505050565b60005b838110156103f3576103e18585838181106103bc576103bc6105ef565b905060200201358484848181106103d5576103d56105ef565b90506101000201610194565b806103eb81610605565b91505061039f565b5050505050565b60008082840361012081121561040f57600080fd5b83359250610100601f198201121561042657600080fd5b506020830190509250929050565b6000806000806040858703121561044a57600080fd5b843567ffffffffffffffff8082111561046257600080fd5b818701915087601f83011261047657600080fd5b81358181111561048557600080fd5b8860208260051b850101111561049a57600080fd5b6020928301965094509086013590808211156104b557600080fd5b818701915087601f8301126104c957600080fd5b8135818111156104d857600080fd5b8860208260081b85010111156104ed57600080fd5b95989497505060200194505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610524576105246104fc565b500390565b8135815560208201356001820155604082013573ffffffffffffffffffffffffffffffffffffffff8116811461055e57600080fd5b6002820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905550606082013560038201556080820135600482015560a0820135600582015560c0820135600682015560e082013560078201555050565b600082198211156105ea576105ea6104fc565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610617576106176104fc565b506001019056fea26469706673582212209740d6fbbcdd8b947cba31731e9b368710a784eff21b52fd55c66bded186c32664736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100365760003560e01c806320f1bb301461003b578063d8b436fd14610050575b600080fd5b61004e6100493660046103fa565b610063565b005b61004e61005e366004610434565b6100fc565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100ee5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6100f88282610194565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101825760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100e5565b61018e8484848461039c565b50505050565b60008281527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9060e083013510156102375760405162461bcd60e51b815260206004820152601160248201527f4c4f5745525f5448414e5f4d494e54454400000000000000000000000000000060448201526064016100e5565b6000838152600282016020526040902060060154156102b457600083815260038201602052604090205460c083013510156102b45760405162461bcd60e51b815260206004820152601260248201527f4c4f575f524553455256455f414d4f554e54000000000000000000000000000060448201526064016100e5565b600083815260038201602052604090205415610331576000838152600282016020526040902060040154608083013510156103315760405162461bcd60e51b815260206004820152601260248201527f4c4f575f4d41585f5045525f57414c4c4554000000000000000000000000000060448201526064016100e5565b6000838152600282016020526040812060060154825490918391610356908490610512565b90915550506000838152600282016020526040902082906103778282610529565b9050508160c0013581600001600082825461039291906105d7565b9091555050505050565b60005b838110156103f3576103e18585838181106103bc576103bc6105ef565b905060200201358484848181106103d5576103d56105ef565b90506101000201610194565b806103eb81610605565b91505061039f565b5050505050565b60008082840361012081121561040f57600080fd5b83359250610100601f198201121561042657600080fd5b506020830190509250929050565b6000806000806040858703121561044a57600080fd5b843567ffffffffffffffff8082111561046257600080fd5b818701915087601f83011261047657600080fd5b81358181111561048557600080fd5b8860208260051b850101111561049a57600080fd5b6020928301965094509086013590808211156104b557600080fd5b818701915087601f8301126104c957600080fd5b8135818111156104d857600080fd5b8860208260081b85010111156104ed57600080fd5b95989497505060200194505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610524576105246104fc565b500390565b8135815560208201356001820155604082013573ffffffffffffffffffffffffffffffffffffffff8116811461055e57600080fd5b6002820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905550606082013560038201556080820135600482015560a0820135600582015560c0820135600682015560e082013560078201555050565b600082198211156105ea576105ea6104fc565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610617576106176104fc565b506001019056fea26469706673582212209740d6fbbcdd8b947cba31731e9b368710a784eff21b52fd55c66bded186c32664736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./ITieredSalesAdmin.sol\";\nimport \"./TieredSalesInternal.sol\";\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\n/**\n * @title Tiered Sales - Admin - Ownable\n * @notice Allow contract owner to manage sale tiers.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies eip165:0x79f33254\n * @custom:provides-interfaces 0xf8458dcd\n */\ncontract TieredSalesOwnable is ITieredSalesAdmin, OwnableInternal, TieredSalesInternal {\n    function configureTiering(uint256 tierId, ITieredSalesInternal.Tier calldata tier) external override onlyOwner {\n        super._configureTiering(tierId, tier);\n    }\n\n    function configureTiering(uint256[] calldata tierIds, ITieredSalesInternal.Tier[] calldata tiers)\n        external\n        override\n        onlyOwner\n    {\n        super._configureTiering(tierIds, tiers);\n    }\n}\n"},"flair-sdk:common/UnorderedForwarder":{"fqn":"flair-sdk:common/UnorderedForwarder","version":"2.4.4","address":{"3":"0x294Fe22BcF44ff08A730C7791Ae0e9F473c13876","5":"0xa6a7986065BA0aFAf13Fa9155BCFC4C2d0E80a0a","goerli":"0xa6a7986065BA0aFAf13Fa9155BCFC4C2d0E80a0a","ropsten":"0x294Fe22BcF44ff08A730C7791Ae0e9F473c13876"},"artifact":{"_format":"hh-sol-artifact-1","contractName":"UnorderedForwarder","sourceName":"src/common/UnorderedForwarder.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"minGasPrice","type":"uint256"},{"internalType":"uint256","name":"maxGasPrice","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct UnorderedForwarder.MetaTransaction[]","name":"mtxs","type":"tuple[]"},{"internalType":"bytes[]","name":"signatures","type":"bytes[]"}],"name":"batchExecute","outputs":[{"internalType":"bytes[]","name":"returnResults","type":"bytes[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"minGasPrice","type":"uint256"},{"internalType":"uint256","name":"maxGasPrice","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct UnorderedForwarder.MetaTransaction","name":"mtx","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"minGasPrice","type":"uint256"},{"internalType":"uint256","name":"maxGasPrice","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct UnorderedForwarder.MetaTransaction","name":"mtx","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"verify","outputs":[{"internalType":"bytes32","name":"mtxHash","type":"bytes32"}],"stateMutability":"view","type":"function"}],"bytecode":"0x61014060405234801561001157600080fd5b5060408051808201825260128152712ab737b93232b932b22337b93bb0b93232b960711b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fd8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c0526101205250506001600055506101179050565b60805160a05160c05160e05161010051610120516110b2610166600039600061095f015260006109ae01526000610989015260006108e20152600061090c0152600061093601526110b26000f3fe6080604052600436106100345760003560e01c8063b0565b2714610039578063b122ea941461006c578063cd74662f1461008c575b600080fd5b34801561004557600080fd5b50610059610054366004610ce7565b6100ac565b6040519081526020015b60405180910390f35b61007f61007a366004610dcc565b610300565b6040516100639190610e94565b61009f61009a366004610ce7565b610536565b6040516100639190610ef6565b60006101957f2bbaa6c701d9ecd9e324adef5727bb11883e2c24df1dd4c8f19e4e038b3734666100df6020870187610f09565b6100ef6040880160208901610f09565b6040880135606089013560808a013560a08b013560c08c013561011560e08e018e610f32565b604051610123929190610f79565b60408051918290038220602083019a909a526001600160a01b0398891690820152969095166060870152608086019390935260a085019190915260c084015260e08301526101008201526101208101919091526101400160405160208183030381529060405280519060200120610650565b9050428460a00135116101ef5760405162461bcd60e51b815260206004820152600b60248201527f4657445f4558504952454400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6101fc6020850185610f09565b6001600160a01b031661024784848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106bf9050565b6001600160a01b03161461029d5760405162461bcd60e51b815260206004820152601560248201527f4657445f494e56414c49445f5349474e4154555245000000000000000000000060448201526064016101e6565b600081815260016020526040902054156102f95760405162461bcd60e51b815260206004820152600c60248201527f4657445f5245504c41594544000000000000000000000000000000000000000060448201526064016101e6565b9392505050565b60606002600054036103545760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101e6565b600260009081556103653447610f9f565b90508483146103b65760405162461bcd60e51b815260206004820152601760248201527f4657445f4d49534d415443485f5349474e41545552455300000000000000000060448201526064016101e6565b8467ffffffffffffffff8111156103cf576103cf610fb6565b60405190808252806020026020018201604052801561040257816020015b60608152602001906001900390816103ed5790505b50915060005b8581101561048e5761046087878381811061042557610425610fcc565b90506020028101906104379190610fe2565b86868481811061044957610449610fcc565b905060200281019061045b9190610f32565b6106e3565b83828151811061047257610472610fcc565b60200260200101819052508061048790611002565b9050610408565b50600047341161049e57346104a0565b475b905080156104d757604051339082156108fc029083906000818181858888f193505050501580156104d5573d6000803e3d6000fd5b505b50478111156105285760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101e6565b506001600055949350505050565b606060026000540361058a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101e6565b6002600090815561059b3447610f9f565b90506105a88585856106e3565b915060004734116105b957346105bb565b475b905080156105f257604051339082156108fc029083906000818181858888f193505050501580156105f0573d6000803e3d6000fd5b505b50478111156106435760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101e6565b5060016000559392505050565b60006106b961065d6108d5565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006106ce85856109fc565b915091506106db81610a41565b509392505050565b60603a8460600135111580156106fd575083608001353a11155b6107495760405162461bcd60e51b815260206004820152600f60248201527f4657445f494e56414c49445f474153000000000000000000000000000000000060448201526064016101e6565b478460400135111561079d5760405162461bcd60e51b815260206004820152601160248201527f4657445f494e56414c49445f56414c554500000000000000000000000000000060448201526064016101e6565b60006107aa8585856100ac565b6000818152600160209081526040808320439055929350909182916107d3918901908901610f09565b6001600160a01b031660408801356107ee60e08a018a610f32565b6107fb60208c018c610f09565b60405160200161080d9392919061101b565b60408051601f198184030181529082905261082791611054565b60006040518083038185875af1925050503d8060008114610864576040519150601f19603f3d011682016040523d82523d6000602084013e610869565b606091505b5091509150816108cb578051156108835780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4657445f43414c4c5f4641494c4544000000000000000000000000000000000060448201526064016101e6565b9695505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561092e57507f000000000000000000000000000000000000000000000000000000000000000046145b1561095857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103610a325760208301516040840151606085015160001a610a2687828585610bfa565b94509450505050610a3a565b506000905060025b9250929050565b6000816004811115610a5557610a55611066565b03610a5d5750565b6001816004811115610a7157610a71611066565b03610abe5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101e6565b6002816004811115610ad257610ad2611066565b03610b1f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101e6565b6003816004811115610b3357610b33611066565b03610b8b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101e6565b6004816004811115610b9f57610b9f611066565b03610bf75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016101e6565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610c315750600090506003610cde565b8460ff16601b14158015610c4957508460ff16601c14155b15610c5a5750600090506004610cde565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610cae573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cd757600060019250925050610cde565b9150600090505b94509492505050565b600080600060408486031215610cfc57600080fd5b833567ffffffffffffffff80821115610d1457600080fd5b908501906101008288031215610d2957600080fd5b90935060208501359080821115610d3f57600080fd5b818601915086601f830112610d5357600080fd5b813581811115610d6257600080fd5b876020828501011115610d7457600080fd5b6020830194508093505050509250925092565b60008083601f840112610d9957600080fd5b50813567ffffffffffffffff811115610db157600080fd5b6020830191508360208260051b8501011115610a3a57600080fd5b60008060008060408587031215610de257600080fd5b843567ffffffffffffffff80821115610dfa57600080fd5b610e0688838901610d87565b90965094506020870135915080821115610e1f57600080fd5b50610e2c87828801610d87565b95989497509550505050565b60005b83811015610e53578181015183820152602001610e3b565b83811115610e62576000848401525b50505050565b60008151808452610e80816020860160208601610e38565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ee957603f19888603018452610ed7858351610e68565b94509285019290850190600101610ebb565b5092979650505050505050565b6020815260006102f96020830184610e68565b600060208284031215610f1b57600080fd5b81356001600160a01b03811681146102f957600080fd5b6000808335601e19843603018112610f4957600080fd5b83018035915067ffffffffffffffff821115610f6457600080fd5b602001915036819003821315610a3a57600080fd5b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610fb157610fb1610f89565b500390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112610ff857600080fd5b9190910192915050565b60006001820161101457611014610f89565b5060010190565b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b60008251610ff8818460208701610e38565b634e487b7160e01b600052602160045260246000fdfea264697066735822122039e6a60b11d6f061f2da1e791d621d94acc7570e414d8635d822865fc60c525464736f6c634300080f0033","deployedBytecode":"0x6080604052600436106100345760003560e01c8063b0565b2714610039578063b122ea941461006c578063cd74662f1461008c575b600080fd5b34801561004557600080fd5b50610059610054366004610ce7565b6100ac565b6040519081526020015b60405180910390f35b61007f61007a366004610dcc565b610300565b6040516100639190610e94565b61009f61009a366004610ce7565b610536565b6040516100639190610ef6565b60006101957f2bbaa6c701d9ecd9e324adef5727bb11883e2c24df1dd4c8f19e4e038b3734666100df6020870187610f09565b6100ef6040880160208901610f09565b6040880135606089013560808a013560a08b013560c08c013561011560e08e018e610f32565b604051610123929190610f79565b60408051918290038220602083019a909a526001600160a01b0398891690820152969095166060870152608086019390935260a085019190915260c084015260e08301526101008201526101208101919091526101400160405160208183030381529060405280519060200120610650565b9050428460a00135116101ef5760405162461bcd60e51b815260206004820152600b60248201527f4657445f4558504952454400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6101fc6020850185610f09565b6001600160a01b031661024784848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106bf9050565b6001600160a01b03161461029d5760405162461bcd60e51b815260206004820152601560248201527f4657445f494e56414c49445f5349474e4154555245000000000000000000000060448201526064016101e6565b600081815260016020526040902054156102f95760405162461bcd60e51b815260206004820152600c60248201527f4657445f5245504c41594544000000000000000000000000000000000000000060448201526064016101e6565b9392505050565b60606002600054036103545760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101e6565b600260009081556103653447610f9f565b90508483146103b65760405162461bcd60e51b815260206004820152601760248201527f4657445f4d49534d415443485f5349474e41545552455300000000000000000060448201526064016101e6565b8467ffffffffffffffff8111156103cf576103cf610fb6565b60405190808252806020026020018201604052801561040257816020015b60608152602001906001900390816103ed5790505b50915060005b8581101561048e5761046087878381811061042557610425610fcc565b90506020028101906104379190610fe2565b86868481811061044957610449610fcc565b905060200281019061045b9190610f32565b6106e3565b83828151811061047257610472610fcc565b60200260200101819052508061048790611002565b9050610408565b50600047341161049e57346104a0565b475b905080156104d757604051339082156108fc029083906000818181858888f193505050501580156104d5573d6000803e3d6000fd5b505b50478111156105285760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101e6565b506001600055949350505050565b606060026000540361058a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101e6565b6002600090815561059b3447610f9f565b90506105a88585856106e3565b915060004734116105b957346105bb565b475b905080156105f257604051339082156108fc029083906000818181858888f193505050501580156105f0573d6000803e3d6000fd5b505b50478111156106435760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101e6565b5060016000559392505050565b60006106b961065d6108d5565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006106ce85856109fc565b915091506106db81610a41565b509392505050565b60603a8460600135111580156106fd575083608001353a11155b6107495760405162461bcd60e51b815260206004820152600f60248201527f4657445f494e56414c49445f474153000000000000000000000000000000000060448201526064016101e6565b478460400135111561079d5760405162461bcd60e51b815260206004820152601160248201527f4657445f494e56414c49445f56414c554500000000000000000000000000000060448201526064016101e6565b60006107aa8585856100ac565b6000818152600160209081526040808320439055929350909182916107d3918901908901610f09565b6001600160a01b031660408801356107ee60e08a018a610f32565b6107fb60208c018c610f09565b60405160200161080d9392919061101b565b60408051601f198184030181529082905261082791611054565b60006040518083038185875af1925050503d8060008114610864576040519150601f19603f3d011682016040523d82523d6000602084013e610869565b606091505b5091509150816108cb578051156108835780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4657445f43414c4c5f4641494c4544000000000000000000000000000000000060448201526064016101e6565b9695505050505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561092e57507f000000000000000000000000000000000000000000000000000000000000000046145b1561095857507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103610a325760208301516040840151606085015160001a610a2687828585610bfa565b94509450505050610a3a565b506000905060025b9250929050565b6000816004811115610a5557610a55611066565b03610a5d5750565b6001816004811115610a7157610a71611066565b03610abe5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101e6565b6002816004811115610ad257610ad2611066565b03610b1f5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101e6565b6003816004811115610b3357610b33611066565b03610b8b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101e6565b6004816004811115610b9f57610b9f611066565b03610bf75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016101e6565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610c315750600090506003610cde565b8460ff16601b14158015610c4957508460ff16601c14155b15610c5a5750600090506004610cde565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610cae573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cd757600060019250925050610cde565b9150600090505b94509492505050565b600080600060408486031215610cfc57600080fd5b833567ffffffffffffffff80821115610d1457600080fd5b908501906101008288031215610d2957600080fd5b90935060208501359080821115610d3f57600080fd5b818601915086601f830112610d5357600080fd5b813581811115610d6257600080fd5b876020828501011115610d7457600080fd5b6020830194508093505050509250925092565b60008083601f840112610d9957600080fd5b50813567ffffffffffffffff811115610db157600080fd5b6020830191508360208260051b8501011115610a3a57600080fd5b60008060008060408587031215610de257600080fd5b843567ffffffffffffffff80821115610dfa57600080fd5b610e0688838901610d87565b90965094506020870135915080821115610e1f57600080fd5b50610e2c87828801610d87565b95989497509550505050565b60005b83811015610e53578181015183820152602001610e3b565b83811115610e62576000848401525b50505050565b60008151808452610e80816020860160208601610e38565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610ee957603f19888603018452610ed7858351610e68565b94509285019290850190600101610ebb565b5092979650505050505050565b6020815260006102f96020830184610e68565b600060208284031215610f1b57600080fd5b81356001600160a01b03811681146102f957600080fd5b6000808335601e19843603018112610f4957600080fd5b83018035915067ffffffffffffffff821115610f6457600080fd5b602001915036819003821315610a3a57600080fd5b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610fb157610fb1610f89565b500390565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000823560fe19833603018112610ff857600080fd5b9190910192915050565b60006001820161101457611014610f89565b5060010190565b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b60008251610ff8818460208701610e38565b634e487b7160e01b600052602160045260246000fdfea264697066735822122039e6a60b11d6f061f2da1e791d621d94acc7570e414d8635d822865fc60c525464736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract UnorderedForwarder is EIP712, ReentrancyGuard {\n    using ECDSA for bytes32;\n\n    struct MetaTransaction {\n        address from;\n        address to;\n        uint256 value;\n        uint256 minGasPrice;\n        uint256 maxGasPrice;\n        uint256 expiresAt;\n        uint256 nonce;\n        bytes data;\n    }\n\n    bytes32 private constant _TYPEHASH =\n        keccak256(\n            \"MetaTransaction(address from,address to,uint256 value,uint256 minGasPrice,uint256 maxGasPrice,uint256 expiresAt,uint256 nonce,bytes data)\"\n        );\n\n    mapping(bytes32 => uint256) mtxHashToExecutedBlockNumber;\n\n    constructor() EIP712(\"UnorderedForwarder\", \"0.0.1\") {}\n\n    /// @dev Refunds up to `msg.value` leftover ETH at the end of the call.\n    modifier refundsAttachedEth() {\n        _;\n        uint256 remainingBalance = msg.value > address(this).balance\n            ? address(this).balance\n            : msg.value;\n        if (remainingBalance > 0) {\n            payable(msg.sender).transfer(remainingBalance);\n        }\n    }\n\n    /// @dev Ensures that the ETH balance of `this` does not go below the\n    ///      initial ETH balance before the call (excluding ETH attached to the call).\n    modifier doesNotReduceEthBalance() {\n        uint256 initialBalance = address(this).balance - msg.value;\n        _;\n        require(initialBalance <= address(this).balance, \"FWD_ETH_LEAK\");\n    }\n\n    function verify(MetaTransaction calldata mtx, bytes calldata signature)\n        public\n        view\n        returns (bytes32 mtxHash)\n    {\n        mtxHash = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    _TYPEHASH,\n                    mtx.from,\n                    mtx.to,\n                    mtx.value,\n                    mtx.minGasPrice,\n                    mtx.maxGasPrice,\n                    mtx.expiresAt,\n                    mtx.nonce,\n                    keccak256(mtx.data)\n                )\n            )\n        );\n\n        // Must not be expired.\n        require(mtx.expiresAt > block.timestamp, \"FWD_EXPIRED\");\n\n        // Must be signed by the signer.\n        require(\n            mtxHash.recover(signature) == mtx.from,\n            \"FWD_INVALID_SIGNATURE\"\n        );\n\n        // Transaction must not have been already executed.\n        require(mtxHashToExecutedBlockNumber[mtxHash] == 0, \"FWD_REPLAYED\");\n\n        return mtxHash;\n    }\n\n    function execute(MetaTransaction calldata mtx, bytes calldata signature)\n        public\n        payable\n        nonReentrant\n        doesNotReduceEthBalance\n        refundsAttachedEth\n        returns (bytes memory)\n    {\n        return _execute(mtx, signature);\n    }\n\n    function batchExecute(\n        MetaTransaction[] calldata mtxs,\n        bytes[] calldata signatures\n    )\n        public\n        payable\n        nonReentrant\n        doesNotReduceEthBalance\n        refundsAttachedEth\n        returns (bytes[] memory returnResults)\n    {\n        require(mtxs.length == signatures.length, \"FWD_MISMATCH_SIGNATURES\");\n\n        returnResults = new bytes[](mtxs.length);\n\n        for (uint256 i = 0; i < mtxs.length; ++i) {\n            returnResults[i] = _execute(mtxs[i], signatures[i]);\n        }\n    }\n\n    function _execute(MetaTransaction calldata mtx, bytes calldata signature)\n        internal\n        returns (bytes memory)\n    {\n        // Must have a valid gas price.\n        require(\n            mtx.minGasPrice <= tx.gasprice && tx.gasprice <= mtx.maxGasPrice,\n            \"FWD_INVALID_GAS\"\n        );\n\n        // Must have enough ETH.\n        require(mtx.value <= address(this).balance, \"FWD_INVALID_VALUE\");\n\n        bytes32 mtxHash = verify(mtx, signature);\n\n        mtxHashToExecutedBlockNumber[mtxHash] = block.number;\n\n        (bool success, bytes memory returndata) = mtx.to.call{value: mtx.value}(\n            abi.encodePacked(mtx.data, mtx.from)\n        );\n\n        if (!success) {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(\"FWD_CALL_FAILED\");\n            }\n        }\n\n        return returndata;\n    }\n}\n"},"flair-sdk:access/ownable/IERC173":{"fqn":"flair-sdk:access/ownable/IERC173","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC173","sourceName":"src/access/ownable/IERC173.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./IERC173Events.sol\";\n\n/**\n * @title Contract ownership standard interface\n * @dev see https://eips.ethereum.org/EIPS/eip-173\n */\ninterface IERC173 is IERC173Events {\n    /**\n     * @notice get the ERC173 contract owner\n     * @return conrtact owner\n     */\n    function owner() external view returns (address);\n\n    /**\n     * @notice transfer contract ownership to new account\n     * @param account address of new owner\n     */\n    function transferOwnership(address account) external;\n}\n"},"flair-sdk:access/ownable/IERC173Events":{"fqn":"flair-sdk:access/ownable/IERC173Events","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC173Events","sourceName":"src/access/ownable/IERC173Events.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @title Contract ownership standard interface (event only)\n * @dev see https://eips.ethereum.org/EIPS/eip-173\n */\ninterface IERC173Events {\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n}\n"},"flair-sdk:access/ownable/OwnableERC2771":{"fqn":"flair-sdk:access/ownable/OwnableERC2771","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"OwnableERC2771","sourceName":"src/access/ownable/OwnableERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./Ownable.sol\";\nimport \"../../metatx/ERC2771ContextInternal.sol\";\n\n/**\n * @title Ownable extension with meta-transactions support via ERC2771\n */\nabstract contract OwnableERC2771 is Ownable, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:access/ownable/OwnableInternal":{"fqn":"flair-sdk:access/ownable/OwnableInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"OwnableInternal","sourceName":"src/access/ownable/OwnableInternal.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\nimport \"./OwnableStorage.sol\";\nimport \"./IERC173Events.sol\";\n\nabstract contract OwnableInternal is IERC173Events, Context {\n    using OwnableStorage for OwnableStorage.Layout;\n\n    modifier onlyOwner() {\n        require(_msgSender() == _owner(), \"Ownable: sender must be owner\");\n        _;\n    }\n\n    function _owner() internal view virtual returns (address) {\n        return OwnableStorage.layout().owner;\n    }\n\n    function _transferOwnership(address account) internal virtual {\n        OwnableStorage.layout().setOwner(account);\n        emit OwnershipTransferred(_msgSender(), account);\n    }\n}\n"},"flair-sdk:access/ownable/OwnableStorage":{"fqn":"flair-sdk:access/ownable/OwnableStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"OwnableStorage","sourceName":"src/access/ownable/OwnableStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a9644eb62028c77b2cecb78414818b2b720f9c7d37aaca8c8a4e16035de865864736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200a9644eb62028c77b2cecb78414818b2b720f9c7d37aaca8c8a4e16035de865864736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary OwnableStorage {\n    struct Layout {\n        address owner;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256(\"openzeppelin.contracts.storage.Ownable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n\n    function setOwner(Layout storage l, address owner) internal {\n        l.owner = owner;\n    }\n}\n"},"flair-sdk:access/roles/AccessControl":{"fqn":"flair-sdk:access/roles/AccessControl","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"AccessControl","sourceName":"src/access/roles/AccessControl.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./AccessControlInternal.sol\";\nimport \"./IAccessControl.sol\";\n\nabstract contract AccessControl is AccessControlInternal, IAccessControl {\n    function grantRole(bytes32 role, address account)\n        public\n        virtual\n        override\n        onlyRole(_getRoleAdmin(role))\n    {\n        _grantRole(role, account);\n    }\n\n    function revokeRole(bytes32 role, address account)\n        public\n        virtual\n        onlyRole(_getRoleAdmin(role))\n    {\n        _revokeRole(role, account);\n    }\n\n    function renounceRole(bytes32 role, address account)\n        public\n        virtual\n        override\n    {\n        _renounceRole(role, account);\n    }\n\n    function getRoleAdmin(bytes32 role)\n        public\n        view\n        virtual\n        override\n        returns (bytes32)\n    {\n        return _getRoleAdmin(role);\n    }\n}\n"},"flair-sdk:access/roles/AccessControlEnumerable":{"fqn":"flair-sdk:access/roles/AccessControlEnumerable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"AccessControlEnumerable","sourceName":"src/access/roles/AccessControlEnumerable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControlEnumerableStorage.sol\";\nimport \"./AccessControl.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is\n    IAccessControlEnumerable,\n    AccessControl\n{\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using AccessControlEnumerableStorage for AccessControlEnumerableStorage.Layout;\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index)\n        public\n        view\n        virtual\n        override\n        returns (address)\n    {\n        return\n            AccessControlEnumerableStorage.layout().roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role)\n        public\n        view\n        virtual\n        override\n        returns (uint256)\n    {\n        return\n            AccessControlEnumerableStorage.layout().roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account)\n        internal\n        virtual\n        override\n    {\n        super._grantRole(role, account);\n        AccessControlEnumerableStorage.layout().roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account)\n        internal\n        virtual\n        override\n    {\n        super._revokeRole(role, account);\n        AccessControlEnumerableStorage.layout().roleMembers[role].remove(\n            account\n        );\n    }\n}\n"},"flair-sdk:access/roles/AccessControlEnumerableERC2771":{"fqn":"flair-sdk:access/roles/AccessControlEnumerableERC2771","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"AccessControlEnumerableERC2771","sourceName":"src/access/roles/AccessControlEnumerableERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../metatx/ERC2771ContextInternal.sol\";\nimport \"./AccessControlEnumerable.sol\";\n\nabstract contract AccessControlEnumerableERC2771 is\n    ERC2771ContextInternal,\n    AccessControlEnumerable\n{\n    function _msgSender()\n        internal\n        view\n        virtual\n        override(Context, ERC2771ContextInternal)\n        returns (address)\n    {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData()\n        internal\n        view\n        virtual\n        override(Context, ERC2771ContextInternal)\n        returns (bytes calldata)\n    {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:access/roles/AccessControlEnumerableStorage":{"fqn":"flair-sdk:access/roles/AccessControlEnumerableStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"AccessControlEnumerableStorage","sourceName":"src/access/roles/AccessControlEnumerableStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e34e354ff029dbbc0bc67bc12c680035aa3fa319b994a961eaab7603ce40490c64736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e34e354ff029dbbc0bc67bc12c680035aa3fa319b994a961eaab7603ce40490c64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nlibrary AccessControlEnumerableStorage {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    struct Layout {\n        mapping(bytes32 => EnumerableSet.AddressSet) roleMembers;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.AccessControlEnumerable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:access/roles/AccessControlERC2771":{"fqn":"flair-sdk:access/roles/AccessControlERC2771","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"AccessControlERC2771","sourceName":"src/access/roles/AccessControlERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../metatx/ERC2771ContextInternal.sol\";\nimport \"./AccessControl.sol\";\n\nabstract contract AccessControlERC2771 is\n    ERC2771ContextInternal,\n    AccessControl\n{\n    function _msgSender()\n        internal\n        view\n        virtual\n        override(Context, ERC2771ContextInternal)\n        returns (address)\n    {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData()\n        internal\n        view\n        virtual\n        override(Context, ERC2771ContextInternal)\n        returns (bytes calldata)\n    {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:access/roles/AccessControlInternal":{"fqn":"flair-sdk:access/roles/AccessControlInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"AccessControlInternal","sourceName":"src/access/roles/AccessControlInternal.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./AccessControlStorage.sol\";\nimport \"./IAccessControlEvents.sol\";\n\nabstract contract AccessControlInternal is Context, IAccessControlEvents {\n    using AccessControlStorage for AccessControlStorage.Layout;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function _hasRole(bytes32 role, address account)\n        internal\n        view\n        virtual\n        returns (bool)\n    {\n        return AccessControlStorage.layout().roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!_hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function _getRoleAdmin(bytes32 role)\n        internal\n        view\n        virtual\n        returns (bytes32)\n    {\n        return AccessControlStorage.layout().roles[role].adminRole;\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _renounceRole(bytes32 role, address account) internal virtual {\n        require(\n            account == _msgSender(),\n            \"AccessControl: can only renounce roles for self\"\n        );\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = _getRoleAdmin(role);\n        AccessControlStorage.layout().roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!_hasRole(role, account)) {\n            AccessControlStorage.layout().roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (_hasRole(role, account)) {\n            AccessControlStorage.layout().roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"flair-sdk:access/roles/AccessControlStorage":{"fqn":"flair-sdk:access/roles/AccessControlStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"AccessControlStorage","sourceName":"src/access/roles/AccessControlStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ccf122b1e38e22d696aa42a229e9713191bbc1c43e560630917346043b0aeb964736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ccf122b1e38e22d696aa42a229e9713191bbc1c43e560630917346043b0aeb964736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary AccessControlStorage {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    struct Layout {\n        mapping(bytes32 => RoleData) roles;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.AccessControl\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:access/roles/IAccessControl":{"fqn":"flair-sdk:access/roles/IAccessControl","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IAccessControl","sourceName":"src/access/roles/IAccessControl.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./IAccessControlEvents.sol\";\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl is IAccessControlEvents {\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"flair-sdk:access/roles/IAccessControlEnumerable":{"fqn":"flair-sdk:access/roles/IAccessControlEnumerable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IAccessControlEnumerable","sourceName":"src/access/roles/IAccessControlEnumerable.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index)\n        external\n        view\n        returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"flair-sdk:access/roles/IAccessControlEvents":{"fqn":"flair-sdk:access/roles/IAccessControlEvents","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IAccessControlEvents","sourceName":"src/access/roles/IAccessControlEvents.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlEvents {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(\n        bytes32 indexed role,\n        bytes32 indexed previousAdminRole,\n        bytes32 indexed newAdminRole\n    );\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(\n        bytes32 indexed role,\n        address indexed account,\n        address indexed sender\n    );\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(\n        bytes32 indexed role,\n        address indexed account,\n        address indexed sender\n    );\n}\n"},"flair-sdk:common/IWithdrawExtension":{"fqn":"flair-sdk:common/IWithdrawExtension","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IWithdrawExtension","sourceName":"src/common/WithdrawExtension.sol","abi":[{"inputs":[],"name":"lockWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeWithdrawPower","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum WithdrawMode","name":"_withdrawMode","type":"uint8"}],"name":"setWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawRecipient","type":"address"}],"name":"setWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"claimTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165Storage.sol\";\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nenum WithdrawMode {\n    OWNER,\n    RECIPIENT,\n    ANYONE,\n    NOBODY\n}\n\ninterface IWithdrawExtension {\n    function setWithdrawRecipient(address _withdrawRecipient) external;\n\n    function lockWithdrawRecipient() external;\n\n    function revokeWithdrawPower() external;\n\n    function setWithdrawMode(WithdrawMode _withdrawMode) external;\n\n    function lockWithdrawMode() external;\n\n    function withdraw(\n        address[] calldata claimTokens,\n        uint256[] calldata amounts\n    ) external;\n}\n\nabstract contract WithdrawExtension is\n    IWithdrawExtension,\n    Initializable,\n    Ownable,\n    ERC165Storage\n{\n    using Address for address;\n    using Address for address payable;\n\n    event WithdrawPowerRevoked();\n    event Withdrawn(address[] claimTokens, uint256[] amounts);\n\n    address public withdrawRecipient;\n    bool public withdrawRecipientLocked;\n\n    bool public withdrawPowerRevoked;\n\n    WithdrawMode public withdrawMode;\n    bool public withdrawModeLocked;\n\n    /* INTERNAL */\n\n    function __WithdrawExtension_init(\n        address _withdrawRecipient,\n        WithdrawMode _withdrawMode\n    ) internal onlyInitializing {\n        __WithdrawExtension_init_unchained(_withdrawRecipient, _withdrawMode);\n    }\n\n    function __WithdrawExtension_init_unchained(\n        address _withdrawRecipient,\n        WithdrawMode _withdrawMode\n    ) internal onlyInitializing {\n        _registerInterface(type(IWithdrawExtension).interfaceId);\n\n        withdrawRecipient = _withdrawRecipient;\n        withdrawMode = _withdrawMode;\n    }\n\n    /* ADMIN */\n\n    function setWithdrawRecipient(address _withdrawRecipient)\n        external\n        onlyOwner\n    {\n        require(!withdrawRecipientLocked, \"LOCKED\");\n        withdrawRecipient = _withdrawRecipient;\n    }\n\n    function lockWithdrawRecipient() external onlyOwner {\n        require(!withdrawRecipientLocked, \"LOCKED\");\n        withdrawRecipientLocked = true;\n    }\n\n    function setWithdrawMode(WithdrawMode _withdrawMode) external onlyOwner {\n        require(!withdrawModeLocked, \"LOCKED\");\n        withdrawMode = _withdrawMode;\n    }\n\n    function lockWithdrawMode() external onlyOwner {\n        require(!withdrawModeLocked, \"OCKED\");\n        withdrawModeLocked = true;\n    }\n\n    /* PUBLIC */\n\n    function withdraw(\n        address[] calldata claimTokens,\n        uint256[] calldata amounts\n    ) external {\n        /**\n         * We are using msg.sender for smaller attack surface when evaluating\n         * the sender of the function call. If in future we want to handle \"withdraw\"\n         * functionality via meta transactions, we should consider using `_msgSender`\n         */\n        _assertWithdrawAccess(msg.sender);\n\n        require(withdrawRecipient != address(0), \"WITHDRAW/NO_RECIPIENT\");\n        require(!withdrawPowerRevoked, \"WITHDRAW/EMERGENCY_POWER_REVOKED\");\n\n        for (uint256 i = 0; i < claimTokens.length; i++) {\n            if (claimTokens[i] == address(0)) {\n                payable(withdrawRecipient).sendValue(amounts[i]);\n            } else {\n                IERC20(claimTokens[i]).transfer(withdrawRecipient, amounts[i]);\n            }\n        }\n\n        emit Withdrawn(claimTokens, amounts);\n    }\n\n    function revokeWithdrawPower() external onlyOwner {\n        withdrawPowerRevoked = true;\n        emit WithdrawPowerRevoked();\n    }\n\n    /* INTERNAL */\n\n    function _assertWithdrawAccess(address account) internal view {\n        if (withdrawMode == WithdrawMode.NOBODY) {\n            revert(\"WITHDRAW/LOCKED\");\n        } else if (withdrawMode == WithdrawMode.ANYONE) {\n            return;\n        } else if (withdrawMode == WithdrawMode.RECIPIENT) {\n            require(withdrawRecipient == account, \"WITHDRAW/ONLY_RECIPIENT\");\n        } else if (withdrawMode == WithdrawMode.OWNER) {\n            require(owner() == account, \"WITHDRAW/ONLY_OWNER\");\n        }\n    }\n}\n"},"flair-sdk:common/WithdrawExtension":{"fqn":"flair-sdk:common/WithdrawExtension","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"WithdrawExtension","sourceName":"src/common/WithdrawExtension.sol","abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[],"name":"WithdrawPowerRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address[]","name":"claimTokens","type":"address[]"},{"indexed":false,"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"lockWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"revokeWithdrawPower","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum WithdrawMode","name":"_withdrawMode","type":"uint8"}],"name":"setWithdrawMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_withdrawRecipient","type":"address"}],"name":"setWithdrawRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"claimTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawMode","outputs":[{"internalType":"enum WithdrawMode","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawModeLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawPowerRevoked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawRecipientLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165Storage.sol\";\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nenum WithdrawMode {\n    OWNER,\n    RECIPIENT,\n    ANYONE,\n    NOBODY\n}\n\ninterface IWithdrawExtension {\n    function setWithdrawRecipient(address _withdrawRecipient) external;\n\n    function lockWithdrawRecipient() external;\n\n    function revokeWithdrawPower() external;\n\n    function setWithdrawMode(WithdrawMode _withdrawMode) external;\n\n    function lockWithdrawMode() external;\n\n    function withdraw(\n        address[] calldata claimTokens,\n        uint256[] calldata amounts\n    ) external;\n}\n\nabstract contract WithdrawExtension is\n    IWithdrawExtension,\n    Initializable,\n    Ownable,\n    ERC165Storage\n{\n    using Address for address;\n    using Address for address payable;\n\n    event WithdrawPowerRevoked();\n    event Withdrawn(address[] claimTokens, uint256[] amounts);\n\n    address public withdrawRecipient;\n    bool public withdrawRecipientLocked;\n\n    bool public withdrawPowerRevoked;\n\n    WithdrawMode public withdrawMode;\n    bool public withdrawModeLocked;\n\n    /* INTERNAL */\n\n    function __WithdrawExtension_init(\n        address _withdrawRecipient,\n        WithdrawMode _withdrawMode\n    ) internal onlyInitializing {\n        __WithdrawExtension_init_unchained(_withdrawRecipient, _withdrawMode);\n    }\n\n    function __WithdrawExtension_init_unchained(\n        address _withdrawRecipient,\n        WithdrawMode _withdrawMode\n    ) internal onlyInitializing {\n        _registerInterface(type(IWithdrawExtension).interfaceId);\n\n        withdrawRecipient = _withdrawRecipient;\n        withdrawMode = _withdrawMode;\n    }\n\n    /* ADMIN */\n\n    function setWithdrawRecipient(address _withdrawRecipient)\n        external\n        onlyOwner\n    {\n        require(!withdrawRecipientLocked, \"LOCKED\");\n        withdrawRecipient = _withdrawRecipient;\n    }\n\n    function lockWithdrawRecipient() external onlyOwner {\n        require(!withdrawRecipientLocked, \"LOCKED\");\n        withdrawRecipientLocked = true;\n    }\n\n    function setWithdrawMode(WithdrawMode _withdrawMode) external onlyOwner {\n        require(!withdrawModeLocked, \"LOCKED\");\n        withdrawMode = _withdrawMode;\n    }\n\n    function lockWithdrawMode() external onlyOwner {\n        require(!withdrawModeLocked, \"OCKED\");\n        withdrawModeLocked = true;\n    }\n\n    /* PUBLIC */\n\n    function withdraw(\n        address[] calldata claimTokens,\n        uint256[] calldata amounts\n    ) external {\n        /**\n         * We are using msg.sender for smaller attack surface when evaluating\n         * the sender of the function call. If in future we want to handle \"withdraw\"\n         * functionality via meta transactions, we should consider using `_msgSender`\n         */\n        _assertWithdrawAccess(msg.sender);\n\n        require(withdrawRecipient != address(0), \"WITHDRAW/NO_RECIPIENT\");\n        require(!withdrawPowerRevoked, \"WITHDRAW/EMERGENCY_POWER_REVOKED\");\n\n        for (uint256 i = 0; i < claimTokens.length; i++) {\n            if (claimTokens[i] == address(0)) {\n                payable(withdrawRecipient).sendValue(amounts[i]);\n            } else {\n                IERC20(claimTokens[i]).transfer(withdrawRecipient, amounts[i]);\n            }\n        }\n\n        emit Withdrawn(claimTokens, amounts);\n    }\n\n    function revokeWithdrawPower() external onlyOwner {\n        withdrawPowerRevoked = true;\n        emit WithdrawPowerRevoked();\n    }\n\n    /* INTERNAL */\n\n    function _assertWithdrawAccess(address account) internal view {\n        if (withdrawMode == WithdrawMode.NOBODY) {\n            revert(\"WITHDRAW/LOCKED\");\n        } else if (withdrawMode == WithdrawMode.ANYONE) {\n            return;\n        } else if (withdrawMode == WithdrawMode.RECIPIENT) {\n            require(withdrawRecipient == account, \"WITHDRAW/ONLY_RECIPIENT\");\n        } else if (withdrawMode == WithdrawMode.OWNER) {\n            require(owner() == account, \"WITHDRAW/ONLY_OWNER\");\n        }\n    }\n}\n"},"flair-sdk:diamond/DiamondStorage":{"fqn":"flair-sdk:diamond/DiamondStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"DiamondStorage","sourceName":"src/diamond/DiamondStorage.sol","abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"}],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae0f4e1ead0c8a12cb4450a8dfd0eb87cda01ef74ba6ca5884c0be27b912576664736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae0f4e1ead0c8a12cb4450a8dfd0eb87cda01ef74ba6ca5884c0be27b912576664736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\nimport \"../diamond/IDiamondCut.sol\";\n\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\n// The loupe functions are required by the EIP2535 Diamonds standard\n\nerror DiamondFacetAlreadyExists(address facet, bytes4 selector);\nerror DiamondFacetSameFunction(address facet, bytes4 selector);\n\nlibrary DiamondStorage {\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.standard.diamond.storage\");\n\n    struct FacetAddressAndPosition {\n        address facetAddress;\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\n    }\n\n    struct FacetFunctionSelectors {\n        bytes4[] functionSelectors;\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\n    }\n\n    struct Layout {\n        // maps function selector to the facet address and\n        // the position of the selector in the facetFunctionSelectors.selectors array\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n        // maps facet addresses to function selectors\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\n        // facet addresses\n        address[] facetAddresses;\n    }\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            l.slot := position\n        }\n    }\n\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\n\n    // Internal function version of diamondCut\n    function diamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\n            if (action == IDiamondCut.FacetCutAction.Add) {\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else {\n                revert(\"LibDiamondCut: Incorrect FacetCutAction\");\n            }\n        }\n        emit DiamondCut(_diamondCut, _init, _calldata);\n        initializeDiamondCut(_init, _calldata);\n    }\n\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        // require(\n        //     _functionSelectors.length > 0,\n        //     \"LibDiamondCut: No selectors in facet to cut\"\n        // );\n        Layout storage l = layout();\n        // require(\n        //     _facetAddress != address(0),\n        //     \"LibDiamondCut: Add facet can't be address(0)\"\n        // );\n        uint96 selectorPosition = uint96(l.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(l, _facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = l.selectorToFacetAndPosition[selector].facetAddress;\n\n            if (oldFacetAddress != address(0)) {\n                revert DiamondFacetAlreadyExists(oldFacetAddress, selector);\n            }\n\n            addFunction(l, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        // require(\n        //     _functionSelectors.length > 0,\n        //     \"LibDiamondCut: No selectors in facet to cut\"\n        // );\n        Layout storage l = layout();\n        // require(\n        //     _facetAddress != address(0),\n        //     \"LibDiamondCut: Add facet can't be address(0)\"\n        // );\n        uint96 selectorPosition = uint96(l.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(l, _facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = l.selectorToFacetAndPosition[selector].facetAddress;\n\n            if (oldFacetAddress == _facetAddress) {\n                revert DiamondFacetSameFunction(oldFacetAddress, selector);\n            }\n\n            removeFunction(l, oldFacetAddress, selector);\n            addFunction(l, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        // require(\n        //     _functionSelectors.length > 0,\n        //     \"LibDiamondCut: No selectors in facet to cut\"\n        // );\n        Layout storage l = layout();\n        // if function does not exist then do nothing and return\n        // require(\n        //     _facetAddress == address(0),\n        //     \"LibDiamondCut: Remove facet address must be address(0)\"\n        // );\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = l.selectorToFacetAndPosition[selector].facetAddress;\n            removeFunction(l, oldFacetAddress, selector);\n        }\n    }\n\n    function addFacet(Layout storage l, address _facetAddress) internal {\n        enforceHasContractCode(_facetAddress, \"LibDiamondCut: New facet has no code\");\n        l.facetFunctionSelectors[_facetAddress].facetAddressPosition = l.facetAddresses.length;\n        l.facetAddresses.push(_facetAddress);\n    }\n\n    function addFunction(\n        Layout storage l,\n        bytes4 _selector,\n        uint96 _selectorPosition,\n        address _facetAddress\n    ) internal {\n        l.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\n        l.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\n        l.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\n    }\n\n    function removeFunction(\n        Layout storage l,\n        address _facetAddress,\n        bytes4 _selector\n    ) internal {\n        // require(\n        //     _facetAddress != address(0),\n        //     \"LibDiamondCut: Can't remove function that doesn't exist\"\n        // );\n        // an immutable function is a function defined directly in a diamond\n        // require(\n        //     _facetAddress != address(this),\n        //     \"LibDiamondCut: Can't remove immutable function\"\n        // );\n        // replace selector with last selector, then delete last selector\n        uint256 selectorPosition = l.selectorToFacetAndPosition[_selector].functionSelectorPosition;\n        uint256 lastSelectorPosition = l.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\n        // if not the same then replace _selector with lastSelector\n        if (selectorPosition != lastSelectorPosition) {\n            bytes4 lastSelector = l.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\n            l.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\n            l.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\n        }\n        // delete the last selector\n        l.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\n        delete l.selectorToFacetAndPosition[_selector];\n\n        // if no more selectors for facet address then delete the facet address\n        if (lastSelectorPosition == 0) {\n            // replace facet address with last facet address and delete last facet address\n            uint256 lastFacetAddressPosition = l.facetAddresses.length - 1;\n            uint256 facetAddressPosition = l.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n            if (facetAddressPosition != lastFacetAddressPosition) {\n                address lastFacetAddress = l.facetAddresses[lastFacetAddressPosition];\n                l.facetAddresses[facetAddressPosition] = lastFacetAddress;\n                l.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\n            }\n            l.facetAddresses.pop();\n            delete l.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n        }\n    }\n\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\n        if (_init == address(0)) {\n            require(_calldata.length == 0, \"LibDiamondCut: _init is address(0) but_calldata is not empty\");\n        } else {\n            require(_calldata.length > 0, \"LibDiamondCut: _calldata is empty but _init is not address(0)\");\n            if (_init != address(this)) {\n                enforceHasContractCode(_init, \"LibDiamondCut: _init address has no code\");\n            }\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\n            if (!success) {\n                if (error.length > 0) {\n                    // bubble up the error\n                    revert(string(error));\n                } else {\n                    revert(\"LibDiamondCut: _init function reverted\");\n                }\n            }\n        }\n    }\n\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\n        uint256 contractSize;\n        assembly {\n            contractSize := extcodesize(_contract)\n        }\n        require(contractSize > 0, _errorMessage);\n    }\n}\n"},"flair-sdk:diamond/IDiamondCut":{"fqn":"flair-sdk:diamond/IDiamondCut","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IDiamondCut","sourceName":"src/diamond/IDiamondCut.sol","abi":[{"anonymous":false,"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"indexed":false,"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"_init","type":"address"},{"indexed":false,"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"DiamondCut","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"enum IDiamondCut.FacetCutAction","name":"action","type":"uint8"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondCut.FacetCut[]","name":"_diamondCut","type":"tuple[]"},{"internalType":"address","name":"_init","type":"address"},{"internalType":"bytes","name":"_calldata","type":"bytes"}],"name":"diamondCut","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\ninterface IDiamondCut {\n    enum FacetCutAction {\n        Add,\n        Replace,\n        Remove\n    }\n    // Add=0, Replace=1, Remove=2\n\n    struct FacetCut {\n        address facetAddress;\n        FacetCutAction action;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Add/replace/remove any number of functions and optionally execute\n    ///         a function with delegatecall\n    /// @param _diamondCut Contains the facet addresses and function selectors\n    /// @param _init The address of the contract or facet to execute _calldata\n    /// @param _calldata A function call, including function selector and arguments\n    ///                  _calldata is executed with delegatecall on _init\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external;\n\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\n}\n"},"flair-sdk:diamond/IDiamondLoupe":{"fqn":"flair-sdk:diamond/IDiamondLoupe","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IDiamondLoupe","sourceName":"src/diamond/IDiamondLoupe.sol","abi":[{"inputs":[{"internalType":"bytes4","name":"_functionSelector","type":"bytes4"}],"name":"facetAddress","outputs":[{"internalType":"address","name":"facetAddress_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facetAddresses","outputs":[{"internalType":"address[]","name":"facetAddresses_","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_facet","type":"address"}],"name":"facetFunctionSelectors","outputs":[{"internalType":"bytes4[]","name":"facetFunctionSelectors_","type":"bytes4[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"facets","outputs":[{"components":[{"internalType":"address","name":"facetAddress","type":"address"},{"internalType":"bytes4[]","name":"functionSelectors","type":"bytes4[]"}],"internalType":"struct IDiamondLoupe.Facet[]","name":"facets_","type":"tuple[]"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\n// A loupe is a small magnifying glass used to look at diamonds.\n// These functions look at diamonds\ninterface IDiamondLoupe {\n    /// These functions are expected to be called frequently\n    /// by tools.\n\n    struct Facet {\n        address facetAddress;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Gets all facet addresses and their four byte function selectors.\n    /// @return facets_ Facet\n    function facets() external view returns (Facet[] memory facets_);\n\n    /// @notice Gets all the function selectors supported by a specific facet.\n    /// @param _facet The facet address.\n    /// @return facetFunctionSelectors_\n    function facetFunctionSelectors(address _facet)\n        external\n        view\n        returns (bytes4[] memory facetFunctionSelectors_);\n\n    /// @notice Get all the facet addresses used by a diamond.\n    /// @return facetAddresses_\n    function facetAddresses()\n        external\n        view\n        returns (address[] memory facetAddresses_);\n\n    /// @notice Gets the facet that supports the given selector.\n    /// @dev If facet is not found return address(0).\n    /// @param _functionSelector The function selector.\n    /// @return facetAddress_ The facet address.\n    function facetAddress(bytes4 _functionSelector)\n        external\n        view\n        returns (address facetAddress_);\n}\n"},"flair-sdk:factory/Clones":{"fqn":"flair-sdk:factory/Clones","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"Clones","sourceName":"src/factory/Clones.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220402596091f8c07fa2df1f9fa42908316e1c18588be42dcf7ff7ceb55c7db7b3464736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220402596091f8c07fa2df1f9fa42908316e1c18588be42dcf7ff7ceb55c7db7b3464736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity 0.8.15;\n\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(\n                ptr,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(\n                add(ptr, 0x28),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt)\n        internal\n        returns (address instance)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(\n                ptr,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(\n                add(ptr, 0x28),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(\n                ptr,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(\n                add(ptr, 0x28),\n                0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000\n            )\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"flair-sdk:factory/MinimalProxy":{"fqn":"flair-sdk:factory/MinimalProxy","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"MinimalProxy","sourceName":"src/factory/MinimalProxy.sol","abi":[{"inputs":[{"internalType":"address","name":"_impl","type":"address"}],"stateMutability":"payable","type":"constructor"},{"stateMutability":"payable","type":"fallback"},{"stateMutability":"payable","type":"receive"}],"bytecode":"0x608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea264697066735822122010e3d1afd2c437d773a5002b589123ae499d9167b69637e26ef5120fc87f46dc64736f6c634300080f0033","deployedBytecode":"0x608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea264697066735822122010e3d1afd2c437d773a5002b589123ae499d9167b69637e26ef5120fc87f46dc64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract MinimalProxy is Proxy {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT =\n        0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    constructor(address _impl) payable {\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = _impl;\n    }\n\n    function _implementation() internal view override returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n}\n"},"flair-sdk:finance/sales/ITieredSales":{"fqn":"flair-sdk:finance/sales/ITieredSales","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ITieredSales","sourceName":"src/finance/sales/ITieredSales.sol","abi":[{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"eligibleForTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"mintByTier","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"onTierAllowlist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"remainingForTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reservedMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tiers","outputs":[{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReserved","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"}],"name":"walletMintedByTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./ITieredSalesInternal.sol\";\n\ninterface ITieredSales is ITieredSalesInternal {\n    function onTierAllowlist(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) external view returns (bool);\n\n    function eligibleForTier(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) external view returns (uint256);\n\n    function mintByTier(\n        uint256 tierId,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) external payable;\n\n    function remainingForTier(uint256 tierId) external view returns (uint256);\n\n    function walletMintedByTier(uint256 tierId, address wallet) external view returns (uint256);\n\n    function tierMints(uint256 tierId) external view returns (uint256);\n\n    function totalReserved() external view returns (uint256);\n\n    function reservedMints() external view returns (uint256);\n\n    function tiers(uint256 tierId) external view returns (Tier memory);\n}\n"},"flair-sdk:finance/sales/ITieredSalesAdmin":{"fqn":"flair-sdk:finance/sales/ITieredSalesAdmin","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ITieredSalesAdmin","sourceName":"src/finance/sales/ITieredSalesAdmin.sol","abi":[{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier","name":"","type":"tuple"}],"name":"configureTiering","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier[]","name":"","type":"tuple[]"}],"name":"configureTiering","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./ITieredSalesInternal.sol\";\n\ninterface ITieredSalesAdmin {\n    function configureTiering(uint256, ITieredSalesInternal.Tier calldata)\n        external;\n\n    function configureTiering(\n        uint256[] calldata,\n        ITieredSalesInternal.Tier[] calldata\n    ) external;\n}\n"},"flair-sdk:finance/sales/ITieredSalesInternal":{"fqn":"flair-sdk:finance/sales/ITieredSalesInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ITieredSalesInternal","sourceName":"src/finance/sales/ITieredSalesInternal.sol","abi":[],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface ITieredSalesInternal {\n    struct Tier {\n        uint256 start;\n        uint256 end;\n        address currency;\n        uint256 price;\n        uint256 maxPerWallet;\n        bytes32 merkleRoot;\n        uint256 reserved;\n        uint256 maxAllocation;\n    }\n}\n"},"flair-sdk:finance/sales/TieredSales":{"fqn":"flair-sdk:finance/sales/TieredSales","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"TieredSales","sourceName":"src/finance/sales/TieredSales.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"eligibleForTier","outputs":[{"internalType":"uint256","name":"maxMintable","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"mintByTier","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"onTierAllowlist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"remainingForTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reservedMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tiers","outputs":[{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReserved","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"}],"name":"walletMintedByTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./ITieredSales.sol\";\nimport \"./TieredSalesInternal.sol\";\n\n/**\n * @title Abstract sales mechanism for any asset (e.g NFTs) with multiple tiered pricing, allowlist and allocation plans.\n */\nabstract contract TieredSales is ITieredSales, TieredSalesInternal {\n    function onTierAllowlist(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) public view returns (bool) {\n        return super._onTierAllowlist(tierId, minter, maxAllowance, proof);\n    }\n\n    function eligibleForTier(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) public view returns (uint256 maxMintable) {\n        return super._eligibleForTier(tierId, minter, maxAllowance, proof);\n    }\n\n    function remainingForTier(uint256 tierId) public view returns (uint256) {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        uint256 availableSupply = _availableSupplyForTier(tierId);\n        uint256 availableAllocation = l.tiers[tierId].maxAllocation - l.tierMints[tierId];\n\n        if (availableSupply < availableAllocation) {\n            return availableSupply;\n        } else {\n            return availableAllocation;\n        }\n    }\n\n    function walletMintedByTier(uint256 tierId, address wallet) public view returns (uint256) {\n        return TieredSalesStorage.layout().walletMinted[tierId][wallet];\n    }\n\n    function tierMints(uint256 tierId) public view returns (uint256) {\n        return TieredSalesStorage.layout().tierMints[tierId];\n    }\n\n    function totalReserved() external view returns (uint256) {\n        return TieredSalesStorage.layout().totalReserved;\n    }\n\n    function reservedMints() external view returns (uint256) {\n        return TieredSalesStorage.layout().reservedMints;\n    }\n\n    function tiers(uint256 tierId) external view returns (Tier memory) {\n        return TieredSalesStorage.layout().tiers[tierId];\n    }\n}\n"},"flair-sdk:finance/sales/TieredSalesERC2771":{"fqn":"flair-sdk:finance/sales/TieredSalesERC2771","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"TieredSalesERC2771","sourceName":"src/finance/sales/TieredSalesERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"eligibleForTier","outputs":[{"internalType":"uint256","name":"maxMintable","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"mintByTier","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"minter","type":"address"},{"internalType":"uint256","name":"maxAllowance","type":"uint256"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"onTierAllowlist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"remainingForTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"reservedMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierMints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tiers","outputs":[{"components":[{"internalType":"uint256","name":"start","type":"uint256"},{"internalType":"uint256","name":"end","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"maxPerWallet","type":"uint256"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"uint256","name":"reserved","type":"uint256"},{"internalType":"uint256","name":"maxAllocation","type":"uint256"}],"internalType":"struct ITieredSalesInternal.Tier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalReserved","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"wallet","type":"address"}],"name":"walletMintedByTier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../metatx/ERC2771ContextInternal.sol\";\nimport \"./TieredSales.sol\";\n\n/**\n * @title Tiered Sales facet with meta-transactions support via ERC2771\n */\nabstract contract TieredSalesERC2771 is TieredSales, ERC2771ContextInternal {\n    function _msgSender() internal view override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:finance/sales/TieredSalesInternal":{"fqn":"flair-sdk:finance/sales/TieredSalesInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"TieredSalesInternal","sourceName":"src/finance/sales/TieredSalesInternal.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"./ITieredSalesInternal.sol\";\nimport \"./TieredSalesStorage.sol\";\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\n/**\n * @title Sales mechanism for NFTs with multiple tiered pricing, allowlist and allocation plans\n */\nabstract contract TieredSalesInternal is ITieredSalesInternal, Context, OwnableInternal {\n    using TieredSalesStorage for TieredSalesStorage.Layout;\n\n    function _configureTiering(uint256 tierId, Tier calldata tier) internal {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        require(tier.maxAllocation >= l.tierMints[tierId], \"LOWER_THAN_MINTED\");\n\n        if (l.tiers[tierId].reserved > 0) {\n            require(tier.reserved >= l.tierMints[tierId], \"LOW_RESERVE_AMOUNT\");\n        }\n\n        if (l.tierMints[tierId] > 0) {\n            require(tier.maxPerWallet >= l.tiers[tierId].maxPerWallet, \"LOW_MAX_PER_WALLET\");\n        }\n\n        l.totalReserved -= l.tiers[tierId].reserved;\n        l.tiers[tierId] = tier;\n        l.totalReserved += tier.reserved;\n    }\n\n    function _configureTiering(uint256[] calldata _tierIds, Tier[] calldata _tiers) internal {\n        for (uint256 i = 0; i < _tierIds.length; i++) {\n            _configureTiering(_tierIds[i], _tiers[i]);\n        }\n    }\n\n    function _onTierAllowlist(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) internal view returns (bool) {\n        return\n            MerkleProof.verify(\n                proof,\n                TieredSalesStorage.layout().tiers[tierId].merkleRoot,\n                _generateMerkleLeaf(minter, maxAllowance)\n            );\n    }\n\n    function _eligibleForTier(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) internal view returns (uint256 maxMintable) {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        require(l.tiers[tierId].maxPerWallet > 0, \"NOT_EXISTS\");\n        require(block.timestamp >= l.tiers[tierId].start, \"NOT_STARTED\");\n        require(block.timestamp <= l.tiers[tierId].end, \"ALREADY_ENDED\");\n\n        maxMintable = l.tiers[tierId].maxPerWallet - l.walletMinted[tierId][minter];\n\n        if (l.tiers[tierId].merkleRoot != bytes32(0)) {\n            require(l.walletMinted[tierId][minter] < maxAllowance, \"MAXED_ALLOWANCE\");\n            require(_onTierAllowlist(tierId, minter, maxAllowance, proof), \"NOT_ALLOWLISTED\");\n\n            uint256 remainingAllowance = maxAllowance - l.walletMinted[tierId][minter];\n\n            if (maxMintable > remainingAllowance) {\n                maxMintable = remainingAllowance;\n            }\n        }\n    }\n\n    function _availableSupplyForTier(uint256 tierId) internal view returns (uint256 remaining) {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        // Substract all the remaining reserved spots from the total remaining supply...\n        remaining = _remainingSupplyForTier(tierId) - (l.totalReserved - l.reservedMints);\n\n        // If this tier has reserved spots, add remaining spots back to result...\n        if (l.tiers[tierId].reserved > 0) {\n            remaining += (l.tiers[tierId].reserved - l.tierMints[tierId]);\n        }\n    }\n\n    function _executeSale(\n        uint256 tierId,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata proof\n    ) internal {\n        address minter = _msgSender();\n\n        uint256 maxMintable = _eligibleForTier(tierId, minter, maxAllowance, proof);\n\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        require(count <= maxMintable, \"EXCEEDS_MAX\");\n        require(count <= _availableSupplyForTier(tierId), \"EXCEEDS_ALLOCATION\");\n        require(count + l.tierMints[tierId] <= l.tiers[tierId].maxAllocation, \"EXCEEDS_ALLOCATION\");\n\n        if (l.tiers[tierId].currency == address(0)) {\n            require(l.tiers[tierId].price * count <= msg.value, \"INSUFFICIENT_AMOUNT\");\n        } else {\n            IERC20(l.tiers[tierId].currency).transferFrom(minter, address(this), l.tiers[tierId].price * count);\n        }\n\n        l.walletMinted[tierId][minter] += count;\n        l.tierMints[tierId] += count;\n\n        if (l.tiers[tierId].reserved > 0) {\n            l.reservedMints += count;\n        }\n    }\n\n    function _remainingSupplyForTier(\n        uint256 /*tierId*/\n    ) internal view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /* PRIVATE */\n\n    function _generateMerkleLeaf(address account, uint256 maxAllowance) private pure returns (bytes32) {\n        return keccak256(abi.encodePacked(account, maxAllowance));\n    }\n}\n"},"flair-sdk:finance/sales/TieredSalesStorage":{"fqn":"flair-sdk:finance/sales/TieredSalesStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"TieredSalesStorage","sourceName":"src/finance/sales/TieredSalesStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c01ad5c60383a6ddfcecb64824d48cd60e50fede8605cdfd55dc8b1cd00cc31164736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c01ad5c60383a6ddfcecb64824d48cd60e50fede8605cdfd55dc8b1cd00cc31164736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./ITieredSales.sol\";\n\nlibrary TieredSalesStorage {\n    struct Layout {\n        uint256 totalReserved;\n        uint256 reservedMints;\n        mapping(uint256 => ITieredSales.Tier) tiers;\n        mapping(uint256 => uint256) tierMints;\n        mapping(uint256 => mapping(address => uint256)) walletMinted;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.TieredSales\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:introspection/ERC165Storage":{"fqn":"flair-sdk:introspection/ERC165Storage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC165Storage","sourceName":"src/introspection/ERC165Storage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220335575a17fdf013187b6fe327b5e16ec14c4a89ab9b738e4c6bc7c8639c847a864736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220335575a17fdf013187b6fe327b5e16ec14c4a89ab9b738e4c6bc7c8639c847a864736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC165Storage {\n    struct Layout {\n        mapping(bytes4 => bool) supportedInterfaces;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.ERC165\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n\n    function isSupportedInterface(Layout storage l, bytes4 interfaceId) internal view returns (bool) {\n        return l.supportedInterfaces[interfaceId];\n    }\n\n    function setSupportedInterface(\n        Layout storage l,\n        bytes4 interfaceId,\n        bool status\n    ) internal {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        l.supportedInterfaces[interfaceId] = status;\n    }\n}\n"},"flair-sdk:introspection/IERC165":{"fqn":"flair-sdk:introspection/IERC165","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC165","sourceName":"src/introspection/IERC165.sol","abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @title ERC165 interface registration interface\n * @dev see https://eips.ethereum.org/EIPS/eip-165\n */\ninterface IERC165 {\n    /**\n     * @notice query whether contract has registered support for given interface\n     * @param interfaceId interface id\n     * @return bool whether interface is supported\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"flair-sdk:introspection/IERC165Admin":{"fqn":"flair-sdk:introspection/IERC165Admin","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC165Admin","sourceName":"src/introspection/IERC165Admin.sol","abi":[{"inputs":[{"internalType":"bytes4[]","name":"interfaceIds","type":"bytes4[]"},{"internalType":"bytes4[]","name":"interfaceIdsToRemove","type":"bytes4[]"}],"name":"setERC165","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC165Admin {\n    function setERC165(bytes4[] calldata interfaceIds, bytes4[] calldata interfaceIdsToRemove) external;\n}\n"},"flair-sdk:metatx/ERC2771ContextInternal":{"fqn":"flair-sdk:metatx/ERC2771ContextInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC2771ContextInternal","sourceName":"src/metatx/ERC2771ContextInternal.sol","abi":[],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\nimport \"./ERC2771ContextStorage.sol\";\n\nabstract contract ERC2771ContextInternal is Context {\n    function _isTrustedForwarder(address operator) internal view returns (bool) {\n        return ERC2771ContextStorage.layout().trustedForwarder == operator;\n    }\n\n    function _msgSender() internal view virtual override returns (address sender) {\n        if (_isTrustedForwarder(msg.sender)) {\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\n            /// @solidity memory-safe-assembly\n            assembly {\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\n            }\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        if (_isTrustedForwarder(msg.sender)) {\n            return msg.data[:msg.data.length - 20];\n        } else {\n            return super._msgData();\n        }\n    }\n}\n"},"flair-sdk:metatx/ERC2771ContextStorage":{"fqn":"flair-sdk:metatx/ERC2771ContextStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC2771ContextStorage","sourceName":"src/metatx/ERC2771ContextStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dc5ec96f791de7c80b4c2e714402892061240872a4e3ee5e8d9227d97c29be564736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205dc5ec96f791de7c80b4c2e714402892061240872a4e3ee5e8d9227d97c29be564736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC2771ContextStorage {\n    struct Layout {\n        address trustedForwarder;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.ERC2771Context\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:metatx/IERC2771Context":{"fqn":"flair-sdk:metatx/IERC2771Context","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC2771Context","sourceName":"src/metatx/IERC2771Context.sol","abi":[{"inputs":[{"internalType":"address","name":"forwarder","type":"address"}],"name":"isTrustedForwarder","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC2771Context {\n    function isTrustedForwarder(address forwarder) external view returns (bool);\n}\n"},"flair-sdk:metatx/IERC2771ContextAdmin":{"fqn":"flair-sdk:metatx/IERC2771ContextAdmin","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC2771ContextAdmin","sourceName":"src/metatx/IERC2771ContextAdmin.sol","abi":[{"inputs":[{"internalType":"address","name":"trustedForwarder","type":"address"}],"name":"setTrustedForwarder","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC2771ContextAdmin {\n    function setTrustedForwarder(address trustedForwarder) external;\n}\n"},"flair-sdk:token/ERC1155/base/ERC1155Base":{"fqn":"flair-sdk:token/ERC1155/base/ERC1155Base","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155Base","sourceName":"src/token/ERC1155/base/ERC1155Base.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x608060405234801561001057600080fd5b5061159f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100715760003560e01c8063a22cb46511610050578063a22cb465146100d1578063e985e9c5146100e4578063f242432a1461014f57600080fd5b8062fdd58e146100765780632eb2c2d61461009c5780634e1273f4146100b1575b600080fd5b610089610084366004610f09565b610162565b6040519081526020015b60405180910390f35b6100af6100aa36600461107f565b610175565b005b6100c46100bf366004611129565b61025e565b604051610093919061122f565b6100af6100df366004611242565b610485565b61013f6100f236600461127e565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6040519015158152602001610093565b6100af61015d3660046112b1565b610591565b600061016e838361066d565b9392505050565b336001600160a01b0386168114806101d157506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6102485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610256818787878787610732565b505050505050565b606081518351146102d75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161023f565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff81111561031657610316610f33565b60405190808252806020026020018201604052801561033f578160200160208202803683370190505b50905060005b855181101561047c5760006001600160a01b031686828151811061036b5761036b611316565b60200260200101516001600160a01b0316036103ef5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f2061646472657373000000000000000000000000000000606482015260840161023f565b82600086838151811061040457610404611316565b60200260200101518152602001908152602001600020600087838151811061042e5761042e611316565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061046957610469611316565b6020908102919091010152600101610345565b50949350505050565b336001600160a01b03831681036105045760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161023f565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b336001600160a01b0386168114806105ed57506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b61065f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161023f565b61025681878787878761074e565b60006001600160a01b0383166106eb5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f2061646472657373000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b61074086868686868661076a565b6102568686868686866109fe565b61075c868686868686610bc4565b610256868686868686610d8e565b6001600160a01b0384166107ce5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161023f565b81518351146108455760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b845181101561099d57600085828151811061088657610886611316565b6020026020010151905060008583815181106108a4576108a4611316565b602090810291909101810151600084815286835260408082206001600160a01b038e16835290935291909120549091508181101561094a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a16815290812080546001959095019483929061099090849061132c565b9091555061086992505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109ed929190611352565b60405180910390a450505050505050565b6001600160a01b0384163b156102565760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a4290899089908890889088906004016113cd565b6020604051808303816000875af1925050508015610a7d575060408051601f3d908101601f19168201909252610a7a9181019061142b565b60015b610b3257610a8961146d565b806308c379a003610ac25750610a9d611489565b80610aa85750610ac4565b8060405162461bcd60e51b815260040161023f9190611513565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161023f565b7fffffffff00000000000000000000000000000000000000000000000000000000811663bc197c8160e01b14610bbb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161023f565b50505050505050565b6001600160a01b038416610c285760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161023f565b610c47868686610c3787610ea2565b610c4087610ea2565b5050505050565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038a1685529091529091205483811015610d005760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290610d3f90849061132c565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016109ed565b6001600160a01b0384163b156102565760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dd29089908990889088908890600401611526565b6020604051808303816000875af1925050508015610e0d575060408051601f3d908101601f19168201909252610e0a9181019061142b565b60015b610e1957610a8961146d565b7fffffffff00000000000000000000000000000000000000000000000000000000811663f23a6e6160e01b14610bbb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161023f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610edc57610edc611316565b602090810291909101015292915050565b80356001600160a01b0381168114610f0457600080fd5b919050565b60008060408385031215610f1c57600080fd5b610f2583610eed565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610f6f57610f6f610f33565b6040525050565b600067ffffffffffffffff821115610f9057610f90610f33565b5060051b60200190565b600082601f830112610fab57600080fd5b81356020610fb882610f76565b604051610fc58282610f49565b83815260059390931b8501820192828101915086841115610fe557600080fd5b8286015b848110156110005780358352918301918301610fe9565b509695505050505050565b600082601f83011261101c57600080fd5b813567ffffffffffffffff81111561103657611036610f33565b60405161104d601f8301601f191660200182610f49565b81815284602083860101111561106257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561109757600080fd5b6110a086610eed565b94506110ae60208701610eed565b9350604086013567ffffffffffffffff808211156110cb57600080fd5b6110d789838a01610f9a565b945060608801359150808211156110ed57600080fd5b6110f989838a01610f9a565b9350608088013591508082111561110f57600080fd5b5061111c8882890161100b565b9150509295509295909350565b6000806040838503121561113c57600080fd5b823567ffffffffffffffff8082111561115457600080fd5b818501915085601f83011261116857600080fd5b8135602061117582610f76565b6040516111828282610f49565b83815260059390931b85018201928281019150898411156111a257600080fd5b948201945b838610156111c7576111b886610eed565b825294820194908201906111a7565b965050860135925050808211156111dd57600080fd5b506111ea85828601610f9a565b9150509250929050565b600081518084526020808501945080840160005b8381101561122457815187529582019590820190600101611208565b509495945050505050565b60208152600061016e60208301846111f4565b6000806040838503121561125557600080fd5b61125e83610eed565b91506020830135801515811461127357600080fd5b809150509250929050565b6000806040838503121561129157600080fd5b61129a83610eed565b91506112a860208401610eed565b90509250929050565b600080600080600060a086880312156112c957600080fd5b6112d286610eed565b94506112e060208701610eed565b93506040860135925060608601359150608086013567ffffffffffffffff81111561130a57600080fd5b61111c8882890161100b565b634e487b7160e01b600052603260045260246000fd5b6000821982111561134d57634e487b7160e01b600052601160045260246000fd5b500190565b60408152600061136560408301856111f4565b828103602084015261137781856111f4565b95945050505050565b6000815180845260005b818110156113a65760208185018101518683018201520161138a565b818111156113b8576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526113f960a08301866111f4565b828103606084015261140b81866111f4565b9050828103608084015261141f8185611380565b98975050505050505050565b60006020828403121561143d57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461016e57600080fd5b600060033d11156114865760046000803e5060005160e01c5b90565b600060443d10156114975790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114c757505050505090565b82850191508151818111156114df5750505050505090565b843d87010160208285010111156114f95750505050505090565b61150860208286010187610f49565b509095945050505050565b60208152600061016e6020830184611380565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261155e60a0830184611380565b97965050505050505056fea2646970667358221220cc571873fdfa4a7c2b5407e3b7c3befb00e00894fbf16c2dd0e022863f05454464736f6c634300080f0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100715760003560e01c8063a22cb46511610050578063a22cb465146100d1578063e985e9c5146100e4578063f242432a1461014f57600080fd5b8062fdd58e146100765780632eb2c2d61461009c5780634e1273f4146100b1575b600080fd5b610089610084366004610f09565b610162565b6040519081526020015b60405180910390f35b6100af6100aa36600461107f565b610175565b005b6100c46100bf366004611129565b61025e565b604051610093919061122f565b6100af6100df366004611242565b610485565b61013f6100f236600461127e565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6040519015158152602001610093565b6100af61015d3660046112b1565b610591565b600061016e838361066d565b9392505050565b336001600160a01b0386168114806101d157506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6102485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610256818787878787610732565b505050505050565b606081518351146102d75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161023f565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff81111561031657610316610f33565b60405190808252806020026020018201604052801561033f578160200160208202803683370190505b50905060005b855181101561047c5760006001600160a01b031686828151811061036b5761036b611316565b60200260200101516001600160a01b0316036103ef5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f2061646472657373000000000000000000000000000000606482015260840161023f565b82600086838151811061040457610404611316565b60200260200101518152602001908152602001600020600087838151811061042e5761042e611316565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061046957610469611316565b6020908102919091010152600101610345565b50949350505050565b336001600160a01b03831681036105045760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161023f565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b336001600160a01b0386168114806105ed57506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b61065f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161023f565b61025681878787878761074e565b60006001600160a01b0383166106eb5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f2061646472657373000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b61074086868686868661076a565b6102568686868686866109fe565b61075c868686868686610bc4565b610256868686868686610d8e565b6001600160a01b0384166107ce5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161023f565b81518351146108455760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b845181101561099d57600085828151811061088657610886611316565b6020026020010151905060008583815181106108a4576108a4611316565b602090810291909101810151600084815286835260408082206001600160a01b038e16835290935291909120549091508181101561094a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a16815290812080546001959095019483929061099090849061132c565b9091555061086992505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109ed929190611352565b60405180910390a450505050505050565b6001600160a01b0384163b156102565760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a4290899089908890889088906004016113cd565b6020604051808303816000875af1925050508015610a7d575060408051601f3d908101601f19168201909252610a7a9181019061142b565b60015b610b3257610a8961146d565b806308c379a003610ac25750610a9d611489565b80610aa85750610ac4565b8060405162461bcd60e51b815260040161023f9190611513565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161023f565b7fffffffff00000000000000000000000000000000000000000000000000000000811663bc197c8160e01b14610bbb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161023f565b50505050505050565b6001600160a01b038416610c285760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161023f565b610c47868686610c3787610ea2565b610c4087610ea2565b5050505050565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038a1685529091529091205483811015610d005760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290610d3f90849061132c565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016109ed565b6001600160a01b0384163b156102565760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dd29089908990889088908890600401611526565b6020604051808303816000875af1925050508015610e0d575060408051601f3d908101601f19168201909252610e0a9181019061142b565b60015b610e1957610a8961146d565b7fffffffff00000000000000000000000000000000000000000000000000000000811663f23a6e6160e01b14610bbb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161023f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610edc57610edc611316565b602090810291909101015292915050565b80356001600160a01b0381168114610f0457600080fd5b919050565b60008060408385031215610f1c57600080fd5b610f2583610eed565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610f6f57610f6f610f33565b6040525050565b600067ffffffffffffffff821115610f9057610f90610f33565b5060051b60200190565b600082601f830112610fab57600080fd5b81356020610fb882610f76565b604051610fc58282610f49565b83815260059390931b8501820192828101915086841115610fe557600080fd5b8286015b848110156110005780358352918301918301610fe9565b509695505050505050565b600082601f83011261101c57600080fd5b813567ffffffffffffffff81111561103657611036610f33565b60405161104d601f8301601f191660200182610f49565b81815284602083860101111561106257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561109757600080fd5b6110a086610eed565b94506110ae60208701610eed565b9350604086013567ffffffffffffffff808211156110cb57600080fd5b6110d789838a01610f9a565b945060608801359150808211156110ed57600080fd5b6110f989838a01610f9a565b9350608088013591508082111561110f57600080fd5b5061111c8882890161100b565b9150509295509295909350565b6000806040838503121561113c57600080fd5b823567ffffffffffffffff8082111561115457600080fd5b818501915085601f83011261116857600080fd5b8135602061117582610f76565b6040516111828282610f49565b83815260059390931b85018201928281019150898411156111a257600080fd5b948201945b838610156111c7576111b886610eed565b825294820194908201906111a7565b965050860135925050808211156111dd57600080fd5b506111ea85828601610f9a565b9150509250929050565b600081518084526020808501945080840160005b8381101561122457815187529582019590820190600101611208565b509495945050505050565b60208152600061016e60208301846111f4565b6000806040838503121561125557600080fd5b61125e83610eed565b91506020830135801515811461127357600080fd5b809150509250929050565b6000806040838503121561129157600080fd5b61129a83610eed565b91506112a860208401610eed565b90509250929050565b600080600080600060a086880312156112c957600080fd5b6112d286610eed565b94506112e060208701610eed565b93506040860135925060608601359150608086013567ffffffffffffffff81111561130a57600080fd5b61111c8882890161100b565b634e487b7160e01b600052603260045260246000fd5b6000821982111561134d57634e487b7160e01b600052601160045260246000fd5b500190565b60408152600061136560408301856111f4565b828103602084015261137781856111f4565b95945050505050565b6000815180845260005b818110156113a65760208185018101518683018201520161138a565b818111156113b8576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526113f960a08301866111f4565b828103606084015261140b81866111f4565b9050828103608084015261141f8185611380565b98975050505050505050565b60006020828403121561143d57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461016e57600080fd5b600060033d11156114865760046000803e5060005160e01c5b90565b600060443d10156114975790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114c757505050505090565b82850191508151818111156114df5750505050505090565b843d87010160208285010111156114f95750505050505090565b61150860208286010187610f49565b509095945050505050565b60208152600061016e6020830184611380565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261155e60a0830184611380565b97965050505050505056fea2646970667358221220cc571873fdfa4a7c2b5407e3b7c3befb00e00894fbf16c2dd0e022863f05454464736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../IERC1155.sol\";\nimport \"../IERC1155Receiver.sol\";\nimport \"./ERC1155BaseInternal.sol\";\n\n/**\n * @title Base ERC1155 contract\n * @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\n */\ncontract ERC1155Base is IERC1155, ERC1155BaseInternal {\n    /**\n     * @inheritdoc IERC1155\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balanceOf(account, id);\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        unchecked {\n            for (uint256 i; i < accounts.length; i++) {\n                require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\");\n                batchBalances[i] = balances[ids[i]][accounts[i]];\n            }\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return ERC1155BaseStorage.layout().operatorApprovals[account][operator];\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function setApprovalForAll(address operator, bool status) public virtual {\n        address sender = _msgSender();\n        require(sender != operator, \"ERC1155: setting approval status for self\");\n        ERC1155BaseStorage.layout().operatorApprovals[sender][operator] = status;\n        emit ApprovalForAll(sender, operator, status);\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        require(from == sender || isApprovedForAll(from, sender), \"ERC1155: caller is not owner nor approved\");\n        _safeTransfer(sender, from, to, id, amount, data);\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        require(from == sender || isApprovedForAll(from, sender), \"ERC1155: caller is not owner nor approved\");\n        _safeTransferBatch(sender, from, to, ids, amounts, data);\n    }\n}\n"},"flair-sdk:token/ERC1155/base/ERC1155BaseERC2771":{"fqn":"flair-sdk:token/ERC1155/base/ERC1155BaseERC2771","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155BaseERC2771","sourceName":"src/token/ERC1155/base/ERC1155BaseERC2771.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../metatx/ERC2771ContextInternal.sol\";\n\nimport \"./ERC1155Base.sol\";\n\n/**\n * @title Base ERC1155 contract with meta-transactions support (via ERC2771).\n */\nabstract contract ERC1155BaseERC2771 is ERC1155Base, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"},"flair-sdk:token/ERC1155/base/ERC1155BaseInternal":{"fqn":"flair-sdk:token/ERC1155/base/ERC1155BaseInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155BaseInternal","sourceName":"src/token/ERC1155/base/ERC1155BaseInternal.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\nimport \"../IERC1155Events.sol\";\nimport \"../IERC1155Receiver.sol\";\nimport \"./ERC1155BaseStorage.sol\";\n\n/**\n * @title Base ERC1155 internal functions\n * @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\n */\nabstract contract ERC1155BaseInternal is Context, IERC1155Events {\n    using Address for address;\n\n    /**\n     * @notice query the balance of given token held by given address\n     * @param account address to query\n     * @param id token to query\n     * @return token balance\n     */\n    function _balanceOf(address account, uint256 id) internal view virtual returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return ERC1155BaseStorage.layout().balances[id][account];\n    }\n\n    /**\n     * @notice mint given quantity of tokens for given address\n     * @dev ERC1155Receiver implementation is not checked\n     * @param account beneficiary of minting\n     * @param id token ID\n     * @param amount quantity of tokens to mint\n     * @param data data payload\n     */\n    function _mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        address operator = _msgSender();\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        ERC1155BaseStorage.layout().balances[id][account] += amount;\n\n        emit TransferSingle(operator, address(0), account, id, amount);\n    }\n\n    /**\n     * @notice mint given quantity of tokens for given address\n     * @param account beneficiary of minting\n     * @param id token ID\n     * @param amount quantity of tokens to mint\n     * @param data data payload\n     */\n    function _safeMint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        _mint(account, id, amount, data);\n\n        _doSafeTransferAcceptanceCheck(_msgSender(), address(0), account, id, amount, data);\n    }\n\n    /**\n     * @notice mint batch of tokens for given address\n     * @dev ERC1155Receiver implementation is not checked\n     * @param account beneficiary of minting\n     * @param ids list of token IDs\n     * @param amounts list of quantities of tokens to mint\n     * @param data data payload\n     */\n    function _mintBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address sender = _msgSender();\n\n        _beforeTokenTransfer(sender, address(0), account, ids, amounts, data);\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        for (uint256 i; i < ids.length; ) {\n            balances[ids[i]][account] += amounts[i];\n            unchecked {\n                i++;\n            }\n        }\n\n        emit TransferBatch(sender, address(0), account, ids, amounts);\n    }\n\n    /**\n     * @notice mint batch of tokens for given address\n     * @param account beneficiary of minting\n     * @param ids list of token IDs\n     * @param amounts list of quantities of tokens to mint\n     * @param data data payload\n     */\n    function _safeMintBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        _mintBatch(account, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(_msgSender(), address(0), account, ids, amounts, data);\n    }\n\n    /**\n     * @notice burn given quantity of tokens held by given address\n     * @param account holder of tokens to burn\n     * @param id token ID\n     * @param amount quantity of tokens to burn\n     */\n    function _burn(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address sender = _msgSender();\n\n        _beforeTokenTransfer(sender, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        mapping(address => uint256) storage balances = ERC1155BaseStorage.layout().balances[id];\n\n        unchecked {\n            require(balances[account] >= amount, \"ERC1155: burn amount exceeds balance\");\n            balances[account] -= amount;\n        }\n\n        emit TransferSingle(sender, account, address(0), id, amount);\n    }\n\n    /**\n     * @notice burn given batch of tokens held by given address\n     * @param account holder of tokens to burn\n     * @param ids token IDs\n     * @param amounts quantities of tokens to burn\n     */\n    function _burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address sender = _msgSender();\n\n        _beforeTokenTransfer(sender, account, address(0), ids, amounts, \"\");\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        unchecked {\n            for (uint256 i; i < ids.length; i++) {\n                uint256 id = ids[i];\n                require(balances[id][account] >= amounts[i], \"ERC1155: burn amount exceeds balance\");\n                balances[id][account] -= amounts[i];\n            }\n        }\n\n        emit TransferBatch(sender, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @notice transfer tokens between given addresses\n     * @dev ERC1155Receiver implementation is not checked\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function _transfer(\n        address operator,\n        address sender,\n        address recipient,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(recipient != address(0), \"ERC1155: transfer to the zero address\");\n\n        _beforeTokenTransfer(operator, sender, recipient, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        unchecked {\n            uint256 senderBalance = balances[id][sender];\n            require(senderBalance >= amount, \"ERC1155: insufficient balances for transfer\");\n            balances[id][sender] = senderBalance - amount;\n        }\n\n        balances[id][recipient] += amount;\n\n        emit TransferSingle(operator, sender, recipient, id, amount);\n    }\n\n    /**\n     * @notice transfer tokens between given addresses\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function _safeTransfer(\n        address operator,\n        address sender,\n        address recipient,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        _transfer(operator, sender, recipient, id, amount, data);\n\n        _doSafeTransferAcceptanceCheck(operator, sender, recipient, id, amount, data);\n    }\n\n    /**\n     * @notice transfer batch of tokens between given addresses\n     * @dev ERC1155Receiver implementation is not checked\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _transferBatch(\n        address operator,\n        address sender,\n        address recipient,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(recipient != address(0), \"ERC1155: transfer to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        _beforeTokenTransfer(operator, sender, recipient, ids, amounts, data);\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        for (uint256 i; i < ids.length; ) {\n            uint256 token = ids[i];\n            uint256 amount = amounts[i];\n\n            unchecked {\n                uint256 senderBalance = balances[token][sender];\n\n                require(senderBalance >= amount, \"ERC1155: insufficient balances for transfer\");\n\n                balances[token][sender] = senderBalance - amount;\n\n                i++;\n            }\n\n            // balance increase cannot be unchecked because ERC1155Base neither tracks nor validates a totalSupply\n            balances[token][recipient] += amount;\n        }\n\n        emit TransferBatch(operator, sender, recipient, ids, amounts);\n    }\n\n    /**\n     * @notice transfer batch of tokens between given addresses\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _safeTransferBatch(\n        address operator,\n        address sender,\n        address recipient,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        _transferBatch(operator, sender, recipient, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, sender, recipient, ids, amounts, data);\n    }\n\n    /**\n     * @notice wrap given element in array of length 1\n     * @param element element to wrap\n     * @return singleton array\n     */\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n        return array;\n    }\n\n    /**\n     * @notice revert if applicable transfer recipient is not valid ERC1155Receiver\n     * @param operator executor of transfer\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                require(\n                    response == IERC1155Receiver.onERC1155Received.selector,\n                    \"ERC1155: ERC1155Receiver rejected tokens\"\n                );\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    /**\n     * @notice revert if applicable transfer recipient is not valid ERC1155Receiver\n     * @param operator executor of transfer\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                require(\n                    response == IERC1155Receiver.onERC1155BatchReceived.selector,\n                    \"ERC1155: ERC1155Receiver rejected tokens\"\n                );\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    /**\n     * @notice ERC1155 hook, called before all transfers including mint and burn\n     * @dev function should be overridden and new implementation must call super\n     * @dev called for both single and batch transfers\n     * @param operator executor of transfer\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n}\n"},"flair-sdk:token/ERC1155/base/ERC1155BaseStorage":{"fqn":"flair-sdk:token/ERC1155/base/ERC1155BaseStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155BaseStorage","sourceName":"src/token/ERC1155/base/ERC1155BaseStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7938f76d33a3b85f4b5e1ddb1214c9d0b4968182155794a13d2efaf5d10b77d64736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b7938f76d33a3b85f4b5e1ddb1214c9d0b4968182155794a13d2efaf5d10b77d64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC1155BaseStorage {\n    struct Layout {\n        mapping(uint256 => mapping(address => uint256)) balances;\n        mapping(address => mapping(address => bool)) operatorApprovals;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.ERC1155Base\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/burnable/ERC1155Burnable":{"fqn":"flair-sdk:token/ERC1155/extensions/burnable/ERC1155Burnable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155Burnable","sourceName":"src/token/ERC1155/extensions/burnable/ERC1155Burnable.sol","abi":[{"inputs":[],"name":"SenderIsNotSelf","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatchByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnablePausedUntil","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../IERC1155.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155Burnable.sol\";\nimport \"./ERC1155BurnableStorage.sol\";\n\n/**\n * @title Extension of {ERC1155} that allows users or approved operators to burn tokens.\n */\nabstract contract ERC1155Burnable is IERC1155Burnable, ERC1155BaseInternal {\n    function burnablePausedUntil() public view override returns (uint256) {\n        return ERC1155BurnableStorage.layout().pausedUntil;\n    }\n\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) public virtual {\n        require(\n            account == _msgSender() || IERC1155(address(this)).isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        require(\n            account == _msgSender() || IERC1155(address(this)).isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n\n    function burnByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual {\n        if (address(this) != msg.sender) {\n            revert SenderIsNotSelf();\n        }\n\n        _burn(account, id, amount);\n    }\n\n    function burnBatchByFacet(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) public virtual {\n        if (address(this) != msg.sender) {\n            revert SenderIsNotSelf();\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/burnable/ERC1155BurnableStorage":{"fqn":"flair-sdk:token/ERC1155/extensions/burnable/ERC1155BurnableStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155BurnableStorage","sourceName":"src/token/ERC1155/extensions/burnable/ERC1155BurnableStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf2c07898dec01698a8cdde82bc79219d9c16c7785a7eabf2746a4fdd1b20aa264736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bf2c07898dec01698a8cdde82bc79219d9c16c7785a7eabf2746a4fdd1b20aa264736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC1155BurnableStorage {\n    struct Layout {\n        uint256 pausedUntil;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155Burnable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/burnable/IERC1155Burnable":{"fqn":"flair-sdk:token/ERC1155/extensions/burnable/IERC1155Burnable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155Burnable","sourceName":"src/token/ERC1155/extensions/burnable/IERC1155Burnable.sol","abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"burnBatchByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"burnablePausedUntil","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows holders or approved operators to burn tokens.\n */\ninterface IERC1155Burnable {\n    function burnablePausedUntil() external view returns (uint256);\n\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) external;\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) external;\n\n    function burnByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function burnBatchByFacet(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) external;\n}\n"},"flair-sdk:token/ERC1155/extensions/lockable/ERC1155Lockable":{"fqn":"flair-sdk:token/ERC1155/extensions/lockable/ERC1155Lockable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155Lockable","sourceName":"src/token/ERC1155/extensions/lockable/ERC1155Lockable.sol","abi":[{"inputs":[],"name":"SenderIsNotSelf","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"ticketTokenIds","type":"uint256[]"}],"name":"locked","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"locked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unlockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"./ERC1155LockableInternal.sol\";\nimport \"./IERC1155Lockable.sol\";\n\nabstract contract ERC1155Lockable is IERC1155Lockable, ERC1155LockableInternal {\n    function locked(address account, uint256 tokenId) public view virtual returns (uint256) {\n        return super._locked(account, tokenId);\n    }\n\n    function locked(address account, uint256[] calldata ticketTokenIds) public view returns (uint256[] memory) {\n        uint256[] memory amounts = new uint256[](ticketTokenIds.length);\n\n        for (uint256 i = 0; i < ticketTokenIds.length; i++) {\n            amounts[i] = _locked(account, ticketTokenIds[i]);\n        }\n\n        return amounts;\n    }\n\n    /**\n     * @inheritdoc IERC1155Lockable\n     */\n    function lockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual override {\n        if (address(this) != msg.sender) {\n            revert SenderIsNotSelf();\n        }\n\n        _lock(account, id, amount);\n    }\n\n    /**\n     * @inheritdoc IERC1155Lockable\n     */\n    function unlockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual override {\n        if (address(this) != msg.sender) {\n            revert SenderIsNotSelf();\n        }\n\n        _unlock(account, id, amount);\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableInternal":{"fqn":"flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155LockableInternal","sourceName":"src/token/ERC1155/extensions/lockable/ERC1155LockableInternal.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./ERC1155LockableStorage.sol\";\n\nabstract contract ERC1155LockableInternal is ERC1155BaseInternal {\n    using ERC1155LockableStorage for ERC1155LockableStorage.Layout;\n\n    function _locked(address account, uint256 tokenId) internal view virtual returns (uint256) {\n        mapping(uint256 => uint256) storage locks = ERC1155LockableStorage.layout().lockedAmount[account];\n\n        return locks[tokenId];\n    }\n\n    /* INTERNAL */\n\n    function _lock(\n        address account,\n        uint256 tokenId,\n        uint256 amount\n    ) internal virtual {\n        mapping(uint256 => uint256) storage locks = ERC1155LockableStorage.layout().lockedAmount[account];\n\n        require(_balanceOf(account, tokenId) - locks[tokenId] >= amount, \"NOT_ENOUGH_BALANCE\");\n\n        locks[tokenId] += amount;\n    }\n\n    function _unlock(\n        address account,\n        uint256 tokenId,\n        uint256 amount\n    ) internal virtual {\n        mapping(uint256 => uint256) storage locks = ERC1155LockableStorage.layout().lockedAmount[account];\n\n        require(locks[tokenId] >= amount, \"NOT_ENOUGH_LOCKED\");\n\n        locks[tokenId] -= amount;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        if (from != address(0)) {\n            for (uint256 i = 0; i < ids.length; i++) {\n                require(\n                    _balanceOf(from, ids[i]) - ERC1155LockableStorage.layout().lockedAmount[from][ids[i]] >= amounts[i],\n                    \"LOCKED\"\n                );\n            }\n        }\n\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableStorage":{"fqn":"flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155LockableStorage","sourceName":"src/token/ERC1155/extensions/lockable/ERC1155LockableStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e99e09e263c09fb87ca6600069ccf209f120f33ca8d9df4afa01f701eb6a1ef364736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e99e09e263c09fb87ca6600069ccf209f120f33ca8d9df4afa01f701eb6a1ef364736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC1155LockableStorage {\n    struct Layout {\n        mapping(address => mapping(uint256 => uint256)) lockedAmount;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155Lockable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/lockable/IERC1155Lockable":{"fqn":"flair-sdk:token/ERC1155/extensions/lockable/IERC1155Lockable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155Lockable","sourceName":"src/token/ERC1155/extensions/lockable/IERC1155Lockable.sol","abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"lockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"unlockByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows other facets from the diamond to lock the tokens.\n */\ninterface IERC1155Lockable {\n    /**\n     * @dev Locks `amount` of tokens of `account`, of token type `id`.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function lockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    /**\n     * @dev Un-locks `amount` of tokens of `account`, of token type `id`.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function unlockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n}\n"},"flair-sdk:token/ERC1155/extensions/mintable/ERC1155Mintable":{"fqn":"flair-sdk:token/ERC1155/extensions/mintable/ERC1155Mintable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155Mintable","sourceName":"src/token/ERC1155/extensions/mintable/ERC1155Mintable.sol","abi":[{"inputs":[],"name":"SenderIsNotSelf","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155Mintable.sol\";\n\n/**\n * @title Extension of {ERC1155} that allows other facets of the diamond to mint based on arbitrary logic.\n */\nabstract contract ERC1155Mintable is IERC1155Mintable, ERC1155BaseInternal {\n    /**\n     * @inheritdoc IERC1155Mintable\n     */\n    function mintByFacet(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual {\n        if (address(this) != msg.sender) {\n            revert SenderIsNotSelf();\n        }\n\n        _mint(to, id, amount, data);\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/mintable/IERC1155Mintable":{"fqn":"flair-sdk:token/ERC1155/extensions/mintable/IERC1155Mintable","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155Mintable","sourceName":"src/token/ERC1155/extensions/mintable/IERC1155Mintable.sol","abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByFacet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows other facets from the diamond to mint tokens.\n */\ninterface IERC1155Mintable {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function mintByFacet(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) external;\n}\n"},"flair-sdk:token/ERC1155/extensions/supply/ERC1155Supply":{"fqn":"flair-sdk:token/ERC1155/extensions/supply/ERC1155Supply","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155Supply","sourceName":"src/token/ERC1155/extensions/supply/ERC1155Supply.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"existsBatch","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"maxSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"totalSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./ERC1155SupplyInternal.sol\";\nimport \"./IERC1155Supply.sol\";\nimport \"./IERC1155SupplyExtra.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155Supply is IERC1155Supply, IERC1155SupplyExtra, ERC1155SupplyInternal {\n    /**\n     * @inheritdoc IERC1155Supply\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply(id);\n    }\n\n    /**\n     * @inheritdoc IERC1155Supply\n     */\n    function maxSupply(uint256 id) public view virtual returns (uint256) {\n        return _maxSupply(id);\n    }\n\n    /**\n     * @inheritdoc IERC1155Supply\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return _exists(id);\n    }\n\n    /**\n     * @inheritdoc IERC1155SupplyExtra\n     */\n    function totalSupplyBatch(uint256[] calldata ids) public view virtual override returns (uint256[] memory) {\n        uint256[] memory totalSupplies = new uint256[](ids.length);\n        for (uint256 i = 0; i < ids.length; i++) {\n            totalSupplies[i] = _totalSupply(ids[i]);\n        }\n        return totalSupplies;\n    }\n\n    /**\n     * @inheritdoc IERC1155SupplyExtra\n     */\n    function maxSupplyBatch(uint256[] calldata ids) public view virtual override returns (uint256[] memory) {\n        uint256[] memory maxSupplies = new uint256[](ids.length);\n        for (uint256 i = 0; i < ids.length; i++) {\n            maxSupplies[i] = _maxSupply(ids[i]);\n        }\n        return maxSupplies;\n    }\n\n    /**\n     * @inheritdoc IERC1155SupplyExtra\n     */\n    function existsBatch(uint256[] calldata ids) public view virtual override returns (bool[] memory) {\n        bool[] memory existences = new bool[](ids.length);\n        for (uint256 i = 0; i < ids.length; i++) {\n            existences[i] = _exists(ids[i]);\n        }\n        return existences;\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyInternal":{"fqn":"flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155SupplyInternal","sourceName":"src/token/ERC1155/extensions/supply/ERC1155SupplyInternal.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./ERC1155SupplyStorage.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n */\nabstract contract ERC1155SupplyInternal is ERC1155BaseInternal {\n    using ERC1155SupplyStorage for ERC1155SupplyStorage.Layout;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function _totalSupply(uint256 id) internal view virtual returns (uint256) {\n        return ERC1155SupplyStorage.layout().totalSupply[id];\n    }\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function _maxSupply(uint256 id) internal view virtual returns (uint256) {\n        return ERC1155SupplyStorage.layout().maxSupply[id];\n    }\n\n    /**\n     * @dev Seta maximum amount of tokens possible to exist for a given token ID.\n     */\n    function _setMaxSupply(uint256 tokenId, uint256 newValue) internal {\n        ERC1155SupplyStorage.layout().maxSupply[tokenId] = newValue;\n    }\n\n    /**\n     * @dev Sets maximum amount of tokens possible to exist for multiple token IDs.\n     */\n    function _setMaxSupplyBatch(uint256[] calldata tokenIds, uint256[] calldata newValues) internal {\n        mapping(uint256 => uint256) storage l = ERC1155SupplyStorage.layout().maxSupply;\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            l[tokenIds[i]] = newValues[i];\n        }\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function _exists(uint256 id) internal view virtual returns (bool) {\n        return ERC1155SupplyStorage.layout().totalSupply[id] > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            mapping(uint256 => uint256) storage totalSupply = ERC1155SupplyStorage.layout().totalSupply;\n            mapping(uint256 => uint256) storage maxSupply = ERC1155SupplyStorage.layout().maxSupply;\n\n            for (uint256 i = 0; i < ids.length; ++i) {\n                totalSupply[ids[i]] += amounts[i];\n\n                require(totalSupply[ids[i]] <= maxSupply[ids[i]], \"SUPPLY_EXCEED_MAX\");\n            }\n        }\n\n        if (to == address(0)) {\n            mapping(uint256 => uint256) storage totalSupply = ERC1155SupplyStorage.layout().totalSupply;\n\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyStorage":{"fqn":"flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155SupplyStorage","sourceName":"src/token/ERC1155/extensions/supply/ERC1155SupplyStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e994c8ba17b4f36ff45a3742c3500b3b3729a83dabbe267c46f37714201a8a8764736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e994c8ba17b4f36ff45a3742c3500b3b3729a83dabbe267c46f37714201a8a8764736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC1155SupplyStorage {\n    struct Layout {\n        mapping(uint256 => uint256) totalSupply;\n        mapping(uint256 => uint256) maxSupply;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155Supply\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/extensions/supply/IERC1155Supply":{"fqn":"flair-sdk:token/ERC1155/extensions/supply/IERC1155Supply","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155Supply","sourceName":"src/token/ERC1155/extensions/supply/IERC1155Supply.sol","abi":[{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"exists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that tracks supply and defines a max supply cap per token ID.\n */\ninterface IERC1155Supply {\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) external view returns (uint256);\n\n    /**\n     * @dev Maximum amount of tokens possible to exist for a given id.\n     */\n    function maxSupply(uint256 id) external view returns (uint256);\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) external view returns (bool);\n}\n"},"flair-sdk:token/ERC1155/extensions/supply/IERC1155SupplyExtra":{"fqn":"flair-sdk:token/ERC1155/extensions/supply/IERC1155SupplyExtra","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155SupplyExtra","sourceName":"src/token/ERC1155/extensions/supply/IERC1155SupplyExtra.sol","abi":[{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"existsBatch","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"maxSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"totalSupplyBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev Extension of {ERC1155} to add batch view operations for supply.\n */\ninterface IERC1155SupplyExtra {\n    /**\n     * @dev Total amount of tokens for a list of IDs.\n     */\n    function totalSupplyBatch(uint256[] calldata ids) external view returns (uint256[] memory);\n\n    /**\n     * @dev Maximum amount of tokens possible to exist for a list of IDs.\n     */\n    function maxSupplyBatch(uint256[] calldata ids) external view returns (uint256[] memory);\n\n    /**\n     * @dev Indicates whether tokens exist given a list of IDs.\n     */\n    function existsBatch(uint256[] calldata ids) external view returns (bool[] memory);\n}\n"},"flair-sdk:token/ERC1155/facets/burnable/IERC1155BurnableAdmin":{"fqn":"flair-sdk:token/ERC1155/facets/burnable/IERC1155BurnableAdmin","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155BurnableAdmin","sourceName":"src/token/ERC1155/facets/burnable/IERC1155BurnableAdmin.sol","abi":[{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"name":"setBurnablePausedUntil","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155BurnableAdmin {\n    function setBurnablePausedUntil(uint256 newTimestamp) external;\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/ERC1155MetadataInternal":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/ERC1155MetadataInternal","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155MetadataInternal","sourceName":"src/token/ERC1155/facets/metadata/ERC1155MetadataInternal.sol","abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"URI","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./IERC1155MetadataEvents.sol\";\nimport \"./ERC1155MetadataStorage.sol\";\n\nabstract contract ERC1155MetadataInternal is IERC1155MetadataEvents {\n    function _setBaseURI(string memory baseURI) internal {\n        require(!ERC1155MetadataStorage.layout().baseURILocked, \"ERC1155Metadata: baseURI locked\");\n        ERC1155MetadataStorage.layout().baseURI = baseURI;\n    }\n\n    function _setFallbackURI(string memory baseURI) internal {\n        require(!ERC1155MetadataStorage.layout().fallbackURILocked, \"ERC1155Metadata: fallbackURI locked\");\n        ERC1155MetadataStorage.layout().baseURI = baseURI;\n    }\n\n    function _setURI(uint256 tokenId, string memory tokenURI) internal {\n        require(tokenId > ERC1155MetadataStorage.layout().lastLockedTokenId, \"ERC1155Metadata: tokenURI locked\");\n        ERC1155MetadataStorage.layout().tokenURIs[tokenId] = tokenURI;\n        emit URI(tokenURI, tokenId);\n    }\n\n    function _setURISuffix(string memory uriSuffix) internal {\n        require(!ERC1155MetadataStorage.layout().uriSuffixLocked, \"ERC1155Metadata: uriSuffix locked\");\n        ERC1155MetadataStorage.layout().uriSuffix = uriSuffix;\n    }\n\n    function _lockBaseURI() internal {\n        ERC1155MetadataStorage.layout().baseURILocked = true;\n    }\n\n    function _lockFallbackURI() internal {\n        ERC1155MetadataStorage.layout().fallbackURILocked = true;\n    }\n\n    function _lockURIUntil(uint256 tokenId) internal {\n        ERC1155MetadataStorage.layout().lastLockedTokenId = tokenId;\n    }\n\n    function _lockURISuffix() internal {\n        ERC1155MetadataStorage.layout().uriSuffixLocked = true;\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/ERC1155MetadataStorage":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/ERC1155MetadataStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155MetadataStorage","sourceName":"src/token/ERC1155/facets/metadata/ERC1155MetadataStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079cffcb41bc14190574bf623533845ad5c09cdf5c4dedda663623454a83b0fce64736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079cffcb41bc14190574bf623533845ad5c09cdf5c4dedda663623454a83b0fce64736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC1155MetadataStorage {\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155Metadata\");\n\n    struct Layout {\n        string baseURI;\n        bool baseURILocked;\n        string fallbackURI;\n        bool fallbackURILocked;\n        string uriSuffix;\n        bool uriSuffixLocked;\n        uint256 lastLockedTokenId;\n        mapping(uint256 => string) tokenURIs;\n    }\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/IERC1155Metadata":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/IERC1155Metadata","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155Metadata","sourceName":"src/token/ERC1155/facets/metadata/IERC1155Metadata.sol","abi":[{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155Metadata {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/IERC1155MetadataAdmin":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/IERC1155MetadataAdmin","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155MetadataAdmin","sourceName":"src/token/ERC1155/facets/metadata/IERC1155MetadataAdmin.sol","abi":[{"inputs":[],"name":"lockBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockFallbackURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockURISuffix","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"lockURIUntil","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newFallbackURI","type":"string"}],"name":"setFallbackURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"newTokenURI","type":"string"}],"name":"setURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"string[]","name":"newTokenURIs","type":"string[]"}],"name":"setURIBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newURIPrefix","type":"string"}],"name":"setURISuffix","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155MetadataAdmin {\n    function setBaseURI(string calldata newBaseURI) external;\n\n    function setFallbackURI(string calldata newFallbackURI) external;\n\n    function setURISuffix(string calldata newURIPrefix) external;\n\n    function setURI(uint256 tokenId, string calldata newTokenURI) external;\n\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) external;\n\n    function lockBaseURI() external;\n\n    function lockFallbackURI() external;\n\n    function lockURISuffix() external;\n\n    function lockURIUntil(uint256 tokenId) external;\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/IERC1155MetadataEvents":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/IERC1155MetadataEvents","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155MetadataEvents","sourceName":"src/token/ERC1155/facets/metadata/IERC1155MetadataEvents.sol","abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"URI","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155MetadataEvents {\n    event URI(string value, uint256 indexed tokenId);\n}\n"},"flair-sdk:token/ERC1155/facets/metadata/IERC1155MetadataExtra":{"fqn":"flair-sdk:token/ERC1155/facets/metadata/IERC1155MetadataExtra","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155MetadataExtra","sourceName":"src/token/ERC1155/facets/metadata/IERC1155MetadataExtra.sol","abi":[{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURILocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fallbackURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fallbackURILocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastLockedTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"uriBatch","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uriSuffix","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uriSuffixLocked","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155MetadataExtra {\n    function baseURI() external view returns (string memory);\n\n    function fallbackURI() external view returns (string memory);\n\n    function uriSuffix() external view returns (string memory);\n\n    function baseURILocked() external view returns (bool);\n\n    function fallbackURILocked() external view returns (bool);\n\n    function uriSuffixLocked() external view returns (bool);\n\n    function lastLockedTokenId() external view returns (uint256);\n\n    function uriBatch(uint256[] calldata tokenIds) external view returns (string[] memory);\n}\n"},"flair-sdk:token/ERC1155/facets/minting/IERC1155MintByOwner":{"fqn":"flair-sdk:token/ERC1155/facets/minting/IERC1155MintByOwner","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155MintByOwner","sourceName":"src/token/ERC1155/facets/minting/IERC1155MintByOwner.sol","abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows diamond owner to mint tokens.\n */\ninterface IERC1155MintByOwner {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond owner.\n     */\n    function mintByOwner(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) external;\n}\n"},"flair-sdk:token/ERC1155/facets/minting/IERC1155MintByRole":{"fqn":"flair-sdk:token/ERC1155/facets/minting/IERC1155MintByRole","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155MintByRole","sourceName":"src/token/ERC1155/facets/minting/IERC1155MintByRole.sol","abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mintByRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows a specific role to mint tokens.\n */\ninterface IERC1155MintByRole {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have MINTER_ROLE.\n     */\n    function mintByRole(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) external;\n}\n"},"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesStorage":{"fqn":"flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesStorage","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"ERC1155TieredSalesStorage","sourceName":"src/token/ERC1155/facets/sales/ERC1155TieredSalesStorage.sol","abi":[],"bytecode":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081b0052f92ad80bc33de2928513ccf4f563da783a0df12a1923621f83ab01f3964736f6c634300080f0033","deployedBytecode":"0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081b0052f92ad80bc33de2928513ccf4f563da783a0df12a1923621f83ab01f3964736f6c634300080f0033","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nlibrary ERC1155TieredSalesStorage {\n    struct Layout {\n        mapping(uint256 => uint256) tierToTokenId;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155TieredSales\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"},"flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSales":{"fqn":"flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSales","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155TieredSales","sourceName":"src/token/ERC1155/facets/sales/IERC1155TieredSales.sol","abi":[{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"tierToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tierIds","type":"uint256[]"}],"name":"tierToTokenId","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155TieredSales {\n    function tierToTokenId(uint256 tierId) external view returns (uint256);\n\n    function tierToTokenId(uint256[] calldata tierIds) external view returns (uint256[] memory);\n}\n"},"flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSalesAdmin":{"fqn":"flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSalesAdmin","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155TieredSalesAdmin","sourceName":"src/token/ERC1155/facets/sales/IERC1155TieredSalesAdmin.sol","abi":[{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"configureTierTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tierIds","type":"uint256[]"},{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"configureTierTokenId","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155TieredSalesAdmin {\n    function configureTierTokenId(uint256 tierId, uint256 tokenId) external;\n\n    function configureTierTokenId(uint256[] calldata tierIds, uint256[] calldata tokenIds) external;\n}\n"},"flair-sdk:token/ERC1155/facets/supply/IERC1155SupplyAdmin":{"fqn":"flair-sdk:token/ERC1155/facets/supply/IERC1155SupplyAdmin","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155SupplyAdmin","sourceName":"src/token/ERC1155/facets/supply/IERC1155SupplyAdmin.sol","abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"setMaxSupply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"},{"internalType":"uint256[]","name":"newValues","type":"uint256[]"}],"name":"setMaxSupplyBatch","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\ninterface IERC1155SupplyAdmin {\n    function setMaxSupply(uint256 tokenId, uint256 newValue) external;\n\n    function setMaxSupplyBatch(uint256[] calldata tokenIds, uint256[] calldata newValues) external;\n}\n"},"flair-sdk:token/ERC1155/IERC1155":{"fqn":"flair-sdk:token/ERC1155/IERC1155","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155","sourceName":"src/token/ERC1155/IERC1155.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"./IERC1155Events.sol\";\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @title ERC1155 interface\n * @dev see https://github.com/ethereum/EIPs/issues/1155\n */\ninterface IERC1155 is IERC1155Events {\n    /**\n     * @notice query the balance of given token held by given address\n     * @param account address to query\n     * @param id token to query\n     * @return token balance\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @notice query the balances of given tokens held by given addresses\n     * @param accounts addresss to query\n     * @param ids tokens to query\n     * @return token balances\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @notice query approval status of given operator with respect to given address\n     * @param account address to query for approval granted\n     * @param operator address to query for approval received\n     * @return whether operator is approved to spend tokens held by account\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @notice grant approval to or revoke approval from given operator to spend held tokens\n     * @param operator address whose approval status to update\n     * @param status whether operator should be considered approved\n     */\n    function setApprovalForAll(address operator, bool status) external;\n\n    /**\n     * @notice transfer tokens between given addresses, checking for ERC1155Receiver implementation if applicable\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @notice transfer batch of tokens between given addresses, checking for ERC1155Receiver implementation if applicable\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param ids list of token IDs\n     * @param amounts list of quantities of tokens to transfer\n     * @param data data payload\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"},"flair-sdk:token/ERC1155/IERC1155Events":{"fqn":"flair-sdk:token/ERC1155/IERC1155Events","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155Events","sourceName":"src/token/ERC1155/IERC1155Events.sol","abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @title Partial ERC1155 interface needed by internal functions\n */\ninterface IERC1155Events {\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n}\n"},"flair-sdk:token/ERC1155/IERC1155Receiver":{"fqn":"flair-sdk:token/ERC1155/IERC1155Receiver","version":"2.4.4","artifact":{"_format":"hh-sol-artifact-1","contractName":"IERC1155Receiver","sourceName":"src/token/ERC1155/IERC1155Receiver.sol","abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"bytecode":"0x","deployedBytecode":"0x","linkReferences":{},"deployedLinkReferences":{}},"sourceCode":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.15;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @title ERC1155 transfer receiver interface\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"}}
