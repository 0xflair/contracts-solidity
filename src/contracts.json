{
  "flair-sdk:token/common/burnable/BurnableOwnable": {
    "fqn": "flair-sdk:token/common/burnable/BurnableOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0xf4Fe20d955a1B833A42d352EfD4d85222EEF1805",
      "goerli": "0xf4Fe20d955a1B833A42d352EfD4d85222EEF1805"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "BurnableOwnable",
      "sourceName": "src/token/common/burnable/BurnableOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newTimestamp",
              "type": "uint256"
            }
          ],
          "name": "setBurnablePausedUntil",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061015c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063710fb57714610030575b600080fd5b61004361003e36600461010d565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f7b600420de2644e01d67749445036686fe1148fa35ed898145088a4de1e0640655565b60006020828403121561011f57600080fd5b503591905056fea26469706673582212202ba4e650046b604b193205bb2b4602becca6e31bdbcb335940682901a517206664736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063710fb57714610030575b600080fd5b61004361003e36600461010d565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f7b600420de2644e01d67749445036686fe1148fa35ed898145088a4de1e0640655565b60006020828403121561011f57600080fd5b503591905056fea26469706673582212202ba4e650046b604b193205bb2b4602becca6e31bdbcb335940682901a517206664736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../access/ownable/OwnableInternal.sol\";\nimport \"./BurnableStorage.sol\";\nimport \"./IBurnableAdmin.sol\";\n\n/**\n * @title Burnable - Admin - Ownable\n * @notice Allow contract owner to manage burning mechanism.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:provides-interfaces IBurnableAdmin\n */\ncontract BurnableOwnable is IBurnableAdmin, OwnableInternal {\n    using BurnableStorage for BurnableStorage.Layout;\n\n    function setBurnablePausedUntil(uint256 newTimestamp) public virtual onlyOwner {\n        BurnableStorage.layout().pausedUntil = newTimestamp;\n    }\n}\n"
  },
  "flair-sdk:diamond/Diamond": {
    "fqn": "flair-sdk:diamond/Diamond",
    "version": "2.14.0",
    "address": {
      "5": "0x9ff8E2D6d7C855bAFc4B4EBC34b83940a08b5F87",
      "goerli": "0x9ff8E2D6d7C855bAFc4B4EBC34b83940a08b5F87"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Diamond",
      "sourceName": "src/diamond/Diamond.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "diamondCutFacet",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "diamondLoupeFacet",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "erc165Facet",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "erc173Facet",
                  "type": "address"
                }
              ],
              "internalType": "struct Diamond.CoreFacets",
              "name": "_coreFacets",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_facets",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "initContract",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct Diamond.Initialization[]",
              "name": "_initializations",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facet",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "name": "ErrDiamondFacetAlreadyExists",
          "type": "error"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIDiamond",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "bytecode": "0x60806040523480156200001157600080fd5b5060405162001eba38038062001eba833981016040819052620000349162000e1f565b60006200004b620004bc60201b6200028d1760201c565b6040805160018082528183019092529192506000919060208083019080368337019050509050631f931c1c60e01b816000815181106200008f576200008f62000f09565b6001600160e01b0319909216602092830291909101820152620000c99083906307e4c70760e21b90600190620002b1620004e0821b17901c565b60408051600480825260a0820190925260009160208201608080368337019050509050637a0ed62760e01b816000815181106200010a576200010a62000f09565b6001600160e01b03199092166020928302919091019091015280516356fe50af60e11b908290600190811062000144576200014462000f09565b6001600160e01b03199092166020928302919091019091015280516314bbdacb60e21b90829060029081106200017e576200017e62000f09565b6001600160e01b03199092166020928302919091019091015280516366ffd66360e11b9082906003908110620001b857620001b862000f09565b6001600160e01b0319909216602092830291909101820152620001f29084906348e2b09360e01b90600190620002b1620004e0821b17901c565b604080516001808252818301909252600091602080830190803683370190505090506301ffc9a760e01b8160008151811062000232576200023262000f09565b6001600160e01b03199092166020928302919091018201526200026c9085906301ffc9a760e01b90600190620002b1620004e0821b17901c565b604080516002808252606082018352600092602083019080368337019050509050638da5cb5b60e01b81600081518110620002ab57620002ab62000f09565b6001600160e01b031990921660209283029190910190910152805163f2fde38b60e01b9082906001908110620002e557620002e562000f09565b6001600160e01b03199092166020928302919091018201526200031f9086906307f5828d60e41b90600190620002b1620004e0821b17901c565b6200033a8860000151856200056e60201b620003871760201c565b620003558860200151846200056e60201b620003871760201c565b620003708860400151836200056e60201b620003871760201c565b6200038b8860600151826200056e60201b620003871760201c565b620003b989620003a56200073d60201b620006101760201c565b6200076160201b620006341790919060201c565b60005b875181101562000432576200041d888281518110620003df57620003df62000f09565b60200260200101516000015189838151811062000400576200040062000f09565b6020026020010151604001516200056e60201b620003871760201c565b80620004298162000f35565b915050620003bc565b5060005b8651811015620004ac576200049787828151811062000459576200045962000f09565b6020026020010151600001518883815181106200047a576200047a62000f09565b6020026020010151602001516200077e60201b620006761760201c565b80620004a38162000f35565b91505062000436565b5050505050505050505062000fd5565b7fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264090565b6001600160e01b03198083169003620005405760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064015b60405180910390fd5b6001600160e01b03199190911660009081526020929092526040909120805460ff1916911515919091179055565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916001600160601b0382169003620005e557620005e58285620009a3565b60005b83518110156200073657600084828151811062000609576200060962000f09565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156200067757604051631a2f0c8360e11b81526001600160a01b03821660048201526001600160e01b03198316602482015260440162000537565b6001600160e01b0319821660008181526020878152604080832080546001600160a01b03908116600160a01b6001600160601b038c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281546001600160a01b031916179055836200071b8162000f51565b945050505080806200072d9062000f35565b915050620005e8565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed490565b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b0382166200080857805115620008045760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606482015260840162000537565b5050565b6000815111620008815760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606482015260840162000537565b6001600160a01b0382163014620008b757620008b78260405180606001604052806028815260200162001e6e6028913962000a10565b600080836001600160a01b031683604051620008d4919062000f82565b600060405180830381855af49150503d806000811462000911576040519150601f19603f3d011682016040523d82523d6000602084013e62000916565b606091505b5091509150816200099d5780511562000945578060405162461bcd60e51b815260040162000537919062000fa0565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b606482015260840162000537565b50505050565b620009c88160405180606001604052806024815260200162001e966024913962000a10565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b813b81816200099d5760405162461bcd60e51b815260040162000537919062000fa0565b80516001600160a01b038116811462000a4c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171562000a8c5762000a8c62000a51565b60405290565b604080519081016001600160401b038111828210171562000a8c5762000a8c62000a51565b604051608081016001600160401b038111828210171562000a8c5762000a8c62000a51565b604051601f8201601f191681016001600160401b038111828210171562000b075762000b0762000a51565b604052919050565b60006001600160401b0382111562000b2b5762000b2b62000a51565b5060051b60200190565b600082601f83011262000b4757600080fd5b8151602062000b6062000b5a8362000b0f565b62000adc565b828152600592831b850182019282820191908785111562000b8057600080fd5b8387015b8581101562000ca05780516001600160401b038082111562000ba65760008081fd5b908901906060828c03601f190181131562000bc15760008081fd5b62000bcb62000a67565b62000bd889850162000a34565b81526040808501516003811062000bef5760008081fd5b828b015291840151918383111562000c075760008081fd5b82850194508d603f86011262000c1f57600093508384fd5b89850151935062000c3462000b5a8562000b0f565b84815293871b85018101938a810193508e85111562000c535760008081fd5b948101945b8486101562000c8b5785516001600160e01b03198116811462000c7b5760008081fd5b8452948a0194928a019262000c58565b90820152875250505092840192840162000b84565b5090979650505050505050565b60005b8381101562000cca57818101518382015260200162000cb0565b838111156200099d5750506000910152565b6000601f838184011262000cef57600080fd5b8251602062000d0262000b5a8362000b0f565b82815260059290921b8501810191818101908784111562000d2257600080fd5b8287015b8481101562000e135780516001600160401b038082111562000d485760008081fd5b908901906040601f19838d03810182131562000d645760008081fd5b62000d6e62000a92565b62000d7b89860162000a34565b8152828501518481111562000d905760008081fd5b8086019550508d603f86011262000da75760008081fd5b888501518481111562000dbe5762000dbe62000a51565b62000dcf8a848e8401160162000adc565b94508085528e8482880101111562000de957600092508283fd5b62000dfa818b870186890162000cad565b5080890193909352505084525091830191830162000d26565b50979650505050505050565b60008060008084860360e081121562000e3757600080fd5b62000e428662000a34565b94506080601f198201121562000e5757600080fd5b5062000e6262000ab7565b62000e706020870162000a34565b815262000e806040870162000a34565b602082015262000e936060870162000a34565b604082015262000ea66080870162000a34565b606082015260a08601519093506001600160401b038082111562000ec957600080fd5b62000ed78883890162000b35565b935060c087015191508082111562000eee57600080fd5b5062000efd8782880162000cdc565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820162000f4a5762000f4a62000f1f565b5060010190565b60006001600160601b038281166002600160601b0319810162000f785762000f7862000f1f565b6001019392505050565b6000825162000f9681846020870162000cad565b9190910192915050565b602081526000825180602084015262000fc181604085016020870162000cad565b601f01601f19169190910160400192915050565b610e898062000fe56000396000f3fe60806040526004361061002d5760003560e01c8063ac9650d814610116578063fa28f5af1461014c57610034565b3661003457005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100f25760405162461bcd60e51b815260206004820152600860248201527f4241445f46554e4300000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e808015610111573d6000f35b3d6000fd5b34801561012257600080fd5b50610136610131366004610aea565b610198565b6040516101439190610bd5565b60405180910390f35b34801561015857600080fd5b50604080518082018252600381527f322e780000000000000000000000000000000000000000000000000000000000602082015290516101439190610c55565b60608167ffffffffffffffff8111156101b3576101b3610c68565b6040519080825280602002602001820160405280156101e657816020015b60608152602001906001900390816101d15790505b50905060005b82811015610286576102563085858481811061020a5761020a610c97565b905060200281019061021c9190610cc6565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c792505050565b82828151811061026857610268610c97565b6020026020010181905250808061027e90610d61565b9150506101ec565b5092915050565b7fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264090565b7fffffffff0000000000000000000000000000000000000000000000000000000080831690036103235760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016100e9565b7fffffffff00000000000000000000000000000000000000000000000000000000919091166000908152602092909252604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff8216900361040d5761040d82856108f3565b60005b835181101561060957600084828151811061042d5761042d610c97565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff1680156104fc576040517f345e190600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201527fffffffff00000000000000000000000000000000000000000000000000000000831660248201526044016100e9565b7fffffffff000000000000000000000000000000000000000000000000000000008216600081815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016179055836105f181610d99565b9450505050808061060190610d61565b915050610410565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed490565b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b73ffffffffffffffffffffffffffffffffffffffff821661070a578051156107065760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100e9565b5050565b60008151116107815760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100e9565b73ffffffffffffffffffffffffffffffffffffffff821630146107c0576107c082604051806060016040528060288152602001610de160289139610982565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516107e89190610dc4565b600060405180830381855af49150503d8060008114610823576040519150601f19603f3d011682016040523d82523d6000602084013e610828565b606091505b5091509150816108c157805115610853578060405162461bcd60e51b81526004016100e99190610c55565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f766572746564000000000000000000000000000000000000000000000000000060648201526084016100e9565b50505050565b60606108ec8383604051806060016040528060278152602001610e2d602791396109a3565b9392505050565b61091581604051806060016040528060248152602001610e0960249139610982565b60028201805473ffffffffffffffffffffffffffffffffffffffff90921660008181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b813b81816108c15760405162461bcd60e51b81526004016100e99190610c55565b606073ffffffffffffffffffffffffffffffffffffffff84163b610a2f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016100e9565b6000808573ffffffffffffffffffffffffffffffffffffffff1685604051610a579190610dc4565b600060405180830381855af49150503d8060008114610a92576040519150601f19603f3d011682016040523d82523d6000602084013e610a97565b606091505b5091509150610aa7828286610ab1565b9695505050505050565b60608315610ac05750816108ec565b825115610ad05782518084602001fd5b8160405162461bcd60e51b81526004016100e99190610c55565b60008060208385031215610afd57600080fd5b823567ffffffffffffffff80821115610b1557600080fd5b818501915085601f830112610b2957600080fd5b813581811115610b3857600080fd5b8660208260051b8501011115610b4d57600080fd5b60209290920196919550909350505050565b60005b83811015610b7a578181015183820152602001610b62565b838111156108c15750506000910152565b60008151808452610ba3816020860160208601610b5f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610c48577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610c36858351610b8b565b94509285019290850190600101610bfc565b5092979650505050505050565b6020815260006108ec6020830184610b8b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610cfb57600080fd5b83018035915067ffffffffffffffff821115610d1657600080fd5b602001915036819003821315610d2b57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9257610d92610d32565b5060010190565b60006bffffffffffffffffffffffff808316818103610dba57610dba610d32565b6001019392505050565b60008251610dd6818460208701610b5f565b919091019291505056fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122095688b5d52c5a564c3922027fa04a75176ed6ebdd77ae4fb13fc3ae95c566d5264736f6c634300080f00334c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
      "deployedBytecode": "0x60806040526004361061002d5760003560e01c8063ac9650d814610116578063fa28f5af1461014c57610034565b3661003457005b600080357fffffffff000000000000000000000000000000000000000000000000000000001681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6020819052604090912054819073ffffffffffffffffffffffffffffffffffffffff16806100f25760405162461bcd60e51b815260206004820152600860248201527f4241445f46554e4300000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e808015610111573d6000f35b3d6000fd5b34801561012257600080fd5b50610136610131366004610aea565b610198565b6040516101439190610bd5565b60405180910390f35b34801561015857600080fd5b50604080518082018252600381527f322e780000000000000000000000000000000000000000000000000000000000602082015290516101439190610c55565b60608167ffffffffffffffff8111156101b3576101b3610c68565b6040519080825280602002602001820160405280156101e657816020015b60608152602001906001900390816101d15790505b50905060005b82811015610286576102563085858481811061020a5761020a610c97565b905060200281019061021c9190610cc6565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c792505050565b82828151811061026857610268610c97565b6020026020010181905250808061027e90610d61565b9150506101ec565b5092915050565b7fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264090565b7fffffffff0000000000000000000000000000000000000000000000000000000080831690036103235760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016100e9565b7fffffffff00000000000000000000000000000000000000000000000000000000919091166000908152602092909252604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b73ffffffffffffffffffffffffffffffffffffffff821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff8216900361040d5761040d82856108f3565b60005b835181101561060957600084828151811061042d5761042d610c97565b6020908102919091018101517fffffffff00000000000000000000000000000000000000000000000000000000811660009081529186905260409091205490915073ffffffffffffffffffffffffffffffffffffffff1680156104fc576040517f345e190600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201527fffffffff00000000000000000000000000000000000000000000000000000000831660248201526044016100e9565b7fffffffff000000000000000000000000000000000000000000000000000000008216600081815260208781526040808320805473ffffffffffffffffffffffffffffffffffffffff908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016179055836105f181610d99565b9450505050808061060190610d61565b915050610410565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed490565b81547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff91909116179055565b73ffffffffffffffffffffffffffffffffffffffff821661070a578051156107065760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016100e9565b5050565b60008151116107815760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016100e9565b73ffffffffffffffffffffffffffffffffffffffff821630146107c0576107c082604051806060016040528060288152602001610de160289139610982565b6000808373ffffffffffffffffffffffffffffffffffffffff16836040516107e89190610dc4565b600060405180830381855af49150503d8060008114610823576040519150601f19603f3d011682016040523d82523d6000602084013e610828565b606091505b5091509150816108c157805115610853578060405162461bcd60e51b81526004016100e99190610c55565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f766572746564000000000000000000000000000000000000000000000000000060648201526084016100e9565b50505050565b60606108ec8383604051806060016040528060278152602001610e2d602791396109a3565b9392505050565b61091581604051806060016040528060248152602001610e0960249139610982565b60028201805473ffffffffffffffffffffffffffffffffffffffff90921660008181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b813b81816108c15760405162461bcd60e51b81526004016100e99190610c55565b606073ffffffffffffffffffffffffffffffffffffffff84163b610a2f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60448201527f6e7472616374000000000000000000000000000000000000000000000000000060648201526084016100e9565b6000808573ffffffffffffffffffffffffffffffffffffffff1685604051610a579190610dc4565b600060405180830381855af49150503d8060008114610a92576040519150601f19603f3d011682016040523d82523d6000602084013e610a97565b606091505b5091509150610aa7828286610ab1565b9695505050505050565b60608315610ac05750816108ec565b825115610ad05782518084602001fd5b8160405162461bcd60e51b81526004016100e99190610c55565b60008060208385031215610afd57600080fd5b823567ffffffffffffffff80821115610b1557600080fd5b818501915085601f830112610b2957600080fd5b813581811115610b3857600080fd5b8660208260051b8501011115610b4d57600080fd5b60209290920196919550909350505050565b60005b83811015610b7a578181015183820152602001610b62565b838111156108c15750506000910152565b60008151808452610ba3816020860160208601610b5f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610c48577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610c36858351610b8b565b94509285019290850190600101610bfc565b5092979650505050505050565b6020815260006108ec6020830184610b8b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610cfb57600080fd5b83018035915067ffffffffffffffff821115610d1657600080fd5b602001915036819003821315610d2b57600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610d9257610d92610d32565b5060010190565b60006bffffffffffffffffffffffff808316818103610dba57610dba610d32565b6001019392505050565b60008251610dd6818460208701610b5f565b919091019291505056fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122095688b5d52c5a564c3922027fa04a75176ed6ebdd77ae4fb13fc3ae95c566d5264736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../access/ownable/OwnableStorage.sol\";\nimport \"../access/ownable/IERC173.sol\";\nimport \"../introspection/ERC165.sol\";\nimport \"../diamond/IDiamondCut.sol\";\nimport \"../diamond/IDiamondLoupe.sol\";\n\nimport \"@openzeppelin/contracts/utils/Multicall.sol\";\n\nimport \"./DiamondStorage.sol\";\n\ncontract Diamond is Multicall {\n    using ERC165Storage for ERC165Storage.Layout;\n    using OwnableStorage for OwnableStorage.Layout;\n\n    struct Initialization {\n        address initContract;\n        bytes initData;\n    }\n\n    struct CoreFacets {\n        address diamondCutFacet;\n        address diamondLoupeFacet;\n        address erc165Facet;\n        address erc173Facet;\n    }\n\n    function versionIDiamond() external pure virtual returns (string memory) {\n        return \"2.x\";\n    }\n\n    constructor(\n        address owner,\n        CoreFacets memory _coreFacets,\n        IDiamondCut.FacetCut[] memory _facets,\n        Initialization[] memory _initializations\n    ) {\n        ERC165Storage.Layout storage erc165 = ERC165Storage.layout();\n\n        // register DiamondCut\n\n        bytes4[] memory selectorsDiamondCut = new bytes4[](1);\n        selectorsDiamondCut[0] = IDiamondCut.diamondCut.selector;\n\n        erc165.setSupportedInterface(type(IDiamondCut).interfaceId, true);\n\n        // register DiamondLoupe\n\n        bytes4[] memory selectorsDiamondLoupe = new bytes4[](4);\n        selectorsDiamondLoupe[0] = IDiamondLoupe.facets.selector;\n        selectorsDiamondLoupe[1] = IDiamondLoupe.facetFunctionSelectors.selector;\n        selectorsDiamondLoupe[2] = IDiamondLoupe.facetAddresses.selector;\n        selectorsDiamondLoupe[3] = IDiamondLoupe.facetAddress.selector;\n\n        erc165.setSupportedInterface(type(IDiamondLoupe).interfaceId, true);\n\n        // register ERC165 (supportsInterface)\n\n        bytes4[] memory selectorsERC165 = new bytes4[](1);\n        selectorsERC165[0] = IERC165.supportsInterface.selector;\n\n        erc165.setSupportedInterface(type(IERC165).interfaceId, true);\n\n        // register ERC173 (Ownable)\n\n        bytes4[] memory selectorsERC173 = new bytes4[](2);\n        selectorsERC173[0] = IERC173.owner.selector;\n        selectorsERC173[1] = IERC173.transferOwnership.selector;\n\n        erc165.setSupportedInterface(type(IERC173).interfaceId, true);\n\n        // execute the first ever diamond cut,\n        // we are calling the addFunctions directly to save ~ %50 gas\n\n        DiamondStorage.addFunctions(_coreFacets.diamondCutFacet, selectorsDiamondCut);\n        DiamondStorage.addFunctions(_coreFacets.diamondLoupeFacet, selectorsDiamondLoupe);\n        DiamondStorage.addFunctions(_coreFacets.erc165Facet, selectorsERC165);\n        DiamondStorage.addFunctions(_coreFacets.erc173Facet, selectorsERC173);\n\n        // set owner\n\n        OwnableStorage.layout().setOwner(owner);\n\n        // initialization\n\n        for (uint256 i = 0; i < _facets.length; i++) {\n            DiamondStorage.addFunctions(_facets[i].facetAddress, _facets[i].functionSelectors);\n        }\n\n        for (uint256 i = 0; i < _initializations.length; i++) {\n            DiamondStorage.initializeDiamondCut(_initializations[i].initContract, _initializations[i].initData);\n        }\n    }\n\n    // Find facet for function that is called and execute the\n    // function if a facet is found and return any value.\n    fallback() external payable {\n        DiamondStorage.Layout storage l;\n        bytes32 position = DiamondStorage.DIAMOND_STORAGE_POSITION;\n        // get diamond storage\n        assembly {\n            l.slot := position\n        }\n\n        // get facet from function selector\n        address facet = l.selectorToFacetAndPosition[msg.sig].facetAddress;\n        require(facet != address(0), \"BAD_FUNC\");\n\n        // Execute external function from facet using delegatecall and return any value.\n        assembly {\n            // copy function selector and any arguments\n            calldatacopy(0, 0, calldatasize())\n            // execute function call using the facet\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\n            // get any return value\n            returndatacopy(0, 0, returndatasize())\n            // return any return value or error back to the caller\n            switch result\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    receive() external payable {}\n}\n"
  },
  "flair-sdk:diamond/DiamondCut": {
    "fqn": "flair-sdk:diamond/DiamondCut",
    "version": "2.14.0",
    "address": {
      "5": "0x8EeE7196CD5a4643CdB49CeeaAA381c507620033",
      "goerli": "0x8EeE7196CD5a4643CdB49CeeaAA381c507620033"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "DiamondCut",
      "sourceName": "src/diamond/DiamondCut.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facet",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "name": "ErrDiamondFacetAlreadyExists",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "facet",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "selector",
              "type": "bytes4"
            }
          ],
          "name": "ErrDiamondFacetSameFunction",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false,
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "DiamondCut",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "diamondCut",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIDiamondCut",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611600806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631f931c1c1461003b57806373db1f5514610050575b600080fd5b61004e610049366004610f93565b610098565b005b604080518082018252600381527f322e7800000000000000000000000000000000000000000000000000000000006020820152905161008f91906110bb565b60405180910390f35b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101165760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61016061012385876111a0565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061016792505050565b5050505050565b60005b8351811015610343576000848281518110610187576101876112fc565b6020026020010151602001519050600060028111156101a8576101a861132b565b8160028111156101ba576101ba61132b565b03610208576102038583815181106101d4576101d46112fc565b6020026020010151600001518684815181106101f2576101f26112fc565b60200260200101516040015161038e565b610330565b600181600281111561021c5761021c61132b565b0361026557610203858381518110610236576102366112fc565b602002602001015160000151868481518110610254576102546112fc565b6020026020010151604001516105dc565b60028160028111156102795761027961132b565b036102c257610203858381518110610293576102936112fc565b6020026020010151600001518684815181106102b1576102b16112fc565b60200260200101516040015161083a565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560448201527f74416374696f6e00000000000000000000000000000000000000000000000000606482015260840161010d565b508061033b81611389565b91505061016a565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051610377939291906113a3565b60405180910390a161038982826108eb565b505050565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff82169003610407576104078285610b0f565b60005b8351811015610160576000848281518110610427576104276112fc565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081166000908152918690526040909120549091506001600160a01b031680156104dc576040517f345e19060000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201527fffffffff000000000000000000000000000000000000000000000000000000008316602482015260440161010d565b7fffffffff00000000000000000000000000000000000000000000000000000000821660008181526020878152604080832080546001600160a01b03908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016179055836105c4816114f1565b945050505080806105d490611389565b91505061040a565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff82169003610655576106558285610b0f565b60005b8351811015610160576000848281518110610675576106756112fc565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081166000908152918690526040909120549091506001600160a01b03908116908716810361072f576040517f5938caf10000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201527fffffffff000000000000000000000000000000000000000000000000000000008316602482015260440161010d565b61073a858284610b91565b7fffffffff00000000000000000000000000000000000000000000000000000000821660008181526020878152604080832080546001600160a01b03908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff00000000000000000000000000000000000000001617905583610822816114f1565b9450505050808061083290611389565b915050610658565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60005b82518110156108e557600083828151811061087b5761087b6112fc565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081166000908152918590526040909120549091506001600160a01b03166108d0848284610b91565b505080806108dd90611389565b91505061085e565b50505050565b6001600160a01b0382166109725780511561096e5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606482015260840161010d565b5050565b60008151116109e95760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606482015260840161010d565b6001600160a01b0382163014610a1b57610a1b8260405180606001604052806028815260200161157f60289139610f0d565b600080836001600160a01b031683604051610a36919061151c565b600060405180830381855af49150503d8060008114610a71576040519150601f19603f3d011682016040523d82523d6000602084013e610a76565b606091505b5091509150816108e557805115610aa1578060405162461bcd60e51b815260040161010d91906110bb565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f7665727465640000000000000000000000000000000000000000000000000000606482015260840161010d565b610b31816040518060600160405280602481526020016115a760249139610f0d565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b7fffffffff000000000000000000000000000000000000000000000000000000008116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169291610c0e91611538565b9050808214610d2e576001600160a01b03841660009081526001860160205260408120805483908110610c4357610c436112fc565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610c9457610c946112fc565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528690526040902080546001600160a01b0316740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021790555b6001600160a01b03841660009081526001860160205260409020805480610d5757610d5761154f565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff000000000000000000000000000000000000000000000000000000008516825286905260408120819055819003610160576002850154600090610dd290600190611538565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610e99576000876002018381548110610e1157610e116112fc565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610e4257610e426112fc565b600091825260208083209190910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610eac57610eac61154f565b60008281526020808220830160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816108e55760405162461bcd60e51b815260040161010d91906110bb565b80356001600160a01b0381168114610f4557600080fd5b919050565b60008083601f840112610f5c57600080fd5b50813567ffffffffffffffff811115610f7457600080fd5b602083019150836020828501011115610f8c57600080fd5b9250929050565b600080600080600060608688031215610fab57600080fd5b853567ffffffffffffffff80821115610fc357600080fd5b818801915088601f830112610fd757600080fd5b813581811115610fe657600080fd5b8960208260051b8501011115610ffb57600080fd5b6020830197508096505061101160208901610f2e565b9450604088013591508082111561102757600080fd5b5061103488828901610f4a565b969995985093965092949392505050565b60005b83811015611060578181015183820152602001611048565b838111156108e55750506000910152565b60008151808452611089816020860160208601611045565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006110ce6020830184611071565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611127576111276110d5565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611174576111746110d5565b604052919050565b600067ffffffffffffffff821115611196576111966110d5565b5060051b60200190565b60006111b36111ae8461117c565b61112d565b83815260208082019190600586811b8601368111156111d157600080fd5b865b818110156112ef57803567ffffffffffffffff808211156111f45760008081fd5b818a0191506060823603121561120a5760008081fd5b611212611104565b61121b83610f2e565b8152868301356003811061122f5760008081fd5b81880152604083810135838111156112475760008081fd5b939093019236601f85011261125e57600092508283fd5b8335925061126e6111ae8461117c565b83815292871b8401880192888101903685111561128b5760008081fd5b948901945b848610156112d85785357fffffffff00000000000000000000000000000000000000000000000000000000811681146112c95760008081fd5b82529489019490890190611290565b9183019190915250885250509483019483016111d3565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019820361139c5761139c61135a565b5060010190565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156114c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a850301865281518885016001600160a01b0382511686528482015160038110611448577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156114ac5783517fffffffff0000000000000000000000000000000000000000000000000000000016825292860192600192909201919086019061146a565b509785019795505050908201906001016113cc565b50506001600160a01b038a169088015286810360408801526114e38189611071565b9a9950505050505050505050565b60006bffffffffffffffffffffffff8083168181036115125761151261135a565b6001019392505050565b6000825161152e818460208701611045565b9190910192915050565b60008282101561154a5761154a61135a565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212208c2ac9879768884960eafa42d100d905fe8c9a328b510f49b0400dd892ed7e8664736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631f931c1c1461003b57806373db1f5514610050575b600080fd5b61004e610049366004610f93565b610098565b005b604080518082018252600381527f322e7800000000000000000000000000000000000000000000000000000000006020820152905161008f91906110bb565b60405180910390f35b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101165760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61016061012385876111a0565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061016792505050565b5050505050565b60005b8351811015610343576000848281518110610187576101876112fc565b6020026020010151602001519050600060028111156101a8576101a861132b565b8160028111156101ba576101ba61132b565b03610208576102038583815181106101d4576101d46112fc565b6020026020010151600001518684815181106101f2576101f26112fc565b60200260200101516040015161038e565b610330565b600181600281111561021c5761021c61132b565b0361026557610203858381518110610236576102366112fc565b602002602001015160000151868481518110610254576102546112fc565b6020026020010151604001516105dc565b60028160028111156102795761027961132b565b036102c257610203858381518110610293576102936112fc565b6020026020010151600001518684815181106102b1576102b16112fc565b60200260200101516040015161083a565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560448201527f74416374696f6e00000000000000000000000000000000000000000000000000606482015260840161010d565b508061033b81611389565b91505061016a565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673838383604051610377939291906113a3565b60405180910390a161038982826108eb565b505050565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff82169003610407576104078285610b0f565b60005b8351811015610160576000848281518110610427576104276112fc565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081166000908152918690526040909120549091506001600160a01b031680156104dc576040517f345e19060000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201527fffffffff000000000000000000000000000000000000000000000000000000008316602482015260440161010d565b7fffffffff00000000000000000000000000000000000000000000000000000000821660008181526020878152604080832080546001600160a01b03908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff000000000000000000000000000000000000000016179055836105c4816114f1565b945050505080806105d490611389565b91505061040a565b6001600160a01b03821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d60205260408120547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c916bffffffffffffffffffffffff82169003610655576106558285610b0f565b60005b8351811015610160576000848281518110610675576106756112fc565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081166000908152918690526040909120549091506001600160a01b03908116908716810361072f576040517f5938caf10000000000000000000000000000000000000000000000000000000081526001600160a01b03821660048201527fffffffff000000000000000000000000000000000000000000000000000000008316602482015260440161010d565b61073a858284610b91565b7fffffffff00000000000000000000000000000000000000000000000000000000821660008181526020878152604080832080546001600160a01b03908116740100000000000000000000000000000000000000006bffffffffffffffffffffffff8c16021782558c168085526001808c0185529285208054938401815585528385206008840401805463ffffffff60079095166004026101000a948502191660e08a901c94909402939093179092559390925287905281547fffffffffffffffffffffffff00000000000000000000000000000000000000001617905583610822816114f1565b9450505050808061083290611389565b915050610658565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60005b82518110156108e557600083828151811061087b5761087b6112fc565b6020908102919091018101517fffffffff0000000000000000000000000000000000000000000000000000000081166000908152918590526040909120549091506001600160a01b03166108d0848284610b91565b505080806108dd90611389565b91505061085e565b50505050565b6001600160a01b0382166109725780511561096e5760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d70747900000000606482015260840161010d565b5050565b60008151116109e95760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f742061646472657373283029000000606482015260840161010d565b6001600160a01b0382163014610a1b57610a1b8260405180606001604052806028815260200161157f60289139610f0d565b600080836001600160a01b031683604051610a36919061151c565b600060405180830381855af49150503d8060008114610a71576040519150601f19603f3d011682016040523d82523d6000602084013e610a76565b606091505b5091509150816108e557805115610aa1578060405162461bcd60e51b815260040161010d91906110bb565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e20726560448201527f7665727465640000000000000000000000000000000000000000000000000000606482015260840161010d565b610b31816040518060600160405280602481526020016115a760249139610f0d565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169091179055565b7fffffffff000000000000000000000000000000000000000000000000000000008116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054740100000000000000000000000000000000000000009091046bffffffffffffffffffffffff169291610c0e91611538565b9050808214610d2e576001600160a01b03841660009081526001860160205260408120805483908110610c4357610c436112fc565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610c9457610c946112fc565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790557fffffffff000000000000000000000000000000000000000000000000000000009290921682528690526040902080546001600160a01b0316740100000000000000000000000000000000000000006bffffffffffffffffffffffff8516021790555b6001600160a01b03841660009081526001860160205260409020805480610d5757610d5761154f565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092557fffffffff000000000000000000000000000000000000000000000000000000008516825286905260408120819055819003610160576002850154600090610dd290600190611538565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610e99576000876002018381548110610e1157610e116112fc565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610e4257610e426112fc565b600091825260208083209190910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610eac57610eac61154f565b60008281526020808220830160001990810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b813b81816108e55760405162461bcd60e51b815260040161010d91906110bb565b80356001600160a01b0381168114610f4557600080fd5b919050565b60008083601f840112610f5c57600080fd5b50813567ffffffffffffffff811115610f7457600080fd5b602083019150836020828501011115610f8c57600080fd5b9250929050565b600080600080600060608688031215610fab57600080fd5b853567ffffffffffffffff80821115610fc357600080fd5b818801915088601f830112610fd757600080fd5b813581811115610fe657600080fd5b8960208260051b8501011115610ffb57600080fd5b6020830197508096505061101160208901610f2e565b9450604088013591508082111561102757600080fd5b5061103488828901610f4a565b969995985093965092949392505050565b60005b83811015611060578181015183820152602001611048565b838111156108e55750506000910152565b60008151808452611089816020860160208601611045565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006110ce6020830184611071565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715611127576111276110d5565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611174576111746110d5565b604052919050565b600067ffffffffffffffff821115611196576111966110d5565b5060051b60200190565b60006111b36111ae8461117c565b61112d565b83815260208082019190600586811b8601368111156111d157600080fd5b865b818110156112ef57803567ffffffffffffffff808211156111f45760008081fd5b818a0191506060823603121561120a5760008081fd5b611212611104565b61121b83610f2e565b8152868301356003811061122f5760008081fd5b81880152604083810135838111156112475760008081fd5b939093019236601f85011261125e57600092508283fd5b8335925061126e6111ae8461117c565b83815292871b8401880192888101903685111561128b5760008081fd5b948901945b848610156112d85785357fffffffff00000000000000000000000000000000000000000000000000000000811681146112c95760008081fd5b82529489019490890190611290565b9183019190915250885250509483019483016111d3565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000600019820361139c5761139c61135a565b5060010190565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b848110156114c1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808a850301865281518885016001600160a01b0382511686528482015160038110611448577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b808310156114ac5783517fffffffff0000000000000000000000000000000000000000000000000000000016825292860192600192909201919086019061146a565b509785019795505050908201906001016113cc565b50506001600160a01b038a169088015286810360408801526114e38189611071565b9a9950505050505050505050565b60006bffffffffffffffffffffffff8083168181036115125761151261135a565b6001019392505050565b6000825161152e818460208701611045565b9190910192915050565b60008282101561154a5761154a61135a565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212208c2ac9879768884960eafa42d100d905fe8c9a328b510f49b0400dd892ed7e8664736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\nimport \"./IDiamondCut.sol\";\nimport \"./DiamondStorage.sol\";\nimport \"../access/ownable/OwnableInternal.sol\";\n\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\n// The loupe functions are required by the EIP2535 Diamonds standard\n\n/**\n * @title Diamond - Cut\n * @notice Standard EIP-2535 cut functionality to add, replace and remove facets from a diamond.\n *\n * @custom:type eip-2535-facet\n * @custom:category Diamonds\n * @custom:provides-interfaces IDiamondCut\n */\ncontract DiamondCut is IDiamondCut, OwnableInternal {\n    function versionIDiamondCut() external pure virtual returns (string memory) {\n        return \"2.x\";\n    }\n\n    /// @notice Add/replace/remove any number of functions and optionally execute\n    ///         a function with delegatecall\n    /// @param _diamondCut Contains the facet addresses and function selectors\n    /// @param _init The address of the contract or facet to execute _calldata\n    /// @param _calldata A function call, including function selector and arguments\n    ///                  _calldata is executed with delegatecall on _init\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external override onlyOwner {\n        DiamondStorage.diamondCut(_diamondCut, _init, _calldata);\n    }\n}\n"
  },
  "flair-sdk:diamond/DiamondLoupe": {
    "fqn": "flair-sdk:diamond/DiamondLoupe",
    "version": "2.14.0",
    "address": {
      "5": "0x3dE9781e5E984F45819E0F4891d1EA1db2dF7917",
      "goerli": "0x3dE9781e5E984F45819E0F4891d1EA1db2dF7917"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "DiamondLoupe",
      "sourceName": "src/diamond/DiamondLoupe.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "name": "facetAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "facetAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facetAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "facetAddresses_",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facet",
              "type": "address"
            }
          ],
          "name": "facetFunctionSelectors",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "facetFunctionSelectors_",
              "type": "bytes4[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facets",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondLoupe.Facet[]",
              "name": "facets_",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIDiamondLoupe",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061088f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063adfca15e11610050578063adfca15e1461009f578063cdffacc6146100bf578063ce124def1461015b57600080fd5b806352ef6b2c1461006c5780637a0ed6271461008a575b600080fd5b61007461019a565b6040516100819190610538565b60405180910390f35b61009261022c565b60405161008191906105ef565b6100b26100ad366004610697565b610438565b60405161008191906106d4565b6101366100cd3660046106e7565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610081565b604080518082018252600381527f322e780000000000000000000000000000000000000000000000000000000000602082015290516100819190610729565b606060007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6002810180546040805160208084028201810190925282815293945083018282801561022157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101f6575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff81111561028c5761028c61079c565b6040519080825280602002602001820160405280156102d257816020015b6040805180820190915260008152606060208201528152602001906001900390816102aa5790505b50925060005b818110156104325760008360020182815481106102f7576102f76107cb565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080858381518110610337576103376107cb565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff92831690529082166000908152600186018252604090819020805482518185028101850190935280835291929091908301828280156103f857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116103a55790505b505050505085838151811061040f5761040f6107cb565b60200260200101516020018190525050808061042a906107fa565b9150506102d8565b50505090565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092919083018282801561052b57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104d85790505b5050505050915050919050565b6020808252825182820181905260009190848201906040850190845b8181101561058657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610554565b50909695505050505050565b600081518084526020808501945080840160005b838110156105e45781517fffffffff0000000000000000000000000000000000000000000000000000000016875295820195908201906001016105a6565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610689578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff16845287015187840187905261067687850182610592565b9588019593505090860190600101610616565b509098975050505050505050565b6000602082840312156106a957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106cd57600080fd5b9392505050565b6020815260006106cd6020830184610592565b6000602082840312156106f957600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146106cd57600080fd5b600060208083528351808285015260005b818110156107565785810183015185820160400152820161073a565b81811115610768576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610852577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220fc377ce35e5167528777b0c04b472409c2b087a31b08bc523dd5ae7d823f222064736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063adfca15e11610050578063adfca15e1461009f578063cdffacc6146100bf578063ce124def1461015b57600080fd5b806352ef6b2c1461006c5780637a0ed6271461008a575b600080fd5b61007461019a565b6040516100819190610538565b60405180910390f35b61009261022c565b60405161008191906105ef565b6100b26100ad366004610697565b610438565b60405161008191906106d4565b6101366100cd3660046106e7565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610081565b604080518082018252600381527f322e780000000000000000000000000000000000000000000000000000000000602082015290516100819190610729565b606060007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c6002810180546040805160208084028201810190925282815293945083018282801561022157602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff1681526001909101906020018083116101f6575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff81111561028c5761028c61079c565b6040519080825280602002602001820160405280156102d257816020015b6040805180820190915260008152606060208201528152602001906001900390816102aa5790505b50925060005b818110156104325760008360020182815481106102f7576102f76107cb565b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080858381518110610337576103376107cb565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff92831690529082166000908152600186018252604090819020805482518185028101850190935280835291929091908301828280156103f857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116103a55790505b505050505085838151811061040f5761040f6107cb565b60200260200101516020018190525050808061042a906107fa565b9150506102d8565b50505090565b73ffffffffffffffffffffffffffffffffffffffff811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092919083018282801561052b57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104d85790505b5050505050915050919050565b6020808252825182820181905260009190848201906040850190845b8181101561058657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610554565b50909695505050505050565b600081518084526020808501945080840160005b838110156105e45781517fffffffff0000000000000000000000000000000000000000000000000000000016875295820195908201906001016105a6565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610689578883037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00185528151805173ffffffffffffffffffffffffffffffffffffffff16845287015187840187905261067687850182610592565b9588019593505090860190600101610616565b509098975050505050505050565b6000602082840312156106a957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106cd57600080fd5b9392505050565b6020815260006106cd6020830184610592565b6000602082840312156106f957600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146106cd57600080fd5b600060208083528351808285015260005b818110156107565785810183015185820160400152820161073a565b81811115610768576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610852577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220fc377ce35e5167528777b0c04b472409c2b087a31b08bc523dd5ae7d823f222064736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport \"./DiamondStorage.sol\";\nimport \"./IDiamondLoupe.sol\";\n\n// The functions in DiamondLoupe MUST be added to a diamond.\n// The EIP-2535 Diamond standard requires these functions.\n\n/**\n * @title Diamond - Loupe\n * @notice Standard EIP-2535 loupe functions to allow inspecting a diamond for explorers.\n *\n * @custom:type eip-2535-facet\n * @custom:category Diamonds\n * @custom:provides-interfaces IDiamondLoupe\n */\ncontract DiamondLoupe is IDiamondLoupe {\n    function versionIDiamondLoupe() external pure virtual returns (string memory) {\n        return \"2.x\";\n    }\n\n    /// @notice Gets all facets and their selectors.\n    /// @return facets_ Facet\n    function facets() external view override returns (Facet[] memory facets_) {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        uint256 numFacets = l.facetAddresses.length;\n        facets_ = new Facet[](numFacets);\n        for (uint256 i; i < numFacets; i++) {\n            address facetAddress_ = l.facetAddresses[i];\n            facets_[i].facetAddress = facetAddress_;\n            facets_[i].functionSelectors = l.facetFunctionSelectors[facetAddress_].functionSelectors;\n        }\n    }\n\n    /// @notice Gets all the function selectors provided by a facet.\n    /// @param _facet The facet address.\n    /// @return facetFunctionSelectors_\n    function facetFunctionSelectors(address _facet)\n        external\n        view\n        override\n        returns (bytes4[] memory facetFunctionSelectors_)\n    {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        facetFunctionSelectors_ = l.facetFunctionSelectors[_facet].functionSelectors;\n    }\n\n    /// @notice Get all the facet addresses used by a diamond.\n    /// @return facetAddresses_\n    function facetAddresses() external view override returns (address[] memory facetAddresses_) {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        facetAddresses_ = l.facetAddresses;\n    }\n\n    /// @notice Gets the facet that supports the given selector.\n    /// @dev If facet is not found return address(0).\n    /// @param _functionSelector The function selector.\n    /// @return facetAddress_ The facet address.\n    function facetAddress(bytes4 _functionSelector) external view override returns (address facetAddress_) {\n        DiamondStorage.Layout storage l = DiamondStorage.layout();\n        facetAddress_ = l.selectorToFacetAndPosition[_functionSelector].facetAddress;\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/ERC1155": {
    "fqn": "flair-sdk:token/ERC1155/ERC1155",
    "version": "2.14.0",
    "address": {
      "5": "0x168D223704a73a1d36EB9D7567198fabCe864E83",
      "goerli": "0x168D223704a73a1d36EB9D7567198fabCe864E83"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155",
      "sourceName": "src/token/ERC1155/ERC1155.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ticketTokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50613467806100206000396000f3fe608060405234801561001057600080fd5b50600436106101765760003560e01c8063869f7594116100d8578063bd85b0391161008c578063f242432a11610066578063f242432a1461034b578063f5298aca1461035e578063f7794bae1461037157600080fd5b8063bd85b039146102ca578063bf7bab73146102dd578063e985e9c5146102f057600080fd5b8063a22cb465116100bd578063a22cb46514610291578063a91a988a146102a4578063b164884b146102b757600080fd5b8063869f75941461026b578063983da1561461027e57600080fd5b806348f2f5361161012f5780634f558e79116101145780634f558e79146102225780636708a990146102455780636b20c4541461025857600080fd5b806348f2f536146101ef5780634e1273f41461020257600080fd5b80630ad2bbac116101605780630ad2bbac146101b65780632eb2c2d6146101c95780633f3b797e146101dc57600080fd5b8062fdd58e1461017b5780630a13c503146101a1575b600080fd5b61018e6101893660046128a2565b610384565b6040519081526020015b60405180910390f35b6101b46101af366004612918565b610397565b005b6101b46101c43660046129dc565b6103d1565b6101b46101d7366004612b4e565b610405565b6101b46101ea366004612cbf565b6104ee565b6101b46101fd366004612d47565b6105e6565b610215610210366004612d7a565b610616565b6040516101989190612e19565b610235610230366004612e2c565b61083d565b6040519015158152602001610198565b6101b4610253366004612d47565b610874565b6101b46102663660046129dc565b61089f565b61018e610279366004612e2c565b6109b2565b6101b461028c366004612d47565b6109e5565b6101b461029f366004612e56565b610a10565b6102156102b2366004612e8d565b610b3a565b6101b46102c5366004612f22565b610c21565b61018e6102d8366004612e2c565b610c4e565b61018e6102eb3660046128a2565b610c81565b6102356102fe366004612f79565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101b4610359366004612fac565b610cc9565b6101b461036c366004612d47565b610daf565b6101b461037f366004612cbf565b610ec2565b60006103908383610fb4565b9392505050565b3033146103b75760405163fd570b5160e01b815260040160405180910390fd5b6103c78888888888888888611079565b5050505050505050565b3033146103f15760405163fd570b5160e01b815260040160405180910390fd5b6103fe85858585856113be565b5050505050565b336001600160a01b03861681148061046157506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104d85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104e68187878787876116ef565b505050505050565b30331461050e5760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610520575080518351145b61056c5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104cf565b60005b83518110156105e0576105ce84828151811061058d5761058d613024565b60200260200101518483815181106105a7576105a7613024565b60200260200101518484815181106105c1576105c1613024565b602002602001015161170b565b806105d881613082565b91505061056f565b50505050565b3033146106065760405163fd570b5160e01b815260040160405180910390fd5b6106118383836117c8565b505050565b6060815183511461068f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104cf565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156106ce576106ce612a5d565b6040519080825280602002602001820160405280156106f7578160200160208202803683370190505b50905060005b85518110156108345760006001600160a01b031686828151811061072357610723613024565b60200260200101516001600160a01b0316036107a75760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104cf565b8260008683815181106107bc576107bc613024565b6020026020010151815260200190815260200160002060008783815181106107e6576107e6613024565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061082157610821613024565b60209081029190910101526001016106fd565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b3033146108945760405163fd570b5160e01b815260040160405180910390fd5b61061183838361170b565b6001600160a01b03851633148061094057503063e985e9c586336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094091906130ba565b6103f15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104cf565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604081205461086e565b303314610a055760405163fd570b5160e01b815260040160405180910390fd5b61061183838361198e565b336001600160a01b0383168103610a8f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610b5757610b57612a5d565b604051908082528060200260200182016040528015610b80578160200160208202803683370190505b50905060005b8381101561083457610bf286868684818110610ba457610ba4613024565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610c0457610c04613024565b602090810291909101015280610c1981613082565b915050610b86565b303314610c415760405163fd570b5160e01b815260040160405180910390fd5b6103fe8585858585611a55565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205461086e565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320848452909152812054610390565b336001600160a01b038716811480610d2557506001600160a01b0380881660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610d975760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104cf565b610da681888888888888611bd1565b50505050505050565b6001600160a01b038316331480610e5057503063e985e9c584336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610e2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5091906130ba565b6106065760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104cf565b303314610ee25760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610ef4575080518351145b610f405760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104cf565b60005b83518110156105e057610fa2848281518110610f6157610f61613024565b6020026020010151848381518110610f7b57610f7b613024565b6020026020010151848481518110610f9557610f95613024565b602002602001015161198e565b80610fac81613082565b915050610f43565b60006001600160a01b0383166110325760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104cf565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b8483146110ee5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104cf565b8683146111635760405162461bcd60e51b815260206004820152602d60248201527f455243313135353a206163636f756e747320616e6420616d6f756e7473206c6560448201527f6e677468206d69736d617463680000000000000000000000000000000000000060648201526084016104cf565b337ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b878110156113b1576112518360008d8d858181106111a8576111a8613024565b90506020020160208101906111bd91906130d7565b6111de8d8d878181106111d2576111d2613024565b90506020020135611c24565b6111f38c8c888181106111d2576111d2613024565b8a8a8881811061120557611205613024565b905060200281019061121791906130f2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6f92505050565b86868281811061126357611263613024565b905060200201358260008b8b8581811061127f5761127f613024565b90506020020135815260200190815260200160002060008d8d858181106112a8576112a8613024565b90506020020160208101906112bd91906130d7565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112ec9190613157565b909155508b90508a8281811061130457611304613024565b905060200201602081019061131991906130d7565b6001600160a01b031660006001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c8c8681811061136a5761136a613024565b905060200201358b8b8781811061138357611383613024565b905060200201356040516113a1929190918252602082015260400190565b60405180910390a4600101611188565b5050505050505050505050565b6001600160a01b03851661143a5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104cf565b8281146114af5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104cf565b60003390506115338187600088888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092018290525060408051602081019091529081529250611c6f915050565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8581101561168957600087878381811061157357611573613024565b90506020020135905085858381811061158e5761158e613024565b9050602002013583600083815260200190815260200160002060008b6001600160a01b03166001600160a01b0316815260200190815260200160002054101561163e5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104cf565b85858381811061165057611650613024565b6000938452602086815260408086206001600160a01b038f16875282529094208054949091029290920135909203905550600101611557565b5060006001600160a01b0316876001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040516116de94939291906131be565b60405180910390a450505050505050565b6116fd868686868686611c7d565b6104e6868686868686611f26565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482111561179f5760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104cf565b600083815260208290526040812080548492906117bd9084906131f0565b909155505050505050565b6001600160a01b0383166118445760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104cf565b336118738185600061185587611c24565b61185e87611c24565b60405180602001604052806000815250611c6f565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b0388168452918290529091205483111561192b5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482906119df8686610fb4565b6119e991906131f0565b1015611a375760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104cf565b600083815260208290526040812080548492906117bd908490613157565b336001600160a01b038616611ad25760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104cf565b611b2781600088611ae289611c24565b611aeb89611c24565b88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6f92505050565b60008581527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038a16845290915281208054869290611b78908490613157565b909155505060408051868152602081018690526001600160a01b0380891692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050505050565b611be08787878787878761212a565b610da6878787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061234e92505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611c5e57611c5e613024565b602090810291909101015292915050565b6104e68686868686866124a9565b6001600160a01b038416611cf95760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104cf565b8151835114611d705760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104cf565b611d7e868686868686611c6f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015611ed6576000858281518110611dbf57611dbf613024565b602002602001015190506000858381518110611ddd57611ddd613024565b602090810291909101810151600084815286835260408082206001600160a01b038e168352909352919091205490915081811015611e835760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104cf565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290611ec9908490613157565b90915550611da292505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516116de929190613207565b6001600160a01b0384163b156104e6576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190611f839089908990889088908890600401613282565b6020604051808303816000875af1925050508015611fbe575060408051601f3d908101601f19168201909252611fbb918101906132e0565b60015b61207357611fca613322565b806308c379a0036120035750611fde61333e565b80611fe95750612005565b8060405162461bcd60e51b81526004016104cf91906133e6565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104cf565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610da65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b0385166121a65760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104cf565b6121fa8787876121b588611c24565b6121be88611c24565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6f92505050565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038b16855290915290912054848110156122b35760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104cf565b6000868152602083815260408083206001600160a01b038c811685529252808320938890039093558816815290812080548692906122f2908490613157565b909155505060408051868152602081018690526001600160a01b03808916928a821692918c16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050565b6001600160a01b0384163b156104e6576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906123ab90899089908890889088906004016133f9565b6020604051808303816000875af19250505080156123e6575060408051601f3d908101601f191682019092526123e3918101906132e0565b60015b6123f257611fca613322565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610da65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b038516156125e55760005b83518110156125e3578281815181106124d6576124d6613024565b60200260200101516125057f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782090565b6000016000886001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061253f5761253f613024565b60200260200101518152602001908152602001600020546125798887858151811061256c5761256c613024565b6020026020010151610fb4565b61258391906131f0565b10156125d15760405162461bcd60e51b815260206004820152600660248201527f4c4f434b4544000000000000000000000000000000000000000000000000000060448201526064016104cf565b806125db81613082565b9150506124bb565b505b6104e68686868686866001600160a01b03851661275f577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea57f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b855181101561275b5784818151811061265c5761265c613024565b602002602001015183600088848151811061267957612679613024565b60200260200101518152602001908152602001600020600082825461269e9190613157565b925050819055508160008783815181106126ba576126ba613024565b60200260200101518152602001908152602001600020548360008884815181106126e6576126e6613024565b6020026020010151815260200190815260200160002054111561274b5760405162461bcd60e51b815260206004820152601160248201527f535550504c595f4558434545445f4d415800000000000000000000000000000060448201526064016104cf565b61275481613082565b9050612641565b5050505b6001600160a01b0384166104e6577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea560005b84518110156103c75760008582815181106127ae576127ae613024565b6020026020010151905060008583815181106127cc576127cc613024565b602002602001015190506000846000848152602001908152602001600020549050818110156128635760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016104cf565b6000928352602085905260409092209103905561287f81613082565b9050612791565b80356001600160a01b038116811461289d57600080fd5b919050565b600080604083850312156128b557600080fd5b6128be83612886565b946020939093013593505050565b60008083601f8401126128de57600080fd5b50813567ffffffffffffffff8111156128f657600080fd5b6020830191508360208260051b850101111561291157600080fd5b9250929050565b6000806000806000806000806080898b03121561293457600080fd5b883567ffffffffffffffff8082111561294c57600080fd5b6129588c838d016128cc565b909a50985060208b013591508082111561297157600080fd5b61297d8c838d016128cc565b909850965060408b013591508082111561299657600080fd5b6129a28c838d016128cc565b909650945060608b01359150808211156129bb57600080fd5b506129c88b828c016128cc565b999c989b5096995094979396929594505050565b6000806000806000606086880312156129f457600080fd5b6129fd86612886565b9450602086013567ffffffffffffffff80821115612a1a57600080fd5b612a2689838a016128cc565b90965094506040880135915080821115612a3f57600080fd5b50612a4c888289016128cc565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715612ab257612ab2612a5d565b6040525050565b600067ffffffffffffffff821115612ad357612ad3612a5d565b5060051b60200190565b600082601f830112612aee57600080fd5b81356020612afb82612ab9565b604051612b088282612a8c565b83815260059390931b8501820192828101915086841115612b2857600080fd5b8286015b84811015612b435780358352918301918301612b2c565b509695505050505050565b600080600080600060a08688031215612b6657600080fd5b612b6f86612886565b94506020612b7e818801612886565b9450604087013567ffffffffffffffff80821115612b9b57600080fd5b612ba78a838b01612add565b95506060890135915080821115612bbd57600080fd5b612bc98a838b01612add565b94506080890135915080821115612bdf57600080fd5b818901915089601f830112612bf357600080fd5b813581811115612c0557612c05612a5d565b6040519150612c1d84601f19601f8401160183612a8c565b8082528a84828501011115612c3157600080fd5b80848401858401376000848284010152508093505050509295509295909350565b600082601f830112612c6357600080fd5b81356020612c7082612ab9565b604051612c7d8282612a8c565b83815260059390931b8501820192828101915086841115612c9d57600080fd5b8286015b84811015612b4357612cb281612886565b8352918301918301612ca1565b600080600060608486031215612cd457600080fd5b833567ffffffffffffffff80821115612cec57600080fd5b612cf887838801612c52565b94506020860135915080821115612d0e57600080fd5b612d1a87838801612add565b93506040860135915080821115612d3057600080fd5b50612d3d86828701612add565b9150509250925092565b600080600060608486031215612d5c57600080fd5b612d6584612886565b95602085013595506040909401359392505050565b60008060408385031215612d8d57600080fd5b823567ffffffffffffffff80821115612da557600080fd5b612db186838701612c52565b93506020850135915080821115612dc757600080fd5b50612dd485828601612add565b9150509250929050565b600081518084526020808501945080840160005b83811015612e0e57815187529582019590820190600101612df2565b509495945050505050565b6020815260006103906020830184612dde565b600060208284031215612e3e57600080fd5b5035919050565b8015158114612e5357600080fd5b50565b60008060408385031215612e6957600080fd5b612e7283612886565b91506020830135612e8281612e45565b809150509250929050565b600080600060408486031215612ea257600080fd5b612eab84612886565b9250602084013567ffffffffffffffff811115612ec757600080fd5b612ed3868287016128cc565b9497909650939450505050565b60008083601f840112612ef257600080fd5b50813567ffffffffffffffff811115612f0a57600080fd5b60208301915083602082850101111561291157600080fd5b600080600080600060808688031215612f3a57600080fd5b612f4386612886565b94506020860135935060408601359250606086013567ffffffffffffffff811115612f6d57600080fd5b612a4c88828901612ee0565b60008060408385031215612f8c57600080fd5b612f9583612886565b9150612fa360208401612886565b90509250929050565b60008060008060008060a08789031215612fc557600080fd5b612fce87612886565b9550612fdc60208801612886565b94506040870135935060608701359250608087013567ffffffffffffffff81111561300657600080fd5b61301289828a01612ee0565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036130b3576130b3613053565b5060010190565b6000602082840312156130cc57600080fd5b815161039081612e45565b6000602082840312156130e957600080fd5b61039082612886565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261312757600080fd5b83018035915067ffffffffffffffff82111561314257600080fd5b60200191503681900382131561291157600080fd5b6000821982111561316a5761316a613053565b500190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156131a157600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006131d260408301868861316f565b82810360208401526131e581858761316f565b979650505050505050565b60008282101561320257613202613053565b500390565b60408152600061321a6040830185612dde565b828103602084015261322c8185612dde565b95945050505050565b6000815180845260005b8181101561325b5760208185018101518683018201520161323f565b8181111561326d576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526132ae60a0830186612dde565b82810360608401526132c08186612dde565b905082810360808401526132d48185613235565b98975050505050505050565b6000602082840312156132f257600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461039057600080fd5b600060033d111561333b5760046000803e5060005160e01c5b90565b600060443d101561334c5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561339a57505050505090565b82850191508151818111156133b25750505050505090565b843d87010160208285010111156133cc5750505050505090565b6133db60208286010187612a8c565b509095945050505050565b6020815260006103906020830184613235565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526131e560a083018461323556fea26469706673582212202e56028c8e7fdbeac035921af9db83ce5f543dbf3846bd26bd11d4bce7421be664736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101765760003560e01c8063869f7594116100d8578063bd85b0391161008c578063f242432a11610066578063f242432a1461034b578063f5298aca1461035e578063f7794bae1461037157600080fd5b8063bd85b039146102ca578063bf7bab73146102dd578063e985e9c5146102f057600080fd5b8063a22cb465116100bd578063a22cb46514610291578063a91a988a146102a4578063b164884b146102b757600080fd5b8063869f75941461026b578063983da1561461027e57600080fd5b806348f2f5361161012f5780634f558e79116101145780634f558e79146102225780636708a990146102455780636b20c4541461025857600080fd5b806348f2f536146101ef5780634e1273f41461020257600080fd5b80630ad2bbac116101605780630ad2bbac146101b65780632eb2c2d6146101c95780633f3b797e146101dc57600080fd5b8062fdd58e1461017b5780630a13c503146101a1575b600080fd5b61018e6101893660046128a2565b610384565b6040519081526020015b60405180910390f35b6101b46101af366004612918565b610397565b005b6101b46101c43660046129dc565b6103d1565b6101b46101d7366004612b4e565b610405565b6101b46101ea366004612cbf565b6104ee565b6101b46101fd366004612d47565b6105e6565b610215610210366004612d7a565b610616565b6040516101989190612e19565b610235610230366004612e2c565b61083d565b6040519015158152602001610198565b6101b4610253366004612d47565b610874565b6101b46102663660046129dc565b61089f565b61018e610279366004612e2c565b6109b2565b6101b461028c366004612d47565b6109e5565b6101b461029f366004612e56565b610a10565b6102156102b2366004612e8d565b610b3a565b6101b46102c5366004612f22565b610c21565b61018e6102d8366004612e2c565b610c4e565b61018e6102eb3660046128a2565b610c81565b6102356102fe366004612f79565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101b4610359366004612fac565b610cc9565b6101b461036c366004612d47565b610daf565b6101b461037f366004612cbf565b610ec2565b60006103908383610fb4565b9392505050565b3033146103b75760405163fd570b5160e01b815260040160405180910390fd5b6103c78888888888888888611079565b5050505050505050565b3033146103f15760405163fd570b5160e01b815260040160405180910390fd5b6103fe85858585856113be565b5050505050565b336001600160a01b03861681148061046157506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104d85760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104e68187878787876116ef565b505050505050565b30331461050e5760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610520575080518351145b61056c5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104cf565b60005b83518110156105e0576105ce84828151811061058d5761058d613024565b60200260200101518483815181106105a7576105a7613024565b60200260200101518484815181106105c1576105c1613024565b602002602001015161170b565b806105d881613082565b91505061056f565b50505050565b3033146106065760405163fd570b5160e01b815260040160405180910390fd5b6106118383836117c8565b505050565b6060815183511461068f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104cf565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156106ce576106ce612a5d565b6040519080825280602002602001820160405280156106f7578160200160208202803683370190505b50905060005b85518110156108345760006001600160a01b031686828151811061072357610723613024565b60200260200101516001600160a01b0316036107a75760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104cf565b8260008683815181106107bc576107bc613024565b6020026020010151815260200190815260200160002060008783815181106107e6576107e6613024565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061082157610821613024565b60209081029190910101526001016106fd565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b3033146108945760405163fd570b5160e01b815260040160405180910390fd5b61061183838361170b565b6001600160a01b03851633148061094057503063e985e9c586336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa15801561091c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094091906130ba565b6103f15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104cf565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604081205461086e565b303314610a055760405163fd570b5160e01b815260040160405180910390fd5b61061183838361198e565b336001600160a01b0383168103610a8f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610b5757610b57612a5d565b604051908082528060200260200182016040528015610b80578160200160208202803683370190505b50905060005b8381101561083457610bf286868684818110610ba457610ba4613024565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610c0457610c04613024565b602090810291909101015280610c1981613082565b915050610b86565b303314610c415760405163fd570b5160e01b815260040160405180910390fd5b6103fe8585858585611a55565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205461086e565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320848452909152812054610390565b336001600160a01b038716811480610d2557506001600160a01b0380881660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610d975760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104cf565b610da681888888888888611bd1565b50505050505050565b6001600160a01b038316331480610e5057503063e985e9c584336040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610e2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5091906130ba565b6106065760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104cf565b303314610ee25760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610ef4575080518351145b610f405760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104cf565b60005b83518110156105e057610fa2848281518110610f6157610f61613024565b6020026020010151848381518110610f7b57610f7b613024565b6020026020010151848481518110610f9557610f95613024565b602002602001015161198e565b80610fac81613082565b915050610f43565b60006001600160a01b0383166110325760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104cf565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b8483146110ee5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104cf565b8683146111635760405162461bcd60e51b815260206004820152602d60248201527f455243313135353a206163636f756e747320616e6420616d6f756e7473206c6560448201527f6e677468206d69736d617463680000000000000000000000000000000000000060648201526084016104cf565b337ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b878110156113b1576112518360008d8d858181106111a8576111a8613024565b90506020020160208101906111bd91906130d7565b6111de8d8d878181106111d2576111d2613024565b90506020020135611c24565b6111f38c8c888181106111d2576111d2613024565b8a8a8881811061120557611205613024565b905060200281019061121791906130f2565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6f92505050565b86868281811061126357611263613024565b905060200201358260008b8b8581811061127f5761127f613024565b90506020020135815260200190815260200160002060008d8d858181106112a8576112a8613024565b90506020020160208101906112bd91906130d7565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546112ec9190613157565b909155508b90508a8281811061130457611304613024565b905060200201602081019061131991906130d7565b6001600160a01b031660006001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c8c8681811061136a5761136a613024565b905060200201358b8b8781811061138357611383613024565b905060200201356040516113a1929190918252602082015260400190565b60405180910390a4600101611188565b5050505050505050505050565b6001600160a01b03851661143a5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104cf565b8281146114af5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104cf565b60003390506115338187600088888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092018290525060408051602081019091529081529250611c6f915050565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8581101561168957600087878381811061157357611573613024565b90506020020135905085858381811061158e5761158e613024565b9050602002013583600083815260200190815260200160002060008b6001600160a01b03166001600160a01b0316815260200190815260200160002054101561163e5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104cf565b85858381811061165057611650613024565b6000938452602086815260408086206001600160a01b038f16875282529094208054949091029290920135909203905550600101611557565b5060006001600160a01b0316876001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb898989896040516116de94939291906131be565b60405180910390a450505050505050565b6116fd868686868686611c7d565b6104e6868686868686611f26565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482111561179f5760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104cf565b600083815260208290526040812080548492906117bd9084906131f0565b909155505050505050565b6001600160a01b0383166118445760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104cf565b336118738185600061185587611c24565b61185e87611c24565b60405180602001604052806000815250611c6f565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b0388168452918290529091205483111561192b5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482906119df8686610fb4565b6119e991906131f0565b1015611a375760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104cf565b600083815260208290526040812080548492906117bd908490613157565b336001600160a01b038616611ad25760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104cf565b611b2781600088611ae289611c24565b611aeb89611c24565b88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6f92505050565b60008581527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038a16845290915281208054869290611b78908490613157565b909155505060408051868152602081018690526001600160a01b0380891692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050505050565b611be08787878787878761212a565b610da6878787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061234e92505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611c5e57611c5e613024565b602090810291909101015292915050565b6104e68686868686866124a9565b6001600160a01b038416611cf95760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104cf565b8151835114611d705760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104cf565b611d7e868686868686611c6f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015611ed6576000858281518110611dbf57611dbf613024565b602002602001015190506000858381518110611ddd57611ddd613024565b602090810291909101810151600084815286835260408082206001600160a01b038e168352909352919091205490915081811015611e835760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104cf565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290611ec9908490613157565b90915550611da292505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516116de929190613207565b6001600160a01b0384163b156104e6576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190611f839089908990889088908890600401613282565b6020604051808303816000875af1925050508015611fbe575060408051601f3d908101601f19168201909252611fbb918101906132e0565b60015b61207357611fca613322565b806308c379a0036120035750611fde61333e565b80611fe95750612005565b8060405162461bcd60e51b81526004016104cf91906133e6565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104cf565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610da65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b0385166121a65760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104cf565b6121fa8787876121b588611c24565b6121be88611c24565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6f92505050565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038b16855290915290912054848110156122b35760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104cf565b6000868152602083815260408083206001600160a01b038c811685529252808320938890039093558816815290812080548692906122f2908490613157565b909155505060408051868152602081018690526001600160a01b03808916928a821692918c16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050565b6001600160a01b0384163b156104e6576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e61906123ab90899089908890889088906004016133f9565b6020604051808303816000875af19250505080156123e6575060408051601f3d908101601f191682019092526123e3918101906132e0565b60015b6123f257611fca613322565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610da65760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104cf565b6001600160a01b038516156125e55760005b83518110156125e3578281815181106124d6576124d6613024565b60200260200101516125057f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782090565b6000016000886001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061253f5761253f613024565b60200260200101518152602001908152602001600020546125798887858151811061256c5761256c613024565b6020026020010151610fb4565b61258391906131f0565b10156125d15760405162461bcd60e51b815260206004820152600660248201527f4c4f434b4544000000000000000000000000000000000000000000000000000060448201526064016104cf565b806125db81613082565b9150506124bb565b505b6104e68686868686866001600160a01b03851661275f577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea57f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b855181101561275b5784818151811061265c5761265c613024565b602002602001015183600088848151811061267957612679613024565b60200260200101518152602001908152602001600020600082825461269e9190613157565b925050819055508160008783815181106126ba576126ba613024565b60200260200101518152602001908152602001600020548360008884815181106126e6576126e6613024565b6020026020010151815260200190815260200160002054111561274b5760405162461bcd60e51b815260206004820152601160248201527f535550504c595f4558434545445f4d415800000000000000000000000000000060448201526064016104cf565b61275481613082565b9050612641565b5050505b6001600160a01b0384166104e6577f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea560005b84518110156103c75760008582815181106127ae576127ae613024565b6020026020010151905060008583815181106127cc576127cc613024565b602002602001015190506000846000848152602001908152602001600020549050818110156128635760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f7460448201527f616c537570706c7900000000000000000000000000000000000000000000000060648201526084016104cf565b6000928352602085905260409092209103905561287f81613082565b9050612791565b80356001600160a01b038116811461289d57600080fd5b919050565b600080604083850312156128b557600080fd5b6128be83612886565b946020939093013593505050565b60008083601f8401126128de57600080fd5b50813567ffffffffffffffff8111156128f657600080fd5b6020830191508360208260051b850101111561291157600080fd5b9250929050565b6000806000806000806000806080898b03121561293457600080fd5b883567ffffffffffffffff8082111561294c57600080fd5b6129588c838d016128cc565b909a50985060208b013591508082111561297157600080fd5b61297d8c838d016128cc565b909850965060408b013591508082111561299657600080fd5b6129a28c838d016128cc565b909650945060608b01359150808211156129bb57600080fd5b506129c88b828c016128cc565b999c989b5096995094979396929594505050565b6000806000806000606086880312156129f457600080fd5b6129fd86612886565b9450602086013567ffffffffffffffff80821115612a1a57600080fd5b612a2689838a016128cc565b90965094506040880135915080821115612a3f57600080fd5b50612a4c888289016128cc565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715612ab257612ab2612a5d565b6040525050565b600067ffffffffffffffff821115612ad357612ad3612a5d565b5060051b60200190565b600082601f830112612aee57600080fd5b81356020612afb82612ab9565b604051612b088282612a8c565b83815260059390931b8501820192828101915086841115612b2857600080fd5b8286015b84811015612b435780358352918301918301612b2c565b509695505050505050565b600080600080600060a08688031215612b6657600080fd5b612b6f86612886565b94506020612b7e818801612886565b9450604087013567ffffffffffffffff80821115612b9b57600080fd5b612ba78a838b01612add565b95506060890135915080821115612bbd57600080fd5b612bc98a838b01612add565b94506080890135915080821115612bdf57600080fd5b818901915089601f830112612bf357600080fd5b813581811115612c0557612c05612a5d565b6040519150612c1d84601f19601f8401160183612a8c565b8082528a84828501011115612c3157600080fd5b80848401858401376000848284010152508093505050509295509295909350565b600082601f830112612c6357600080fd5b81356020612c7082612ab9565b604051612c7d8282612a8c565b83815260059390931b8501820192828101915086841115612c9d57600080fd5b8286015b84811015612b4357612cb281612886565b8352918301918301612ca1565b600080600060608486031215612cd457600080fd5b833567ffffffffffffffff80821115612cec57600080fd5b612cf887838801612c52565b94506020860135915080821115612d0e57600080fd5b612d1a87838801612add565b93506040860135915080821115612d3057600080fd5b50612d3d86828701612add565b9150509250925092565b600080600060608486031215612d5c57600080fd5b612d6584612886565b95602085013595506040909401359392505050565b60008060408385031215612d8d57600080fd5b823567ffffffffffffffff80821115612da557600080fd5b612db186838701612c52565b93506020850135915080821115612dc757600080fd5b50612dd485828601612add565b9150509250929050565b600081518084526020808501945080840160005b83811015612e0e57815187529582019590820190600101612df2565b509495945050505050565b6020815260006103906020830184612dde565b600060208284031215612e3e57600080fd5b5035919050565b8015158114612e5357600080fd5b50565b60008060408385031215612e6957600080fd5b612e7283612886565b91506020830135612e8281612e45565b809150509250929050565b600080600060408486031215612ea257600080fd5b612eab84612886565b9250602084013567ffffffffffffffff811115612ec757600080fd5b612ed3868287016128cc565b9497909650939450505050565b60008083601f840112612ef257600080fd5b50813567ffffffffffffffff811115612f0a57600080fd5b60208301915083602082850101111561291157600080fd5b600080600080600060808688031215612f3a57600080fd5b612f4386612886565b94506020860135935060408601359250606086013567ffffffffffffffff811115612f6d57600080fd5b612a4c88828901612ee0565b60008060408385031215612f8c57600080fd5b612f9583612886565b9150612fa360208401612886565b90509250929050565b60008060008060008060a08789031215612fc557600080fd5b612fce87612886565b9550612fdc60208801612886565b94506040870135935060608701359250608087013567ffffffffffffffff81111561300657600080fd5b61301289828a01612ee0565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036130b3576130b3613053565b5060010190565b6000602082840312156130cc57600080fd5b815161039081612e45565b6000602082840312156130e957600080fd5b61039082612886565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261312757600080fd5b83018035915067ffffffffffffffff82111561314257600080fd5b60200191503681900382131561291157600080fd5b6000821982111561316a5761316a613053565b500190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156131a157600080fd5b8260051b8083602087013760009401602001938452509192915050565b6040815260006131d260408301868861316f565b82810360208401526131e581858761316f565b979650505050505050565b60008282101561320257613202613053565b500390565b60408152600061321a6040830185612dde565b828103602084015261322c8185612dde565b95945050505050565b6000815180845260005b8181101561325b5760208185018101518683018201520161323f565b8181111561326d576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526132ae60a0830186612dde565b82810360608401526132c08186612dde565b905082810360808401526132d48185613235565b98975050505050505050565b6000602082840312156132f257600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461039057600080fd5b600060033d111561333b5760046000803e5060005160e01c5b90565b600060443d101561334c5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff816024840111818411171561339a57505050505090565b82850191508151818111156133b25750505050505090565b843d87010160208285010111156133cc5750505050505090565b6133db60208286010187612a8c565b509095945050505050565b6020815260006103906020830184613235565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526131e560a083018461323556fea26469706673582212202e56028c8e7fdbeac035921af9db83ce5f543dbf3846bd26bd11d4bce7421be664736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./base/ERC1155Base.sol\";\nimport \"./extensions/supply/ERC1155SupplyExtension.sol\";\nimport \"./extensions/lockable/ERC1155LockableExtension.sol\";\nimport \"./extensions/mintable/ERC1155MintableExtension.sol\";\nimport \"./extensions/burnable/ERC1155BurnableExtension.sol\";\n\n/**\n * @title ERC1155 - Standard\n * @notice Standard EIP-1155 NFTs with core capabilities of Mintable, Burnable and Lockable.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:provides-interfaces IERC1155 IERC1155BurnableExtension IERC1155LockableExtension IERC1155MintableExtension IERC1155SupplyExtension\n */\ncontract ERC1155 is\n    ERC1155Base,\n    ERC1155SupplyExtension,\n    ERC1155MintableExtension,\n    ERC1155BurnableExtension,\n    ERC1155LockableExtension\n{\n    /**\n     * @notice inheritdoc IERC1155Metadata\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override(ERC1155BaseInternal, ERC1155SupplyInternal, ERC1155LockableInternal) {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableOwnable": {
    "fqn": "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x258293F8209d3f4E6fF347cfF9Fef0C56352B9A8",
      "goerli": "0x258293F8209d3f4E6fF347cfF9Fef0C56352B9A8"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155LockableOwnable",
      "sourceName": "src/token/ERC1155/facets/locking/ERC1155LockableOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b506107db806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80639d3a9f5f14610051578063c48d633614610066578063c561da7114610079578063e78579041461008c575b600080fd5b61006461005f3660046105d1565b61009f565b005b6100646100743660046106b5565b6101bb565b6100646100873660046106b5565b6102bb565b61006461009a3660046105d1565b6103bb565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f3f3b797e0000000000000000000000000000000000000000000000000000000081523090633f3b797e9061018490869086908690600401610723565b600060405180830381600087803b15801561019e57600080fd5b505af11580156101b2573d6000803e3d6000fd5b50505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461025b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517f983da15600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024810183905260448101829052309063983da15690606401610184565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517f6708a99000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101839052604481018290523090636708a99090606401610184565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517ff7794bae000000000000000000000000000000000000000000000000000000008152309063f7794bae9061018490869086908690600401610723565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156105115761051161049b565b604052919050565b600067ffffffffffffffff8211156105335761053361049b565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461056157600080fd5b919050565b600082601f83011261057757600080fd5b8135602061058c61058783610519565b6104ca565b82815260059290921b840181019181810190868411156105ab57600080fd5b8286015b848110156105c657803583529183019183016105af565b509695505050505050565b6000806000606084860312156105e657600080fd5b833567ffffffffffffffff808211156105fe57600080fd5b818601915086601f83011261061257600080fd5b8135602061062261058783610519565b82815260059290921b8401810191818101908a84111561064157600080fd5b948201945b83861015610666576106578661053d565b82529482019490820190610646565b9750508701359250508082111561067c57600080fd5b61068887838801610566565b9350604086013591508082111561069e57600080fd5b506106ab86828701610566565b9150509250925092565b6000806000606084860312156106ca57600080fd5b6106d38461053d565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b83811015610718578151875295820195908201906001016106fc565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561077257815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610740565b5050508381038285015261078681876106e8565b915050828103604084015261079b81856106e8565b969550505050505056fea26469706673582212203adf17c152348a6f570740a14088122e893f13e518c2ab73036654c386d7f51464736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80639d3a9f5f14610051578063c48d633614610066578063c561da7114610079578063e78579041461008c575b600080fd5b61006461005f3660046105d1565b61009f565b005b6100646100743660046106b5565b6101bb565b6100646100873660046106b5565b6102bb565b61006461009a3660046105d1565b6103bb565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f3f3b797e0000000000000000000000000000000000000000000000000000000081523090633f3b797e9061018490869086908690600401610723565b600060405180830381600087803b15801561019e57600080fd5b505af11580156101b2573d6000803e3d6000fd5b50505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461025b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517f983da15600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024810183905260448101829052309063983da15690606401610184565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461035b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517f6708a99000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101839052604481018290523090636708a99090606401610184565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461045b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517ff7794bae000000000000000000000000000000000000000000000000000000008152309063f7794bae9061018490869086908690600401610723565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156105115761051161049b565b604052919050565b600067ffffffffffffffff8211156105335761053361049b565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461056157600080fd5b919050565b600082601f83011261057757600080fd5b8135602061058c61058783610519565b6104ca565b82815260059290921b840181019181810190868411156105ab57600080fd5b8286015b848110156105c657803583529183019183016105af565b509695505050505050565b6000806000606084860312156105e657600080fd5b833567ffffffffffffffff808211156105fe57600080fd5b818601915086601f83011261061257600080fd5b8135602061062261058783610519565b82815260059290921b8401810191818101908a84111561064157600080fd5b948201945b83861015610666576106578661053d565b82529482019490820190610646565b9750508701359250508082111561067c57600080fd5b61068887838801610566565b9350604086013591508082111561069e57600080fd5b506106ab86828701610566565b9150509250925092565b6000806000606084860312156106ca57600080fd5b6106d38461053d565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b83811015610718578151875295820195908201906001016106fc565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561077257815173ffffffffffffffffffffffffffffffffffffffff1684529284019290840190600101610740565b5050508381038285015261078681876106e8565b915050828103604084015261079b81856106e8565b969550505050505056fea26469706673582212203adf17c152348a6f570740a14088122e893f13e518c2ab73036654c386d7f51464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"../../extensions/lockable/IERC1155LockableExtension.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155LockableOwnable.sol\";\n\n/**\n * @title ERC1155 - Lock as owner\n * @notice Allow locking tokens as the contract owner.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC1155LockableExtension\n * @custom:provides-interfaces IERC1155LockableOwnable\n */\ncontract ERC1155LockableOwnable is IERC1155LockableOwnable, OwnableInternal {\n    /**\n     * @inheritdoc IERC1155LockableOwnable\n     */\n    function lockByOwner(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual onlyOwner {\n        IERC1155LockableExtension(address(this)).lockByFacet(account, id, amount);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableOwnable\n     */\n    function lockByOwner(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) public virtual onlyOwner {\n        IERC1155LockableExtension(address(this)).lockByFacet(accounts, ids, amounts);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableOwnable\n     */\n    function unlockByOwner(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual onlyOwner {\n        IERC1155LockableExtension(address(this)).unlockByFacet(account, id, amount);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableOwnable\n     */\n    function unlockByOwner(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) public virtual onlyOwner {\n        IERC1155LockableExtension(address(this)).unlockByFacet(accounts, ids, amounts);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableRoleBased": {
    "fqn": "flair-sdk:token/ERC1155/facets/locking/ERC1155LockableRoleBased",
    "version": "2.14.0",
    "address": {
      "5": "0x440d49da49a6860310E3f0836D7cBeD937061c91",
      "goerli": "0x440d49da49a6860310E3f0836D7cBeD937061c91"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155LockableRoleBased",
      "sourceName": "src/token/ERC1155/facets/locking/ERC1155LockableRoleBased.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "LOCKER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610b5c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063a97b437a11610050578063a97b437a146100b9578063a9fc295c146100cc578063f3621367146100df57600080fd5b806349c8d010146100775780639d42b0c01461008c578063a217fddf1461009f575b600080fd5b61008a610085366004610786565b610106565b005b61008a61009a36600461086a565b6101a8565b6100a7600081565b60405190815260200160405180910390f35b61008a6100c7366004610786565b610232565b61008a6100da36600461086a565b61029c565b6100a77faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027981565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027961013081610326565b6040517f3f3b797e0000000000000000000000000000000000000000000000000000000081523090633f3b797e90610170908790879087906004016108d8565b600060405180830381600087803b15801561018a57600080fd5b505af115801561019e573d6000803e3d6000fd5b5050505050505050565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a902796101d281610326565b6040517f983da15600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024810184905260448101839052309063983da15690606401610170565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027961025c81610326565b6040517ff7794bae000000000000000000000000000000000000000000000000000000008152309063f7794bae90610170908790879087906004016108d8565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a902796102c681610326565b6040517f6708a99000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101849052604481018390523090636708a99090606401610170565b6103308133610333565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166103f757610392816103fb565b61039d836020610424565b6040516020016103ae92919061098a565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526103ee91600401610a0b565b60405180910390fd5b5050565b606061041e73ffffffffffffffffffffffffffffffffffffffff83166014610424565b92915050565b60606000610433836002610a6d565b61043e906002610aaa565b67ffffffffffffffff8111156104565761045661066e565b6040519080825280601f01601f191660200182016040528015610480576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106104b7576104b7610ac2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061051a5761051a610ac2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610556846002610a6d565b610561906001610aaa565b90505b60018111156105fe577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106105a2576105a2610ac2565b1a60f81b8282815181106105b8576105b8610ac2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936105f781610af1565b9050610564565b508315610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103ee565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106c6576106c661066e565b604052919050565b600067ffffffffffffffff8211156106e8576106e861066e565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461071657600080fd5b919050565b600082601f83011261072c57600080fd5b8135602061074161073c836106ce565b61069d565b82815260059290921b8401810191818101908684111561076057600080fd5b8286015b8481101561077b5780358352918301918301610764565b509695505050505050565b60008060006060848603121561079b57600080fd5b833567ffffffffffffffff808211156107b357600080fd5b818601915086601f8301126107c757600080fd5b813560206107d761073c836106ce565b82815260059290921b8401810191818101908a8411156107f657600080fd5b948201945b8386101561081b5761080c866106f2565b825294820194908201906107fb565b9750508701359250508082111561083157600080fd5b61083d8783880161071b565b9350604086013591508082111561085357600080fd5b506108608682870161071b565b9150509250925092565b60008060006060848603121561087f57600080fd5b610888846106f2565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b838110156108cd578151875295820195908201906001016108b1565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561092757815173ffffffffffffffffffffffffffffffffffffffff16845292840192908401906001016108f5565b5050508381038285015261093b818761089d565b9150508281036040840152610950818561089d565b9695505050505050565b60005b8381101561097557818101518382015260200161095d565b83811115610984576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516109c281601785016020880161095a565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516109ff81602884016020880161095a565b01602801949350505050565b6020815260008251806020840152610a2a81604085016020870161095a565b601f01601f19169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aa557610aa5610a3e565b500290565b60008219821115610abd57610abd610a3e565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610b0057610b00610a3e565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220e3d0e670f8306e99d9e0349f71b63d89afe77a85c5d0ca6caa2f2f2e68c45e4464736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063a97b437a11610050578063a97b437a146100b9578063a9fc295c146100cc578063f3621367146100df57600080fd5b806349c8d010146100775780639d42b0c01461008c578063a217fddf1461009f575b600080fd5b61008a610085366004610786565b610106565b005b61008a61009a36600461086a565b6101a8565b6100a7600081565b60405190815260200160405180910390f35b61008a6100c7366004610786565b610232565b61008a6100da36600461086a565b61029c565b6100a77faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027981565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027961013081610326565b6040517f3f3b797e0000000000000000000000000000000000000000000000000000000081523090633f3b797e90610170908790879087906004016108d8565b600060405180830381600087803b15801561018a57600080fd5b505af115801561019e573d6000803e3d6000fd5b5050505050505050565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a902796101d281610326565b6040517f983da15600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024810184905260448101839052309063983da15690606401610170565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027961025c81610326565b6040517ff7794bae000000000000000000000000000000000000000000000000000000008152309063f7794bae90610170908790879087906004016108d8565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a902796102c681610326565b6040517f6708a99000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101849052604481018390523090636708a99090606401610170565b6103308133610333565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166103f757610392816103fb565b61039d836020610424565b6040516020016103ae92919061098a565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526103ee91600401610a0b565b60405180910390fd5b5050565b606061041e73ffffffffffffffffffffffffffffffffffffffff83166014610424565b92915050565b60606000610433836002610a6d565b61043e906002610aaa565b67ffffffffffffffff8111156104565761045661066e565b6040519080825280601f01601f191660200182016040528015610480576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106104b7576104b7610ac2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061051a5761051a610ac2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610556846002610a6d565b610561906001610aaa565b90505b60018111156105fe577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106105a2576105a2610ac2565b1a60f81b8282815181106105b8576105b8610ac2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936105f781610af1565b9050610564565b508315610667576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103ee565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156106c6576106c661066e565b604052919050565b600067ffffffffffffffff8211156106e8576106e861066e565b5060051b60200190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461071657600080fd5b919050565b600082601f83011261072c57600080fd5b8135602061074161073c836106ce565b61069d565b82815260059290921b8401810191818101908684111561076057600080fd5b8286015b8481101561077b5780358352918301918301610764565b509695505050505050565b60008060006060848603121561079b57600080fd5b833567ffffffffffffffff808211156107b357600080fd5b818601915086601f8301126107c757600080fd5b813560206107d761073c836106ce565b82815260059290921b8401810191818101908a8411156107f657600080fd5b948201945b8386101561081b5761080c866106f2565b825294820194908201906107fb565b9750508701359250508082111561083157600080fd5b61083d8783880161071b565b9350604086013591508082111561085357600080fd5b506108608682870161071b565b9150509250925092565b60008060006060848603121561087f57600080fd5b610888846106f2565b95602085013595506040909401359392505050565b600081518084526020808501945080840160005b838110156108cd578151875295820195908201906001016108b1565b509495945050505050565b606080825284519082018190526000906020906080840190828801845b8281101561092757815173ffffffffffffffffffffffffffffffffffffffff16845292840192908401906001016108f5565b5050508381038285015261093b818761089d565b9150508281036040840152610950818561089d565b9695505050505050565b60005b8381101561097557818101518382015260200161095d565b83811115610984576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516109c281601785016020880161095a565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516109ff81602884016020880161095a565b01602801949350505050565b6020815260008251806020840152610a2a81604085016020870161095a565b601f01601f19169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aa557610aa5610a3e565b500290565b60008219821115610abd57610abd610a3e565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610b0057610b00610a3e565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220e3d0e670f8306e99d9e0349f71b63d89afe77a85c5d0ca6caa2f2f2e68c45e4464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/roles/AccessControlInternal.sol\";\nimport \"../../extensions/lockable/IERC1155LockableExtension.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155LockableRoleBased.sol\";\n\n/**\n * @title ERC1155 - Lock as role\n * @notice Allow locking tokens by any sender who has the LOCKER_ROLE.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC1155LockableExtension\n * @custom:provides-interfaces IERC1155LockableRoleBased\n */\ncontract ERC1155LockableRoleBased is IERC1155LockableRoleBased, AccessControlInternal {\n    bytes32 public constant LOCKER_ROLE = keccak256(\"LOCKER_ROLE\");\n\n    /**\n     * @inheritdoc IERC1155LockableRoleBased\n     */\n    function lockByRole(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external virtual onlyRole(LOCKER_ROLE) {\n        IERC1155LockableExtension(address(this)).lockByFacet(account, id, amount);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableRoleBased\n     */\n    function lockByRole(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external virtual onlyRole(LOCKER_ROLE) {\n        IERC1155LockableExtension(address(this)).lockByFacet(accounts, ids, amounts);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableRoleBased\n     */\n    function unlockByRole(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external virtual onlyRole(LOCKER_ROLE) {\n        IERC1155LockableExtension(address(this)).unlockByFacet(account, id, amount);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableRoleBased\n     */\n    function unlockByRole(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external virtual onlyRole(LOCKER_ROLE) {\n        IERC1155LockableExtension(address(this)).unlockByFacet(accounts, ids, amounts);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/metadata/ERC1155Metadata": {
    "fqn": "flair-sdk:token/ERC1155/facets/metadata/ERC1155Metadata",
    "version": "2.14.0",
    "address": {
      "5": "0x858Fb58E1183f8C0ef71583FD1F249062089c229",
      "goerli": "0x858Fb58E1183f8C0ef71583FD1F249062089c229"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155Metadata",
      "sourceName": "src/token/ERC1155/facets/metadata/ERC1155Metadata.sol",
      "abi": [
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610894806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780630e89341c1461006457806395d89b4114610077575b600080fd5b61004e61007f565b60405161005b9190610558565b60405180910390f35b61004e6100723660046105a9565b610130565b61004e6103ba565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc80546100ad906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546100d9906105c2565b80156101265780601f106100fb57610100808354040283529160200191610126565b820191906000526020600020905b81548152906001019060200180831161010957829003601f168201915b5050505050905090565b60008181527f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2066020526040812080546060927f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc92909161018f906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546101bb906105c2565b80156102085780601f106101dd57610100808354040283529160200191610208565b820191906000526020600020905b8154815290600101906020018083116101eb57829003601f168201915b505050505090506000826003018054610220906105c2565b80601f016020809104026020016040519081016040528092919081815260200182805461024c906105c2565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b505050505090506000825111156102b257509392505050565b60008360050180546102c3906105c2565b90501115610362578260050180546102da906105c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610306906105c2565b80156103535780601f1061032857610100808354040283529160200191610353565b820191906000526020600020905b81548152906001019060200180831161033657829003601f168201915b50505050509350505050919050565b8051156103a25780610373866103eb565b8460070160405160200161038993929190610615565b6040516020818303038152906040529350505050919050565b50506040805160208101909152600081529392505050565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60010180546100ad906105c2565b60608160000361042e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610458578061044281610742565b91506104519050600a836107a9565b9150610432565b60008167ffffffffffffffff811115610473576104736107bd565b6040519080825280601f01601f19166020018201604052801561049d576020820181803683370190505b5090505b8415610520576104b26001836107ec565b91506104bf600a86610803565b6104ca906030610817565b60f81b8183815181106104df576104df61082f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610519600a866107a9565b94506104a1565b949350505050565b60005b8381101561054357818101518382015260200161052b565b83811115610552576000848401525b50505050565b6020815260008251806020840152610577816040850160208701610528565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156105bb57600080fd5b5035919050565b600181811c908216806105d657607f821691505b60208210810361060f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000845160206106288285838a01610528565b85519184019161063b8184848a01610528565b8554920191600090600181811c908083168061065857607f831692505b858310810361068e577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b8080156106a257600181146106d557610702565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0085168852831515840288019550610702565b60008b81526020902060005b858110156106fa5781548a8201529084019088016106e1565b505083880195505b50939b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361077357610773610713565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826107b8576107b861077a565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156107fe576107fe610713565b500390565b6000826108125761081261077a565b500690565b6000821982111561082a5761082a610713565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220531fed2e86ad8ab05b14b7ed3c8171cc5578b17cf6e0c23aa7abfbd2adf3b79464736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780630e89341c1461006457806395d89b4114610077575b600080fd5b61004e61007f565b60405161005b9190610558565b60405180910390f35b61004e6100723660046105a9565b610130565b61004e6103ba565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc80546100ad906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546100d9906105c2565b80156101265780601f106100fb57610100808354040283529160200191610126565b820191906000526020600020905b81548152906001019060200180831161010957829003601f168201915b5050505050905090565b60008181527f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2066020526040812080546060927f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc92909161018f906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546101bb906105c2565b80156102085780601f106101dd57610100808354040283529160200191610208565b820191906000526020600020905b8154815290600101906020018083116101eb57829003601f168201915b505050505090506000826003018054610220906105c2565b80601f016020809104026020016040519081016040528092919081815260200182805461024c906105c2565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b505050505090506000825111156102b257509392505050565b60008360050180546102c3906105c2565b90501115610362578260050180546102da906105c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610306906105c2565b80156103535780601f1061032857610100808354040283529160200191610353565b820191906000526020600020905b81548152906001019060200180831161033657829003601f168201915b50505050509350505050919050565b8051156103a25780610373866103eb565b8460070160405160200161038993929190610615565b6040516020818303038152906040529350505050919050565b50506040805160208101909152600081529392505050565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60010180546100ad906105c2565b60608160000361042e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610458578061044281610742565b91506104519050600a836107a9565b9150610432565b60008167ffffffffffffffff811115610473576104736107bd565b6040519080825280601f01601f19166020018201604052801561049d576020820181803683370190505b5090505b8415610520576104b26001836107ec565b91506104bf600a86610803565b6104ca906030610817565b60f81b8183815181106104df576104df61082f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610519600a866107a9565b94506104a1565b949350505050565b60005b8381101561054357818101518382015260200161052b565b83811115610552576000848401525b50505050565b6020815260008251806020840152610577816040850160208701610528565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156105bb57600080fd5b5035919050565b600181811c908216806105d657607f821691505b60208210810361060f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000845160206106288285838a01610528565b85519184019161063b8184848a01610528565b8554920191600090600181811c908083168061065857607f831692505b858310810361068e577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b8080156106a257600181146106d557610702565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0085168852831515840288019550610702565b60008b81526020902060005b858110156106fa5781548a8201529084019088016106e1565b505083880195505b50939b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361077357610773610713565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826107b8576107b861077a565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156107fe576107fe610713565b500390565b6000826108125761081261077a565b500690565b6000821982111561082a5761082a610713565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220531fed2e86ad8ab05b14b7ed3c8171cc5578b17cf6e0c23aa7abfbd2adf3b79464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../../common/metadata/MetadataStorage.sol\";\nimport \"./IERC1155Metadata.sol\";\n\n/**\n * @title ERC1155 - Metadata\n * @notice Provides metadata for ERC1155 tokens according to standard.\n * @dev See https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies IERC1155\n * @custom:provides-interfaces IMetadata IERC1155Metadata\n */\ncontract ERC1155Metadata is IERC1155Metadata {\n    using MetadataStorage for MetadataStorage.Layout;\n\n    /**\n     * @dev IMetadata\n     */\n    function name() external view returns (string memory) {\n        return MetadataStorage.layout().name;\n    }\n\n    /**\n     * @dev IMetadata\n     */\n    function symbol() external view returns (string memory) {\n        return MetadataStorage.layout().symbol;\n    }\n\n    /**\n     * @notice inheritdoc IERC1155Metadata\n     */\n    function uri(uint256 tokenId) public view virtual returns (string memory) {\n        MetadataStorage.Layout storage l = MetadataStorage.layout();\n\n        string memory _tokenIdURI = l.tokenURIs[tokenId];\n        string memory _baseURI = l.baseURI;\n\n        if (bytes(_tokenIdURI).length > 0) {\n            return _tokenIdURI;\n        } else if (bytes(l.fallbackURI).length > 0) {\n            return l.fallbackURI;\n        } else if (bytes(_baseURI).length > 0) {\n            return string(abi.encodePacked(_baseURI, Strings.toString(tokenId), l.uriSuffix));\n        } else {\n            return \"\";\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnable": {
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x966471ABb6Afe5CC543f2714C443d9f072369078",
      "goerli": "0x966471ABb6Afe5CC543f2714C443d9f072369078"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155MintableOwnable",
      "sourceName": "src/token/ERC1155/facets/minting/ERC1155MintableOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061074e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633d6b27061461003b5780635135bec114610050575b600080fd5b61004e6100493660046102f4565b610063565b005b61004e61005e366004610410565b61018e565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c50390610152908b908b908b908b908b908b908b908b9060040161055f565b600060405180830381600087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b505050505050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b90610270908790879087908790600401610697565b600060405180830381600087803b15801561028a57600080fd5b505af115801561029e573d6000803e3d6000fd5b5050505050505050565b60008083601f8401126102ba57600080fd5b50813567ffffffffffffffff8111156102d257600080fd5b6020830191508360208260051b85010111156102ed57600080fd5b9250929050565b6000806000806000806000806080898b03121561031057600080fd5b883567ffffffffffffffff8082111561032857600080fd5b6103348c838d016102a8565b909a50985060208b013591508082111561034d57600080fd5b6103598c838d016102a8565b909850965060408b013591508082111561037257600080fd5b61037e8c838d016102a8565b909650945060608b013591508082111561039757600080fd5b506103a48b828c016102a8565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146103dc57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561042657600080fd5b61042f856103b8565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561045a57600080fd5b818701915087601f83011261046e57600080fd5b813581811115610480576104806103e1565b604051601f8201601f19908116603f011681019083821181831017156104a8576104a86103e1565b816040528281528a60208487010111156104c157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561051757600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b8110156105ad5773ffffffffffffffffffffffffffffffffffffffff610598846103b8565b16825260209283019290910190600101610572565b5060209150838103828501526105c4818a8c6104e5565b905083810360408501526105d981888a6104e5565b84810360608601528581529050818101600586901b820183018760005b8881101561068357601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b360301811261063957600080fd5b8a01868101903567ffffffffffffffff81111561065557600080fd5b80360382131561066457600080fd5b61066f858284610534565b9588019594505050908501906001016105f6565b50909e9d5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156106ed5785810183015185820160a0015282016106d1565b818111156106ff57600060a083870101525b50601f01601f19169290920160a001969550505050505056fea264697066735822122085ce232fff435dda434c877a788dcc0303359e9886aa7576c646c0fc3934b09b64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80633d6b27061461003b5780635135bec114610050575b600080fd5b61004e6100493660046102f4565b610063565b005b61004e61005e366004610410565b61018e565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c50390610152908b908b908b908b908b908b908b908b9060040161055f565b600060405180830381600087803b15801561016c57600080fd5b505af1158015610180573d6000803e3d6000fd5b505050505050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461022e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b90610270908790879087908790600401610697565b600060405180830381600087803b15801561028a57600080fd5b505af115801561029e573d6000803e3d6000fd5b5050505050505050565b60008083601f8401126102ba57600080fd5b50813567ffffffffffffffff8111156102d257600080fd5b6020830191508360208260051b85010111156102ed57600080fd5b9250929050565b6000806000806000806000806080898b03121561031057600080fd5b883567ffffffffffffffff8082111561032857600080fd5b6103348c838d016102a8565b909a50985060208b013591508082111561034d57600080fd5b6103598c838d016102a8565b909850965060408b013591508082111561037257600080fd5b61037e8c838d016102a8565b909650945060608b013591508082111561039757600080fd5b506103a48b828c016102a8565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146103dc57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561042657600080fd5b61042f856103b8565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561045a57600080fd5b818701915087601f83011261046e57600080fd5b813581811115610480576104806103e1565b604051601f8201601f19908116603f011681019083821181831017156104a8576104a86103e1565b816040528281528a60208487010111156104c157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561051757600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b8110156105ad5773ffffffffffffffffffffffffffffffffffffffff610598846103b8565b16825260209283019290910190600101610572565b5060209150838103828501526105c4818a8c6104e5565b905083810360408501526105d981888a6104e5565b84810360608601528581529050818101600586901b820183018760005b8881101561068357601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b360301811261063957600080fd5b8a01868101903567ffffffffffffffff81111561065557600080fd5b80360382131561066457600080fd5b61066f858284610534565b9588019594505050908501906001016105f6565b50909e9d5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156106ed5785810183015185820160a0015282016106d1565b818111156106ff57600060a083870101525b50601f01601f19169290920160a001969550505050505056fea264697066735822122085ce232fff435dda434c877a788dcc0303359e9886aa7576c646c0fc3934b09b64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"../../extensions/mintable/IERC1155MintableExtension.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155MintableOwnable.sol\";\n\n/**\n * @title ERC1155 - Mint as owner\n * @notice Allow minting as contract owner with no restrictions.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC1155MintableExtension\n * @custom:provides-interfaces IERC1155MintableOwnable\n */\ncontract ERC1155MintableOwnable is IERC1155MintableOwnable, OwnableInternal {\n    /**\n     * @inheritdoc IERC1155MintableOwnable\n     */\n    function mintByOwner(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual onlyOwner {\n        IERC1155MintableExtension(address(this)).mintByFacet(to, id, amount, data);\n    }\n\n    /**\n     * @inheritdoc IERC1155MintableOwnable\n     */\n    function mintByOwner(\n        address[] calldata tos,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes[] calldata datas\n    ) public virtual onlyOwner {\n        IERC1155MintableExtension(address(this)).mintByFacet(tos, ids, amounts, datas);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnableERC2771": {
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableOwnableERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0x4e09De77538654AF80F236EF9403B4Be297Ae4a3",
      "goerli": "0x4e09De77538654AF80F236EF9403B4Be297Ae4a3"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155MintableOwnableERC2771",
      "sourceName": "src/token/ERC1155/facets/minting/ERC1155MintableOwnableERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610808806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633d6b27061461003b5780635135bec114610050575b600080fd5b61004e6100493660046103ae565b610063565b005b61004e61005e3660046104ca565b6101ab565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166100a36102e2565b73ffffffffffffffffffffffffffffffffffffffff1614610125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c5039061016f908b908b908b908b908b908b908b908b90600401610619565b600060405180830381600087803b15801561018957600080fd5b505af115801561019d573d6000803e3d6000fd5b505050505050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166101eb6102e2565b73ffffffffffffffffffffffffffffffffffffffff1614610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161011c565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906102aa908790879087908790600401610751565b600060405180830381600087803b1580156102c457600080fd5b505af11580156102d8573d6000803e3d6000fd5b5050505050505050565b60006102ec6102f1565b905090565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361035d57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60008083601f84011261037457600080fd5b50813567ffffffffffffffff81111561038c57600080fd5b6020830191508360208260051b85010111156103a757600080fd5b9250929050565b6000806000806000806000806080898b0312156103ca57600080fd5b883567ffffffffffffffff808211156103e257600080fd5b6103ee8c838d01610362565b909a50985060208b013591508082111561040757600080fd5b6104138c838d01610362565b909850965060408b013591508082111561042c57600080fd5b6104388c838d01610362565b909650945060608b013591508082111561045157600080fd5b5061045e8b828c01610362565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461049657600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156104e057600080fd5b6104e985610472565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561051457600080fd5b818701915087601f83011261052857600080fd5b81358181111561053a5761053a61049b565b604051601f8201601f19908116603f011681019083821181831017156105625761056261049b565b816040528281528a602084870101111561057b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156105d157600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b8110156106675773ffffffffffffffffffffffffffffffffffffffff61065284610472565b1682526020928301929091019060010161062c565b50602091508381038285015261067e818a8c61059f565b9050838103604085015261069381888a61059f565b84810360608601528581529050818101600586901b820183018760005b8881101561073d57601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b36030181126106f357600080fd5b8a01868101903567ffffffffffffffff81111561070f57600080fd5b80360382131561071e57600080fd5b6107298582846105ee565b9588019594505050908501906001016106b0565b50909e9d5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156107a75785810183015185820160a00152820161078b565b818111156107b957600060a083870101525b50601f01601f19169290920160a001969550505050505056fea2646970667358221220bb1a39fdd35e0405c40ce9b87357e083d6d608d72559fbb266cd52c99d0aa37664736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80633d6b27061461003b5780635135bec114610050575b600080fd5b61004e6100493660046103ae565b610063565b005b61004e61005e3660046104ca565b6101ab565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166100a36102e2565b73ffffffffffffffffffffffffffffffffffffffff1614610125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c5039061016f908b908b908b908b908b908b908b908b90600401610619565b600060405180830381600087803b15801561018957600080fd5b505af115801561019d573d6000803e3d6000fd5b505050505050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166101eb6102e2565b73ffffffffffffffffffffffffffffffffffffffff1614610268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161011c565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906102aa908790879087908790600401610751565b600060405180830381600087803b1580156102c457600080fd5b505af11580156102d8573d6000803e3d6000fd5b5050505050505050565b60006102ec6102f1565b905090565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361035d57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60008083601f84011261037457600080fd5b50813567ffffffffffffffff81111561038c57600080fd5b6020830191508360208260051b85010111156103a757600080fd5b9250929050565b6000806000806000806000806080898b0312156103ca57600080fd5b883567ffffffffffffffff808211156103e257600080fd5b6103ee8c838d01610362565b909a50985060208b013591508082111561040757600080fd5b6104138c838d01610362565b909850965060408b013591508082111561042c57600080fd5b6104388c838d01610362565b909650945060608b013591508082111561045157600080fd5b5061045e8b828c01610362565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461049657600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156104e057600080fd5b6104e985610472565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561051457600080fd5b818701915087601f83011261052857600080fd5b81358181111561053a5761053a61049b565b604051601f8201601f19908116603f011681019083821181831017156105625761056261049b565b816040528281528a602084870101111561057b57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156105d157600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b8110156106675773ffffffffffffffffffffffffffffffffffffffff61065284610472565b1682526020928301929091019060010161062c565b50602091508381038285015261067e818a8c61059f565b9050838103604085015261069381888a61059f565b84810360608601528581529050818101600586901b820183018760005b8881101561073d57601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b36030181126106f357600080fd5b8a01868101903567ffffffffffffffff81111561070f57600080fd5b80360382131561071e57600080fd5b6107298582846105ee565b9588019594505050908501906001016106b0565b50909e9d5050505050505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156107a75785810183015185820160a00152820161078b565b818111156107b957600060a083870101525b50601f01601f19169290920160a001969550505050505056fea2646970667358221220bb1a39fdd35e0405c40ce9b87357e083d6d608d72559fbb266cd52c99d0aa37664736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./ERC1155MintableOwnable.sol\";\n\n/**\n * @title ERC1155 - Mint as owner - with meta transactions\n * @notice Allow minting as owner via ERC2771 Context meta transactions (signed by the owner private key)\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC1155MintableExtension\n * @custom:provides-interfaces IERC1155MintableOwnable\n */\ncontract ERC1155MintableOwnableERC2771 is ERC1155MintableOwnable, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBased": {
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBased",
    "version": "2.14.0",
    "address": {
      "5": "0x900616bc1c30389683FB2A8fDd5D16926b4Ab082",
      "goerli": "0x900616bc1c30389683FB2A8fDd5D16926b4Ab082"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155MintableRoleBased",
      "sourceName": "src/token/ERC1155/facets/minting/ERC1155MintableRoleBased.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610b9a806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806368da19ec1461005157806372642f5614610066578063a217fddf14610079578063d539139314610093575b600080fd5b61006461005f3660046105a4565b6100ba565b005b6100646100743660046106c0565b61016b565b610081600081565b60405190815260200160405180910390f35b6100817f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610210565b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c5039061012e908c908c908c908c908c908c908c908c9060040161080f565b600060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b50505050505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019581610210565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906101d79088908890889088906004016109a3565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b505050505050505050565b61021a813361021d565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166102e15761027c816102e5565b61028783602061030e565b6040516020016102989291906109e8565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102d891600401610a69565b60405180910390fd5b5050565b606061030873ffffffffffffffffffffffffffffffffffffffff8316601461030e565b92915050565b6060600061031d836002610aab565b610328906002610ae8565b67ffffffffffffffff81111561034057610340610691565b6040519080825280601f01601f19166020018201604052801561036a576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103a1576103a1610b00565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061040457610404610b00565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610440846002610aab565b61044b906001610ae8565b90505b60018111156104e8577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061048c5761048c610b00565b1a60f81b8282815181106104a2576104a2610b00565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936104e181610b2f565b905061044e565b508315610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102d8565b9392505050565b60008083601f84011261056a57600080fd5b50813567ffffffffffffffff81111561058257600080fd5b6020830191508360208260051b850101111561059d57600080fd5b9250929050565b6000806000806000806000806080898b0312156105c057600080fd5b883567ffffffffffffffff808211156105d857600080fd5b6105e48c838d01610558565b909a50985060208b01359150808211156105fd57600080fd5b6106098c838d01610558565b909850965060408b013591508082111561062257600080fd5b61062e8c838d01610558565b909650945060608b013591508082111561064757600080fd5b506106548b828c01610558565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461068c57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156106d657600080fd5b6106df85610668565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561070a57600080fd5b818701915087601f83011261071e57600080fd5b81358181111561073057610730610691565b604051601f8201601f19908116603f0116810190838211818310171561075857610758610691565b816040528281528a602084870101111561077157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156107c757600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b81101561085d5773ffffffffffffffffffffffffffffffffffffffff61084884610668565b16825260209283019290910190600101610822565b506020915083810382850152610874818a8c610795565b9050838103604085015261088981888a610795565b84810360608601528581529050818101600586901b820183018760005b8881101561093357601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b36030181126108e957600080fd5b8a01868101903567ffffffffffffffff81111561090557600080fd5b80360382131561091457600080fd5b61091f8582846107e4565b9588019594505050908501906001016108a6565b50909e9d5050505050505050505050505050565b60005b8381101561096257818101518382015260200161094a565b83811115610971576000848401525b50505050565b6000815180845261098f816020860160208601610947565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201528260408201526080606082015260006109de6080830184610977565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610a20816017850160208801610947565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610a5d816028840160208801610947565b01602801949350505050565b6020815260006105516020830184610977565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ae357610ae3610a7c565b500290565b60008219821115610afb57610afb610a7c565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610b3e57610b3e610a7c565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea26469706673582212200b63a12121082f38b0395d39340e8bfef5a36b355ee0dd196b3b0837847f1d1264736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806368da19ec1461005157806372642f5614610066578063a217fddf14610079578063d539139314610093575b600080fd5b61006461005f3660046105a4565b6100ba565b005b6100646100743660046106c0565b61016b565b610081600081565b60405190815260200160405180910390f35b6100817f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610210565b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c5039061012e908c908c908c908c908c908c908c908c9060040161080f565b600060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b50505050505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019581610210565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906101d79088908890889088906004016109a3565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b505050505050505050565b61021a813361021d565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166102e15761027c816102e5565b61028783602061030e565b6040516020016102989291906109e8565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102d891600401610a69565b60405180910390fd5b5050565b606061030873ffffffffffffffffffffffffffffffffffffffff8316601461030e565b92915050565b6060600061031d836002610aab565b610328906002610ae8565b67ffffffffffffffff81111561034057610340610691565b6040519080825280601f01601f19166020018201604052801561036a576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103a1576103a1610b00565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061040457610404610b00565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610440846002610aab565b61044b906001610ae8565b90505b60018111156104e8577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061048c5761048c610b00565b1a60f81b8282815181106104a2576104a2610b00565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936104e181610b2f565b905061044e565b508315610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102d8565b9392505050565b60008083601f84011261056a57600080fd5b50813567ffffffffffffffff81111561058257600080fd5b6020830191508360208260051b850101111561059d57600080fd5b9250929050565b6000806000806000806000806080898b0312156105c057600080fd5b883567ffffffffffffffff808211156105d857600080fd5b6105e48c838d01610558565b909a50985060208b01359150808211156105fd57600080fd5b6106098c838d01610558565b909850965060408b013591508082111561062257600080fd5b61062e8c838d01610558565b909650945060608b013591508082111561064757600080fd5b506106548b828c01610558565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461068c57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156106d657600080fd5b6106df85610668565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561070a57600080fd5b818701915087601f83011261071e57600080fd5b81358181111561073057610730610691565b604051601f8201601f19908116603f0116810190838211818310171561075857610758610691565b816040528281528a602084870101111561077157600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156107c757600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b81101561085d5773ffffffffffffffffffffffffffffffffffffffff61084884610668565b16825260209283019290910190600101610822565b506020915083810382850152610874818a8c610795565b9050838103604085015261088981888a610795565b84810360608601528581529050818101600586901b820183018760005b8881101561093357601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b36030181126108e957600080fd5b8a01868101903567ffffffffffffffff81111561090557600080fd5b80360382131561091457600080fd5b61091f8582846107e4565b9588019594505050908501906001016108a6565b50909e9d5050505050505050505050505050565b60005b8381101561096257818101518382015260200161094a565b83811115610971576000848401525b50505050565b6000815180845261098f816020860160208601610947565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201528260408201526080606082015260006109de6080830184610977565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610a20816017850160208801610947565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610a5d816028840160208801610947565b01602801949350505050565b6020815260006105516020830184610977565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ae357610ae3610a7c565b500290565b60008219821115610afb57610afb610a7c565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610b3e57610b3e610a7c565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea26469706673582212200b63a12121082f38b0395d39340e8bfef5a36b355ee0dd196b3b0837847f1d1264736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/roles/AccessControlInternal.sol\";\nimport \"../../extensions/mintable/IERC1155MintableExtension.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155MintableRoleBased.sol\";\n\n/**\n * @title ERC1155 - Mint as role\n * @notice Allow minting for grantees of MINTER_ROLE.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC1155MintableExtension\n * @custom:provides-interfaces IERC1155MintableRoleBased\n */\ncontract ERC1155MintableRoleBased is IERC1155MintableRoleBased, AccessControlInternal {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    /**\n     * @inheritdoc IERC1155MintableRoleBased\n     */\n    function mintByRole(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual onlyRole(MINTER_ROLE) {\n        IERC1155MintableExtension(address(this)).mintByFacet(to, id, amount, data);\n    }\n\n    /**\n     * @inheritdoc IERC1155MintableRoleBased\n     */\n    function mintByRole(\n        address[] calldata tos,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes[] calldata datas\n    ) public virtual onlyRole(MINTER_ROLE) {\n        IERC1155MintableExtension(address(this)).mintByFacet(tos, ids, amounts, datas);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBasedERC2771": {
    "fqn": "flair-sdk:token/ERC1155/facets/minting/ERC1155MintableRoleBasedERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0xE871Fc5dF3180bBCf986aC56a7e2503753dD5676",
      "goerli": "0xE871Fc5dF3180bBCf986aC56a7e2503753dD5676"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155MintableRoleBasedERC2771",
      "sourceName": "src/token/ERC1155/facets/minting/ERC1155MintableRoleBasedERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610c21806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806368da19ec1461005157806372642f5614610066578063a217fddf14610079578063d539139314610093575b600080fd5b61006461005f36600461062b565b6100ba565b005b610064610074366004610747565b61016b565b610081600081565b60405190815260200160405180910390f35b6100817f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610210565b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c5039061012e908c908c908c908c908c908c908c908c90600401610896565b600060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b50505050505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019581610210565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906101d7908890889088908890600401610a2a565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b505050505050505050565b6102218161021c610224565b610233565b50565b600061022e6102fb565b905090565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166102f7576102928161036c565b61029d836020610395565b6040516020016102ae929190610a6f565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102ee91600401610af0565b60405180910390fd5b5050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361036757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b606061038f73ffffffffffffffffffffffffffffffffffffffff83166014610395565b92915050565b606060006103a4836002610b32565b6103af906002610b6f565b67ffffffffffffffff8111156103c7576103c7610718565b6040519080825280601f01601f1916602001820160405280156103f1576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061042857610428610b87565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061048b5761048b610b87565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006104c7846002610b32565b6104d2906001610b6f565b90505b600181111561056f577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061051357610513610b87565b1a60f81b82828151811061052957610529610b87565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361056881610bb6565b90506104d5565b5083156105d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102ee565b9392505050565b60008083601f8401126105f157600080fd5b50813567ffffffffffffffff81111561060957600080fd5b6020830191508360208260051b850101111561062457600080fd5b9250929050565b6000806000806000806000806080898b03121561064757600080fd5b883567ffffffffffffffff8082111561065f57600080fd5b61066b8c838d016105df565b909a50985060208b013591508082111561068457600080fd5b6106908c838d016105df565b909850965060408b01359150808211156106a957600080fd5b6106b58c838d016105df565b909650945060608b01359150808211156106ce57600080fd5b506106db8b828c016105df565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461071357600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561075d57600080fd5b610766856106ef565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561079157600080fd5b818701915087601f8301126107a557600080fd5b8135818111156107b7576107b7610718565b604051601f8201601f19908116603f011681019083821181831017156107df576107df610718565b816040528281528a60208487010111156107f857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561084e57600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b8110156108e45773ffffffffffffffffffffffffffffffffffffffff6108cf846106ef565b168252602092830192909101906001016108a9565b5060209150838103828501526108fb818a8c61081c565b9050838103604085015261091081888a61081c565b84810360608601528581529050818101600586901b820183018760005b888110156109ba57601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b360301811261097057600080fd5b8a01868101903567ffffffffffffffff81111561098c57600080fd5b80360382131561099b57600080fd5b6109a685828461086b565b95880195945050509085019060010161092d565b50909e9d5050505050505050505050505050565b60005b838110156109e95781810151838201526020016109d1565b838111156109f8576000848401525b50505050565b60008151808452610a168160208601602086016109ce565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff85168152836020820152826040820152608060608201526000610a6560808301846109fe565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610aa78160178501602088016109ce565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610ae48160288401602088016109ce565b01602801949350505050565b6020815260006105d860208301846109fe565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b6a57610b6a610b03565b500290565b60008219821115610b8257610b82610b03565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610bc557610bc5610b03565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122055fa655626a77f8ef575e59840ea34550e8245341aa088bf320dc63e07bb7d4764736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806368da19ec1461005157806372642f5614610066578063a217fddf14610079578063d539139314610093575b600080fd5b61006461005f36600461062b565b6100ba565b005b610064610074366004610747565b61016b565b610081600081565b60405190815260200160405180910390f35b6100817f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610210565b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c5039061012e908c908c908c908c908c908c908c908c90600401610896565b600060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b50505050505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019581610210565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906101d7908890889088908890600401610a2a565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b505050505050505050565b6102218161021c610224565b610233565b50565b600061022e6102fb565b905090565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166102f7576102928161036c565b61029d836020610395565b6040516020016102ae929190610a6f565b60408051601f19818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102ee91600401610af0565b60405180910390fd5b5050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361036757507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b606061038f73ffffffffffffffffffffffffffffffffffffffff83166014610395565b92915050565b606060006103a4836002610b32565b6103af906002610b6f565b67ffffffffffffffff8111156103c7576103c7610718565b6040519080825280601f01601f1916602001820160405280156103f1576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061042857610428610b87565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061048b5761048b610b87565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006104c7846002610b32565b6104d2906001610b6f565b90505b600181111561056f577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061051357610513610b87565b1a60f81b82828151811061052957610529610b87565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361056881610bb6565b90506104d5565b5083156105d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102ee565b9392505050565b60008083601f8401126105f157600080fd5b50813567ffffffffffffffff81111561060957600080fd5b6020830191508360208260051b850101111561062457600080fd5b9250929050565b6000806000806000806000806080898b03121561064757600080fd5b883567ffffffffffffffff8082111561065f57600080fd5b61066b8c838d016105df565b909a50985060208b013591508082111561068457600080fd5b6106908c838d016105df565b909850965060408b01359150808211156106a957600080fd5b6106b58c838d016105df565b909650945060608b01359150808211156106ce57600080fd5b506106db8b828c016105df565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461071357600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000806000806080858703121561075d57600080fd5b610766856106ef565b93506020850135925060408501359150606085013567ffffffffffffffff8082111561079157600080fd5b818701915087601f8301126107a557600080fd5b8135818111156107b7576107b7610718565b604051601f8201601f19908116603f011681019083821181831017156107df576107df610718565b816040528281528a60208487010111156107f857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561084e57600080fd5b8260051b8083602087013760009401602001938452509192915050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b6080808252810188905260008960a08301825b8b8110156108e45773ffffffffffffffffffffffffffffffffffffffff6108cf846106ef565b168252602092830192909101906001016108a9565b5060209150838103828501526108fb818a8c61081c565b9050838103604085015261091081888a61081c565b84810360608601528581529050818101600586901b820183018760005b888110156109ba57601f1985840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b360301811261097057600080fd5b8a01868101903567ffffffffffffffff81111561098c57600080fd5b80360382131561099b57600080fd5b6109a685828461086b565b95880195945050509085019060010161092d565b50909e9d5050505050505050505050505050565b60005b838110156109e95781810151838201526020016109d1565b838111156109f8576000848401525b50505050565b60008151808452610a168160208601602086016109ce565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff85168152836020820152826040820152608060608201526000610a6560808301846109fe565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610aa78160178501602088016109ce565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610ae48160288401602088016109ce565b01602801949350505050565b6020815260006105d860208301846109fe565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b6a57610b6a610b03565b500290565b60008219821115610b8257610b82610b03565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081610bc557610bc5610b03565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea264697066735822122055fa655626a77f8ef575e59840ea34550e8245341aa088bf320dc63e07bb7d4764736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./ERC1155MintableRoleBased.sol\";\n\n/**\n * @title ERC1155 - Mint as role - with meta transactions\n * @notice Allow minting for grantees of MINTER_ROLE with meta-transactions supported via ERC2771.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC1155MintableExtension\n * @custom:provides-interfaces IERC1155MintableRoleBased\n */\ncontract ERC1155MintableRoleBasedERC2771 is ERC1155MintableRoleBased, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyOwnable": {
    "fqn": "flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0xb90f12C4EF97f42E76A86A8e46c8694a726A6aCb",
      "goerli": "0xb90f12C4EF97f42E76A86A8e46c8694a726A6aCb"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155SupplyOwnable",
      "sourceName": "src/token/ERC1155/facets/supply/ERC1155SupplyOwnable.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyFrozen",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "freezeMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "freezeMaxSupplyBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256"
            }
          ],
          "name": "setMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "newValues",
              "type": "uint256[]"
            }
          ],
          "name": "setMaxSupplyBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b506107db806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806337da577c146100515780636cf6a3fa146100665780636d81b80e14610079578063c67b4f161461008c575b600080fd5b61006461005f3660046105e2565b61009f565b005b610064610074366004610650565b6101dd565b6100646100873660046106bc565b610336565b61006461009a3660046106fe565b61045c565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60008281527f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa046729602052604090205460ff16156101ac576040517f600d428700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b60005b83811015610323577f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa04672960008686848181106102bd576102bd610717565b602090810292909201358352508101919091526040016000205460ff1615610311576040517f600d428700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061031b81610746565b915050610280565b5061033084848484610554565b50505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146103d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b60005b818110156104575760017f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa046729600085858581811061041857610418610717565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550808061044f90610746565b9150506103d9565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146104fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b60009081527f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa0467296020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b7f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b848110156105da5783838281811061059257610592610717565b905060200201358260008888858181106105ae576105ae610717565b9050602002013581526020019081526020016000208190555080806105d290610746565b915050610578565b505050505050565b600080604083850312156105f557600080fd5b50508035926020909101359150565b60008083601f84011261061657600080fd5b50813567ffffffffffffffff81111561062e57600080fd5b6020830191508360208260051b850101111561064957600080fd5b9250929050565b6000806000806040858703121561066657600080fd5b843567ffffffffffffffff8082111561067e57600080fd5b61068a88838901610604565b909650945060208701359150808211156106a357600080fd5b506106b087828801610604565b95989497509550505050565b600080602083850312156106cf57600080fd5b823567ffffffffffffffff8111156106e657600080fd5b6106f285828601610604565b90969095509350505050565b60006020828403121561071057600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361079e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212208995f3c18173cf261d0e616b916ec0f77a9766e3f638224c8b2f2eef71625e2764736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806337da577c146100515780636cf6a3fa146100665780636d81b80e14610079578063c67b4f161461008c575b600080fd5b61006461005f3660046105e2565b61009f565b005b610064610074366004610650565b6101dd565b6100646100873660046106bc565b610336565b61006461009a3660046106fe565b61045c565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60008281527f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa046729602052604090205460ff16156101ac576040517f600d428700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60009182527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461027d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b60005b83811015610323577f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa04672960008686848181106102bd576102bd610717565b602090810292909201358352508101919091526040016000205460ff1615610311576040517f600d428700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8061031b81610746565b915050610280565b5061033084848484610554565b50505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146103d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b60005b818110156104575760017f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa046729600085858581811061041857610418610717565b90506020020135815260200190815260200160002060006101000a81548160ff021916908315150217905550808061044f90610746565b9150506103d9565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146104fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b60009081527f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa0467296020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b7f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b848110156105da5783838281811061059257610592610717565b905060200201358260008888858181106105ae576105ae610717565b9050602002013581526020019081526020016000208190555080806105d290610746565b915050610578565b505050505050565b600080604083850312156105f557600080fd5b50508035926020909101359150565b60008083601f84011261061657600080fd5b50813567ffffffffffffffff81111561062e57600080fd5b6020830191508360208260051b850101111561064957600080fd5b9250929050565b6000806000806040858703121561066657600080fd5b843567ffffffffffffffff8082111561067e57600080fd5b61068a88838901610604565b909650945060208701359150808211156106a357600080fd5b506106b087828801610604565b95989497509550505050565b600080602083850312156106cf57600080fd5b823567ffffffffffffffff8111156106e657600080fd5b6106f285828601610604565b90969095509350505050565b60006020828403121561071057600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361079e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212208995f3c18173cf261d0e616b916ec0f77a9766e3f638224c8b2f2eef71625e2764736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../extensions/supply/ERC1155SupplyInternal.sol\";\nimport \"../../extensions/supply/ERC1155SupplyStorage.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"./ERC1155SupplyAdminStorage.sol\";\nimport \"./IERC1155SupplyAdmin.sol\";\n\n/**\n * @title ERC1155 - Supply - Admin - Ownable\n * @notice Allows owner of a EIP-1155 contract to change max supply of token IDs.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies IERC1155SupplyExtension\n * @custom:provides-interfaces IERC1155SupplyAdmin\n */\ncontract ERC1155SupplyOwnable is IERC1155SupplyAdmin, ERC1155SupplyInternal, OwnableInternal {\n    using ERC1155SupplyStorage for ERC1155SupplyStorage.Layout;\n    using ERC1155SupplyAdminStorage for ERC1155SupplyAdminStorage.Layout;\n\n    function setMaxSupply(uint256 tokenId, uint256 newValue) public virtual onlyOwner {\n        if (ERC1155SupplyAdminStorage.layout().maxSupplyFrozen[tokenId]) {\n            revert ErrMaxSupplyFrozen();\n        }\n\n        _setMaxSupply(tokenId, newValue);\n    }\n\n    function setMaxSupplyBatch(uint256[] calldata tokenIds, uint256[] calldata newValues) public virtual onlyOwner {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            if (ERC1155SupplyAdminStorage.layout().maxSupplyFrozen[tokenIds[i]]) {\n                revert ErrMaxSupplyFrozen();\n            }\n        }\n\n        _setMaxSupplyBatch(tokenIds, newValues);\n    }\n\n    function freezeMaxSupply(uint256 tokenId) public virtual onlyOwner {\n        ERC1155SupplyAdminStorage.layout().maxSupplyFrozen[tokenId] = true;\n    }\n\n    function freezeMaxSupplyBatch(uint256[] calldata tokenIds) public virtual onlyOwner {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            ERC1155SupplyAdminStorage.layout().maxSupplyFrozen[tokenIds[i]] = true;\n        }\n    }\n\n    /**\n     * @dev Seta maximum amount of tokens possible to exist for a given token ID.\n     */\n    function _setMaxSupply(uint256 tokenId, uint256 newValue) internal {\n        ERC1155SupplyStorage.layout().maxSupply[tokenId] = newValue;\n    }\n\n    /**\n     * @dev Sets maximum amount of tokens possible to exist for multiple token IDs.\n     */\n    function _setMaxSupplyBatch(uint256[] calldata tokenIds, uint256[] calldata newValues) internal {\n        mapping(uint256 => uint256) storage l = ERC1155SupplyStorage.layout().maxSupply;\n\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            l[tokenIds[i]] = newValues[i];\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSales": {
    "fqn": "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSales",
    "version": "2.14.0",
    "address": {
      "5": "0xae7Bf9Cd0b3B5198c447c35A94eB284F11d777dB",
      "goerli": "0xae7Bf9Cd0b3B5198c447c35A94eB284F11d777dB"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155TieredSales",
      "sourceName": "src/token/ERC1155/facets/sales/ERC1155TieredSales.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            }
          ],
          "name": "maxMintableForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxMintable",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "mintByTier",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            }
          ],
          "name": "onTierAllowlist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "remainingForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "reservedMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierToTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tierIds",
              "type": "uint256[]"
            }
          ],
          "name": "tierToTokenId",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tiers",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalReserved",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "verifySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "walletMintedByTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611dca806100206000396000f3fe6080604052600436106100c75760003560e01c806353367f0811610074578063ba09e6321161004e578063ba09e63214610365578063c71b0e1c14610385578063d36ed2f3146103b957600080fd5b806353367f08146102d95780635897f8781461032557806368c7d37c1461034557600080fd5b8063200cd62a116100a5578063200cd62a146102485780632cb9b2ac1461027857806351607bf4146102ac57600080fd5b8063039af9eb146100cc5780630b81f1801461017f5780631123f2ef146101d9575b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611932565b6103ce565b60405161017691906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152606085015160608501526080850151608085015260a085015160a085015260c085015160c085015260e085015160e0850152610100915080828601511682850152505092915050565b60405180910390f35b34801561018b57600080fd5b506101cb61019a366004611932565b60009081527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090205490565b604051908152602001610176565b3480156101e557600080fd5b506101cb6101f4366004611974565b60009182527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cc06020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205490565b34801561025457600080fd5b506102686102633660046119e2565b6104fd565b6040519015158152602001610176565b34801561028457600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd546101cb565b3480156102b857600080fd5b506102cc6102c7366004611a97565b61055e565b6040516101769190611ad9565b3480156102e557600080fd5b506101cb6102f4366004611932565b60009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf602052604090205490565b34801561033157600080fd5b506101cb610340366004611932565b610634565b34801561035157600080fd5b50610268610360366004611b1d565b6106ab565b34801561037157600080fd5b506101cb610380366004611b85565b6106c4565b34801561039157600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546101cb565b6103cc6103c7366004611bba565b6106d1565b005b61044c6040518061012001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5060009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe602090815260409182902082516101208101845281548152600182015492810192909252600281015473ffffffffffffffffffffffffffffffffffffffff908116938301939093526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008015490911661010082015290565b60008681527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600801546105539073ffffffffffffffffffffffffffffffffffffffff16888888888888610888565b979650505050505050565b606060008267ffffffffffffffff81111561057b5761057b611c4e565b6040519080825280602002602001820160405280156105a4578160200160208202803683370190505b50905060005b8381101561062c577f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460008686848181106105e7576105e7611c7d565b9050602002013581526020019081526020016000205482828151811061060f5761060f611c7d565b60209081029190910101528061062481611cdb565b9150506105aa565b509392505050565b60007fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb8161066184610913565b60008581526004840160209081526040808320546003870190925282206007015492935090916106919190611cf5565b9050808210156106a357509392505050565b949350505050565b60006106ba86868686866109f4565b9695505050505050565b60006106a3848484610a5b565b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e054036107475760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e05561077b8888888888888888610ce0565b60008881527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460205260408082205481517fb164884b0000000000000000000000000000000000000000000000000000000081523360048201526024810191909152604481018a905260806064820152608481018390529051309263b164884b9260a4808201939182900301818387803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b5050505060016108597f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e090565b555050505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90565b60004282101561089a57506000610553565b60006108ea85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108e492508c91508b90508a88610f4c565b90610fd7565b73ffffffffffffffffffffffffffffffffffffffff8a8116911614915050979650505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546000917fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb916109869190611cf5565b61098f84610ff3565b6109999190611cf5565b6000848152600383016020526040902060060154909250156109ee57600083815260048201602090815260408083205460038501909252909120600601546109e19190611cf5565b6109eb9083611d0c565b91505b50919050565b60006106ba838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610a369250610864915050565b60008981526003919091016020526040902060050154610a5688886110fe565b611159565b60008381527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600401547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90610afa5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f45584953545300000000000000000000000000000000000000000000604482015260640161073e565b6000858152600382016020526040902054421015610b5a5760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f53544152544544000000000000000000000000000000000000000000604482015260640161073e565b6000858152600382016020526040902060010154421115610bbd5760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f454e44454400000000000000000000000000000000000000604482015260640161073e565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684528252808320548884526003850190925290912060040154610c0a9190611cf5565b6000868152600583016020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020549092508311610c8d5760405162461bcd60e51b815260206004820152600f60248201527f4d415845445f414c4c4f57414e43450000000000000000000000000000000000604482015260640161073e565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812054610cc99085611cf5565b905080831115610cd7578092505b50509392505050565b610cf188338989898989898961116f565b60008881527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020600201547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9073ffffffffffffffffffffffffffffffffffffffff16610dd25760008981526003808301602052604090912001543490610d7f908a90611d24565b1115610dcd5760405162461bcd60e51b815260206004820152601360248201527f494e53554646494349454e545f414d4f554e5400000000000000000000000000604482015260640161073e565b610eb9565b600089815260038281016020526040909120600281015491015473ffffffffffffffffffffffffffffffffffffffff909116906323b872dd9033903090610e1a908d90611d24565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb79190611d43565b505b60008981526005820160209081526040808320338452909152812080548a9290610ee4908490611d0c565b90915550506000898152600482016020526040812080548a9290610f09908490611d0c565b9091555050600089815260038201602052604090206006015415610f415787816002016000828254610f3b9190611d0c565b90915550505b505050505050505050565b604080517f9e1fb3640a418bdeb2ea9d1423d656894db5c96e895e93867d5bb7862df246ac602082015290810185905273ffffffffffffffffffffffffffffffffffffffff841660608201526080810183905260a08101829052600090819060c0016040516020818303038152906040528051906020012090506106ba610fd16113f4565b8261152d565b6000806000610fe6858561156f565b9150915061062c816115b4565b7f744f4bd40000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed26406020527f35d3cc196fdbb37c639d9ccf02c0ac54b3a84c388495dbf9ab724144133fc6255460ff1661106f5750600019919050565b60008281527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460209081526040808320548084527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea58352818420547f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6909352908320549092916106a391611cf5565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b60008261116685846117a3565b14949350505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb600061119d8b8b8a610a5b565b9050808911156111ef5760405162461bcd60e51b815260206004820152600b60248201527f455843454544535f4d4158000000000000000000000000000000000000000000604482015260640161073e565b6111f88b610913565b8911156112475760405162461bcd60e51b815260206004820152600e60248201527f455843454544535f535550504c59000000000000000000000000000000000000604482015260640161073e565b60008b81526003830160209081526040808320600701546004860190925290912054611273908b611d0c565b11156112c15760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e0000000000000000000000000000604482015260640161073e565b60008b815260038301602052604090206005015415611333576112e78b8b8a8a8a6109f4565b6113335760405162461bcd60e51b815260206004820152600f60248201527f4e4f545f414c4c4f574c49535445440000000000000000000000000000000000604482015260640161073e565b60008b815260038301602052604090206008015473ffffffffffffffffffffffffffffffffffffffff16156113e75760008b815260038301602052604090206008015461139b9073ffffffffffffffffffffffffffffffffffffffff168c8c8b898989610888565b6113e75760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015260640161073e565b5050505050505050505050565b4660009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb60205260408120549081900361152a5750604080518082018252600b81527f54696572656453616c657300000000000000000000000000000000000000000060209182015281518083018352600381527f322e7800000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0a8f5cd262c609ce448522f0993fd8cd7e4c5487b979cac486662358ea244890818401527ff5f84182131be97a41a3d4efb82d0a0d5698d76e6ec4dc9589738f1341d900c960608201524660808201523060a0808301919091528351808303909101815260c090910190925281519101205b90565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620161113b565b60008082516041036115a55760208301516040840151606085015160001a611599878285856117e8565b945094505050506115ad565b506000905060025b9250929050565b60008160048111156115c8576115c8611d65565b036115d05750565b60018160048111156115e4576115e4611d65565b036116315760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161073e565b600281600481111561164557611645611d65565b036116925760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161073e565b60038160048111156116a6576116a6611d65565b036117195760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161073e565b600481600481111561172d5761172d611d65565b036117a05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161073e565b50565b600081815b845181101561062c576117d4828683815181106117c7576117c7611c7d565b6020026020010151611900565b9150806117e081611cdb565b9150506117a8565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561181f57506000905060036118f7565b8460ff16601b1415801561183757508460ff16601c14155b1561184857506000905060046118f7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561189c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166118f0576000600192509250506118f7565b9150600090505b94509492505050565b600081831061191c57600082815260208490526040902061192b565b60008381526020839052604090205b9392505050565b60006020828403121561194457600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461196f57600080fd5b919050565b6000806040838503121561198757600080fd5b823591506119976020840161194b565b90509250929050565b60008083601f8401126119b257600080fd5b50813567ffffffffffffffff8111156119ca57600080fd5b6020830191508360208285010111156115ad57600080fd5b60008060008060008060a087890312156119fb57600080fd5b86359550611a0b6020880161194b565b945060408701359350606087013567ffffffffffffffff811115611a2e57600080fd5b611a3a89828a016119a0565b979a9699509497949695608090950135949350505050565b60008083601f840112611a6457600080fd5b50813567ffffffffffffffff811115611a7c57600080fd5b6020830191508360208260051b85010111156115ad57600080fd5b60008060208385031215611aaa57600080fd5b823567ffffffffffffffff811115611ac157600080fd5b611acd85828601611a52565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611b1157835183529284019291840191600101611af5565b50909695505050505050565b600080600080600060808688031215611b3557600080fd5b85359450611b456020870161194b565b935060408601359250606086013567ffffffffffffffff811115611b6857600080fd5b611b7488828901611a52565b969995985093965092949392505050565b600080600060608486031215611b9a57600080fd5b83359250611baa6020850161194b565b9150604084013590509250925092565b60008060008060008060008060c0898b031215611bd657600080fd5b883597506020890135965060408901359550606089013567ffffffffffffffff80821115611c0357600080fd5b611c0f8c838d01611a52565b909750955060808b0135915080821115611c2857600080fd5b50611c358b828c016119a0565b999c989b50969995989497949560a00135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203611cee57611cee611cac565b5060010190565b600082821015611d0757611d07611cac565b500390565b60008219821115611d1f57611d1f611cac565b500190565b6000816000190483118215151615611d3e57611d3e611cac565b500290565b600060208284031215611d5557600080fd5b8151801515811461192b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220453a867cecc9ec7250e1b2be5ad3098b0fcdeb013215eb02b6f2dbdda4166c6164736f6c634300080f0033",
      "deployedBytecode": "0x6080604052600436106100c75760003560e01c806353367f0811610074578063ba09e6321161004e578063ba09e63214610365578063c71b0e1c14610385578063d36ed2f3146103b957600080fd5b806353367f08146102d95780635897f8781461032557806368c7d37c1461034557600080fd5b8063200cd62a116100a5578063200cd62a146102485780632cb9b2ac1461027857806351607bf4146102ac57600080fd5b8063039af9eb146100cc5780630b81f1801461017f5780631123f2ef146101d9575b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611932565b6103ce565b60405161017691906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152606085015160608501526080850151608085015260a085015160a085015260c085015160c085015260e085015160e0850152610100915080828601511682850152505092915050565b60405180910390f35b34801561018b57600080fd5b506101cb61019a366004611932565b60009081527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090205490565b604051908152602001610176565b3480156101e557600080fd5b506101cb6101f4366004611974565b60009182527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cc06020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205490565b34801561025457600080fd5b506102686102633660046119e2565b6104fd565b6040519015158152602001610176565b34801561028457600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd546101cb565b3480156102b857600080fd5b506102cc6102c7366004611a97565b61055e565b6040516101769190611ad9565b3480156102e557600080fd5b506101cb6102f4366004611932565b60009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf602052604090205490565b34801561033157600080fd5b506101cb610340366004611932565b610634565b34801561035157600080fd5b50610268610360366004611b1d565b6106ab565b34801561037157600080fd5b506101cb610380366004611b85565b6106c4565b34801561039157600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546101cb565b6103cc6103c7366004611bba565b6106d1565b005b61044c6040518061012001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5060009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe602090815260409182902082516101208101845281548152600182015492810192909252600281015473ffffffffffffffffffffffffffffffffffffffff908116938301939093526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008015490911661010082015290565b60008681527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600801546105539073ffffffffffffffffffffffffffffffffffffffff16888888888888610888565b979650505050505050565b606060008267ffffffffffffffff81111561057b5761057b611c4e565b6040519080825280602002602001820160405280156105a4578160200160208202803683370190505b50905060005b8381101561062c577f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460008686848181106105e7576105e7611c7d565b9050602002013581526020019081526020016000205482828151811061060f5761060f611c7d565b60209081029190910101528061062481611cdb565b9150506105aa565b509392505050565b60007fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb8161066184610913565b60008581526004840160209081526040808320546003870190925282206007015492935090916106919190611cf5565b9050808210156106a357509392505050565b949350505050565b60006106ba86868686866109f4565b9695505050505050565b60006106a3848484610a5b565b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e054036107475760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e05561077b8888888888888888610ce0565b60008881527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460205260408082205481517fb164884b0000000000000000000000000000000000000000000000000000000081523360048201526024810191909152604481018a905260806064820152608481018390529051309263b164884b9260a4808201939182900301818387803b15801561081857600080fd5b505af115801561082c573d6000803e3d6000fd5b5050505060016108597f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e090565b555050505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90565b60004282101561089a57506000610553565b60006108ea85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108e492508c91508b90508a88610f4c565b90610fd7565b73ffffffffffffffffffffffffffffffffffffffff8a8116911614915050979650505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546000917fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb916109869190611cf5565b61098f84610ff3565b6109999190611cf5565b6000848152600383016020526040902060060154909250156109ee57600083815260048201602090815260408083205460038501909252909120600601546109e19190611cf5565b6109eb9083611d0c565b91505b50919050565b60006106ba838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610a369250610864915050565b60008981526003919091016020526040902060050154610a5688886110fe565b611159565b60008381527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600401547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90610afa5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f45584953545300000000000000000000000000000000000000000000604482015260640161073e565b6000858152600382016020526040902054421015610b5a5760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f53544152544544000000000000000000000000000000000000000000604482015260640161073e565b6000858152600382016020526040902060010154421115610bbd5760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f454e44454400000000000000000000000000000000000000604482015260640161073e565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684528252808320548884526003850190925290912060040154610c0a9190611cf5565b6000868152600583016020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020549092508311610c8d5760405162461bcd60e51b815260206004820152600f60248201527f4d415845445f414c4c4f57414e43450000000000000000000000000000000000604482015260640161073e565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812054610cc99085611cf5565b905080831115610cd7578092505b50509392505050565b610cf188338989898989898961116f565b60008881527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020600201547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9073ffffffffffffffffffffffffffffffffffffffff16610dd25760008981526003808301602052604090912001543490610d7f908a90611d24565b1115610dcd5760405162461bcd60e51b815260206004820152601360248201527f494e53554646494349454e545f414d4f554e5400000000000000000000000000604482015260640161073e565b610eb9565b600089815260038281016020526040909120600281015491015473ffffffffffffffffffffffffffffffffffffffff909116906323b872dd9033903090610e1a908d90611d24565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610e93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb79190611d43565b505b60008981526005820160209081526040808320338452909152812080548a9290610ee4908490611d0c565b90915550506000898152600482016020526040812080548a9290610f09908490611d0c565b9091555050600089815260038201602052604090206006015415610f415787816002016000828254610f3b9190611d0c565b90915550505b505050505050505050565b604080517f9e1fb3640a418bdeb2ea9d1423d656894db5c96e895e93867d5bb7862df246ac602082015290810185905273ffffffffffffffffffffffffffffffffffffffff841660608201526080810183905260a08101829052600090819060c0016040516020818303038152906040528051906020012090506106ba610fd16113f4565b8261152d565b6000806000610fe6858561156f565b9150915061062c816115b4565b7f744f4bd40000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed26406020527f35d3cc196fdbb37c639d9ccf02c0ac54b3a84c388495dbf9ab724144133fc6255460ff1661106f5750600019919050565b60008281527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460209081526040808320548084527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea58352818420547f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6909352908320549092916106a391611cf5565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b60008261116685846117a3565b14949350505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb600061119d8b8b8a610a5b565b9050808911156111ef5760405162461bcd60e51b815260206004820152600b60248201527f455843454544535f4d4158000000000000000000000000000000000000000000604482015260640161073e565b6111f88b610913565b8911156112475760405162461bcd60e51b815260206004820152600e60248201527f455843454544535f535550504c59000000000000000000000000000000000000604482015260640161073e565b60008b81526003830160209081526040808320600701546004860190925290912054611273908b611d0c565b11156112c15760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e0000000000000000000000000000604482015260640161073e565b60008b815260038301602052604090206005015415611333576112e78b8b8a8a8a6109f4565b6113335760405162461bcd60e51b815260206004820152600f60248201527f4e4f545f414c4c4f574c49535445440000000000000000000000000000000000604482015260640161073e565b60008b815260038301602052604090206008015473ffffffffffffffffffffffffffffffffffffffff16156113e75760008b815260038301602052604090206008015461139b9073ffffffffffffffffffffffffffffffffffffffff168c8c8b898989610888565b6113e75760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015260640161073e565b5050505050505050505050565b4660009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb60205260408120549081900361152a5750604080518082018252600b81527f54696572656453616c657300000000000000000000000000000000000000000060209182015281518083018352600381527f322e7800000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0a8f5cd262c609ce448522f0993fd8cd7e4c5487b979cac486662358ea244890818401527ff5f84182131be97a41a3d4efb82d0a0d5698d76e6ec4dc9589738f1341d900c960608201524660808201523060a0808301919091528351808303909101815260c090910190925281519101205b90565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620161113b565b60008082516041036115a55760208301516040840151606085015160001a611599878285856117e8565b945094505050506115ad565b506000905060025b9250929050565b60008160048111156115c8576115c8611d65565b036115d05750565b60018160048111156115e4576115e4611d65565b036116315760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161073e565b600281600481111561164557611645611d65565b036116925760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161073e565b60038160048111156116a6576116a6611d65565b036117195760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161073e565b600481600481111561172d5761172d611d65565b036117a05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161073e565b50565b600081815b845181101561062c576117d4828683815181106117c7576117c7611c7d565b6020026020010151611900565b9150806117e081611cdb565b9150506117a8565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561181f57506000905060036118f7565b8460ff16601b1415801561183757508460ff16601c14155b1561184857506000905060046118f7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561189c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166118f0576000600192509250506118f7565b9150600090505b94509492505050565b600081831061191c57600082815260208490526040902061192b565b60008381526020839052604090205b9392505050565b60006020828403121561194457600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461196f57600080fd5b919050565b6000806040838503121561198757600080fd5b823591506119976020840161194b565b90509250929050565b60008083601f8401126119b257600080fd5b50813567ffffffffffffffff8111156119ca57600080fd5b6020830191508360208285010111156115ad57600080fd5b60008060008060008060a087890312156119fb57600080fd5b86359550611a0b6020880161194b565b945060408701359350606087013567ffffffffffffffff811115611a2e57600080fd5b611a3a89828a016119a0565b979a9699509497949695608090950135949350505050565b60008083601f840112611a6457600080fd5b50813567ffffffffffffffff811115611a7c57600080fd5b6020830191508360208260051b85010111156115ad57600080fd5b60008060208385031215611aaa57600080fd5b823567ffffffffffffffff811115611ac157600080fd5b611acd85828601611a52565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611b1157835183529284019291840191600101611af5565b50909695505050505050565b600080600080600060808688031215611b3557600080fd5b85359450611b456020870161194b565b935060408601359250606086013567ffffffffffffffff811115611b6857600080fd5b611b7488828901611a52565b969995985093965092949392505050565b600080600060608486031215611b9a57600080fd5b83359250611baa6020850161194b565b9150604084013590509250925092565b60008060008060008060008060c0898b031215611bd657600080fd5b883597506020890135965060408901359550606089013567ffffffffffffffff80821115611c0357600080fd5b611c0f8c838d01611a52565b909750955060808b0135915080821115611c2857600080fd5b50611c358b828c016119a0565b999c989b50969995989497949560a00135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203611cee57611cee611cac565b5060010190565b600082821015611d0757611d07611cac565b500390565b60008219821115611d1f57611d1f611cac565b500190565b6000816000190483118215151615611d3e57611d3e611cac565b500290565b600060208284031215611d5557600080fd5b8151801515811461192b57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220453a867cecc9ec7250e1b2be5ad3098b0fcdeb013215eb02b6f2dbdda4166c6164736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../introspection/ERC165Storage.sol\";\nimport \"../../../../security/ReentrancyGuard.sol\";\nimport \"../../../../finance/sales/TieredSales.sol\";\nimport \"../../extensions/mintable/IERC1155MintableExtension.sol\";\nimport \"../../extensions/supply/ERC1155SupplyStorage.sol\";\nimport \"../../extensions/supply/IERC1155SupplyExtension.sol\";\nimport \"./ERC1155TieredSalesStorage.sol\";\nimport \"./IERC1155TieredSales.sol\";\n\n/**\n * @title ERC1155 - Tiered Sales\n * @notice Sales mechanism for ERC1155 NFTs with multiple tiered pricing, allowlist and allocation plans.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC1155MintableExtension\n * @custom:provides-interfaces ITieredSales IERC1155TieredSales\n */\ncontract ERC1155TieredSales is IERC1155TieredSales, ReentrancyGuard, TieredSales {\n    using ERC165Storage for ERC165Storage.Layout;\n    using ERC1155TieredSalesStorage for ERC1155TieredSalesStorage.Layout;\n    using ERC1155SupplyStorage for ERC1155SupplyStorage.Layout;\n\n    function mintByTier(\n        uint256 tierId,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof,\n        bytes calldata signature,\n        uint256 validUntil\n    ) external payable virtual nonReentrant {\n        super._executeSale(tierId, count, maxAllowance, allowlistProof, signature, validUntil);\n\n        IERC1155MintableExtension(address(this)).mintByFacet(\n            _msgSender(),\n            ERC1155TieredSalesStorage.layout().tierToTokenId[tierId],\n            count,\n            \"\"\n        );\n    }\n\n    function tierToTokenId(uint256 tierId) external view virtual returns (uint256) {\n        return ERC1155TieredSalesStorage.layout().tierToTokenId[tierId];\n    }\n\n    function tierToTokenId(uint256[] calldata tierIds) external view virtual returns (uint256[] memory) {\n        uint256[] memory tokenIds = new uint256[](tierIds.length);\n\n        for (uint256 i = 0; i < tierIds.length; i++) {\n            tokenIds[i] = ERC1155TieredSalesStorage.layout().tierToTokenId[tierIds[i]];\n        }\n\n        return tokenIds;\n    }\n\n    function _remainingSupply(uint256 tierId) internal view virtual override returns (uint256) {\n        if (!ERC165Storage.layout().supportedInterfaces[type(IERC1155SupplyExtension).interfaceId]) {\n            return type(uint256).max;\n        }\n\n        uint256 tokenId = ERC1155TieredSalesStorage.layout().tierToTokenId[tierId];\n\n        uint256 remainingSupply = ERC1155SupplyStorage.layout().maxSupply[tokenId] -\n            ERC1155SupplyStorage.layout().totalSupply[tokenId];\n\n        return remainingSupply;\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesERC2771": {
    "fqn": "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0xA4c050edd78d26e0D3BF1e113cBa25E2c009585a",
      "goerli": "0xA4c050edd78d26e0D3BF1e113cBa25E2c009585a"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155TieredSalesERC2771",
      "sourceName": "src/token/ERC1155/facets/sales/ERC1155TieredSalesERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            }
          ],
          "name": "maxMintableForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxMintable",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "mintByTier",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            }
          ],
          "name": "onTierAllowlist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "remainingForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "reservedMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierToTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tierIds",
              "type": "uint256[]"
            }
          ],
          "name": "tierToTokenId",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tiers",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalReserved",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "verifySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "walletMintedByTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611ebb806100206000396000f3fe6080604052600436106100c75760003560e01c806353367f0811610074578063ba09e6321161004e578063ba09e63214610365578063c71b0e1c14610385578063d36ed2f3146103b957600080fd5b806353367f08146102d95780635897f8781461032557806368c7d37c1461034557600080fd5b8063200cd62a116100a5578063200cd62a146102485780632cb9b2ac1461027857806351607bf4146102ac57600080fd5b8063039af9eb146100cc5780630b81f1801461017f5780631123f2ef146101d9575b600080fd5b3480156100d857600080fd5b506100ec6100e7366004611a23565b6103ce565b60405161017691906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152606085015160608501526080850151608085015260a085015160a085015260c085015160c085015260e085015160e0850152610100915080828601511682850152505092915050565b60405180910390f35b34801561018b57600080fd5b506101cb61019a366004611a23565b60009081527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090205490565b604051908152602001610176565b3480156101e557600080fd5b506101cb6101f4366004611a65565b60009182527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cc06020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205490565b34801561025457600080fd5b50610268610263366004611ad3565b6104fd565b6040519015158152602001610176565b34801561028457600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd546101cb565b3480156102b857600080fd5b506102cc6102c7366004611b88565b61055e565b6040516101769190611bca565b3480156102e557600080fd5b506101cb6102f4366004611a23565b60009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf602052604090205490565b34801561033157600080fd5b506101cb610340366004611a23565b610634565b34801561035157600080fd5b50610268610360366004611c0e565b6106ab565b34801561037157600080fd5b506101cb610380366004611c76565b6106c4565b34801561039157600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546101cb565b6103cc6103c7366004611cab565b6106d1565b005b61044c6040518061012001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5060009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe602090815260409182902082516101208101845281548152600182015492810192909252600281015473ffffffffffffffffffffffffffffffffffffffff908116938301939093526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008015490911661010082015290565b60008681527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600801546105539073ffffffffffffffffffffffffffffffffffffffff168888888888886108a8565b979650505050505050565b606060008267ffffffffffffffff81111561057b5761057b611d3f565b6040519080825280602002602001820160405280156105a4578160200160208202803683370190505b50905060005b8381101561062c577f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460008686848181106105e7576105e7611d6e565b9050602002013581526020019081526020016000205482828151811061060f5761060f611d6e565b60209081029190910101528061062481611dcc565b9150506105aa565b509392505050565b60007fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb8161066184610933565b60008581526004840160209081526040808320546003870190925282206007015492935090916106919190611de6565b9050808210156106a357509392505050565b949350505050565b60006106ba8686868686610a14565b9695505050505050565b60006106a3848484610a7b565b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e054036107475760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e05561077b8888888888888888610d00565b3063b164884b610789610fbb565b7f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460008c815260209190915260408082205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff90931660048401526024830152604482018b905260806064830152608482015260a401600060405180830381600087803b15801561083857600080fd5b505af115801561084c573d6000803e3d6000fd5b5050505060016108797f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e090565b555050505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90565b6000428210156108ba57506000610553565b600061090a85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061090492508c91508b90508a88610fca565b90611055565b73ffffffffffffffffffffffffffffffffffffffff8a8116911614915050979650505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546000917fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb916109a69190611de6565b6109af84611071565b6109b99190611de6565b600084815260038301602052604090206006015490925015610a0e5760008381526004820160209081526040808320546003850190925290912060060154610a019190611de6565b610a0b9083611dfd565b91505b50919050565b60006106ba838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610a569250610884915050565b60008981526003919091016020526040902060050154610a76888861117c565b6111d7565b60008381527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600401547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90610b1a5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f45584953545300000000000000000000000000000000000000000000604482015260640161073e565b6000858152600382016020526040902054421015610b7a5760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f53544152544544000000000000000000000000000000000000000000604482015260640161073e565b6000858152600382016020526040902060010154421115610bdd5760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f454e44454400000000000000000000000000000000000000604482015260640161073e565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684528252808320548884526003850190925290912060040154610c2a9190611de6565b6000868152600583016020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020549092508311610cad5760405162461bcd60e51b815260206004820152600f60248201527f4d415845445f414c4c4f57414e43450000000000000000000000000000000000604482015260640161073e565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812054610ce99085611de6565b905080831115610cf7578092505b50509392505050565b610d1888610d0c610fbb565b898989898989896111ed565b60008881527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020600201547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9073ffffffffffffffffffffffffffffffffffffffff16610df95760008981526003808301602052604090912001543490610da6908a90611e15565b1115610df45760405162461bcd60e51b815260206004820152601360248201527f494e53554646494349454e545f414d4f554e5400000000000000000000000000604482015260640161073e565b610ef0565b600089815260038201602052604090206002015473ffffffffffffffffffffffffffffffffffffffff166323b872dd610e30610fbb565b60008c81526003808601602052604090912001543090610e51908d90611e15565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610eca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eee9190611e34565b505b600089815260058201602052604081208991610f0a610fbb565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f539190611dfd565b90915550506000898152600482016020526040812080548a9290610f78908490611dfd565b9091555050600089815260038201602052604090206006015415610fb05787816002016000828254610faa9190611dfd565b90915550505b505050505050505050565b6000610fc5611472565b905090565b604080517f9e1fb3640a418bdeb2ea9d1423d656894db5c96e895e93867d5bb7862df246ac602082015290810185905273ffffffffffffffffffffffffffffffffffffffff841660608201526080810183905260a08101829052600090819060c0016040516020818303038152906040528051906020012090506106ba61104f6114e6565b8261161e565b60008060006110648585611660565b9150915061062c816116a5565b7f744f4bd40000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed26406020527f35d3cc196fdbb37c639d9ccf02c0ac54b3a84c388495dbf9ab724144133fc6255460ff166110ed5750600019919050565b60008281527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460209081526040808320548084527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea58352818420547f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6909352908320549092916106a391611de6565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b6000826111e48584611894565b14949350505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb600061121b8b8b8a610a7b565b90508089111561126d5760405162461bcd60e51b815260206004820152600b60248201527f455843454544535f4d4158000000000000000000000000000000000000000000604482015260640161073e565b6112768b610933565b8911156112c55760405162461bcd60e51b815260206004820152600e60248201527f455843454544535f535550504c59000000000000000000000000000000000000604482015260640161073e565b60008b815260038301602090815260408083206007015460048601909252909120546112f1908b611dfd565b111561133f5760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e0000000000000000000000000000604482015260640161073e565b60008b8152600383016020526040902060050154156113b1576113658b8b8a8a8a610a14565b6113b15760405162461bcd60e51b815260206004820152600f60248201527f4e4f545f414c4c4f574c49535445440000000000000000000000000000000000604482015260640161073e565b60008b815260038301602052604090206008015473ffffffffffffffffffffffffffffffffffffffff16156114655760008b81526003830160205260409020600801546114199073ffffffffffffffffffffffffffffffffffffffff168c8c8b8989896108a8565b6114655760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e4154555245000000000000000000000000000000604482015260640161073e565b5050505050505050505050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff1633036114de57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b90565b4660009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb6020526040812054908190036114e35750604080518082018252600b81527f54696572656453616c657300000000000000000000000000000000000000000060209182015281518083018352600381527f322e7800000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0a8f5cd262c609ce448522f0993fd8cd7e4c5487b979cac486662358ea244890818401527ff5f84182131be97a41a3d4efb82d0a0d5698d76e6ec4dc9589738f1341d900c960608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b6040517f1901000000000000000000000000000000000000000000000000000000000000602082015260228101839052604281018290526000906062016111b9565b60008082516041036116965760208301516040840151606085015160001a61168a878285856118d9565b9450945050505061169e565b506000905060025b9250929050565b60008160048111156116b9576116b9611e56565b036116c15750565b60018160048111156116d5576116d5611e56565b036117225760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161073e565b600281600481111561173657611736611e56565b036117835760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161073e565b600381600481111561179757611797611e56565b0361180a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161073e565b600481600481111561181e5761181e611e56565b036118915760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161073e565b50565b600081815b845181101561062c576118c5828683815181106118b8576118b8611d6e565b60200260200101516119f1565b9150806118d181611dcc565b915050611899565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561191057506000905060036119e8565b8460ff16601b1415801561192857508460ff16601c14155b1561193957506000905060046119e8565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561198d573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166119e1576000600192509250506119e8565b9150600090505b94509492505050565b6000818310611a0d576000828152602084905260409020611a1c565b60008381526020839052604090205b9392505050565b600060208284031215611a3557600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611a6057600080fd5b919050565b60008060408385031215611a7857600080fd5b82359150611a8860208401611a3c565b90509250929050565b60008083601f840112611aa357600080fd5b50813567ffffffffffffffff811115611abb57600080fd5b60208301915083602082850101111561169e57600080fd5b60008060008060008060a08789031215611aec57600080fd5b86359550611afc60208801611a3c565b945060408701359350606087013567ffffffffffffffff811115611b1f57600080fd5b611b2b89828a01611a91565b979a9699509497949695608090950135949350505050565b60008083601f840112611b5557600080fd5b50813567ffffffffffffffff811115611b6d57600080fd5b6020830191508360208260051b850101111561169e57600080fd5b60008060208385031215611b9b57600080fd5b823567ffffffffffffffff811115611bb257600080fd5b611bbe85828601611b43565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b81811015611c0257835183529284019291840191600101611be6565b50909695505050505050565b600080600080600060808688031215611c2657600080fd5b85359450611c3660208701611a3c565b935060408601359250606086013567ffffffffffffffff811115611c5957600080fd5b611c6588828901611b43565b969995985093965092949392505050565b600080600060608486031215611c8b57600080fd5b83359250611c9b60208501611a3c565b9150604084013590509250925092565b60008060008060008060008060c0898b031215611cc757600080fd5b883597506020890135965060408901359550606089013567ffffffffffffffff80821115611cf457600080fd5b611d008c838d01611b43565b909750955060808b0135915080821115611d1957600080fd5b50611d268b828c01611a91565b999c989b50969995989497949560a00135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203611ddf57611ddf611d9d565b5060010190565b600082821015611df857611df8611d9d565b500390565b60008219821115611e1057611e10611d9d565b500190565b6000816000190483118215151615611e2f57611e2f611d9d565b500290565b600060208284031215611e4657600080fd5b81518015158114611a1c57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea26469706673582212203b98d4ac3cc8cba9f4216d3f2cc805c8fe746541371975aa9fba927480a62b6164736f6c634300080f0033",
      "deployedBytecode": "",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./ERC1155TieredSales.sol\";\n\n/**\n * @dev Tiered Sales facet for ERC1155 with meta-transactions support via ERC2771\n */\ncontract ERC1155TieredSalesERC2771 is ERC1155TieredSales, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesOwnable": {
    "fqn": "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0xCa876450AcF20c978D60D15c5859586FBD995858",
      "goerli": "0xCa876450AcF20c978D60D15c5859586FBD995858"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155TieredSalesOwnable",
      "sourceName": "src/token/ERC1155/facets/sales/ERC1155TieredSalesOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "configureTierTokenId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tierIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "configureTierTokenId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b506104be806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bbc2d43d1461003b578063cd07091c14610050575b600080fd5b61004e610049366004610320565b610063565b005b61004e61005e36600461038e565b610139565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60009182527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b82811461028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4552433131353554696572656453616c65734f776e61626c653a20746965724960448201527f647320616e6420746f6b656e496473206d7573742062652073616d65206c656e60648201527f6774680000000000000000000000000000000000000000000000000000000000608482015260a4016100ff565b60005b83811015610319578282828181106102ab576102ab6103fa565b905060200201356102d97f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715490565b60008787858181106102ed576102ed6103fa565b90506020020135815260200190815260200160002081905550808061031190610429565b915050610291565b5050505050565b6000806040838503121561033357600080fd5b50508035926020909101359150565b60008083601f84011261035457600080fd5b50813567ffffffffffffffff81111561036c57600080fd5b6020830191508360208260051b850101111561038757600080fd5b9250929050565b600080600080604085870312156103a457600080fd5b843567ffffffffffffffff808211156103bc57600080fd5b6103c888838901610342565b909650945060208701359150808211156103e157600080fd5b506103ee87828801610342565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610481577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122094ae720bae8ee09ef2c4a3b31927eff118773fc0c5c16ba9b098884b503b44ac64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063bbc2d43d1461003b578063cd07091c14610050575b600080fd5b61004e610049366004610320565b610063565b005b61004e61005e36600461038e565b610139565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60009182527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b82811461028e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4552433131353554696572656453616c65734f776e61626c653a20746965724960448201527f647320616e6420746f6b656e496473206d7573742062652073616d65206c656e60648201527f6774680000000000000000000000000000000000000000000000000000000000608482015260a4016100ff565b60005b83811015610319578282828181106102ab576102ab6103fa565b905060200201356102d97f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715490565b60008787858181106102ed576102ed6103fa565b90506020020135815260200190815260200160002081905550808061031190610429565b915050610291565b5050505050565b6000806040838503121561033357600080fd5b50508035926020909101359150565b60008083601f84011261035457600080fd5b50813567ffffffffffffffff81111561036c57600080fd5b6020830191508360208260051b850101111561038757600080fd5b9250929050565b600080600080604085870312156103a457600080fd5b843567ffffffffffffffff808211156103bc57600080fd5b6103c888838901610342565b909650945060208701359150808211156103e157600080fd5b506103ee87828801610342565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610481577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122094ae720bae8ee09ef2c4a3b31927eff118773fc0c5c16ba9b098884b503b44ac64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"./ERC1155TieredSalesStorage.sol\";\nimport \"./IERC1155TieredSalesAdmin.sol\";\n\n/**\n * @title ERC1155 - Tiered Sales - Admin - Ownable\n * @notice Used to manage which ERC1155 token is related to which the sales tier.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies IERC1155TieredSales\n * @custom:provides-interfaces IERC1155TieredSalesAdmin\n */\ncontract ERC1155TieredSalesOwnable is IERC1155TieredSalesAdmin, OwnableInternal {\n    using ERC1155TieredSalesStorage for ERC1155TieredSalesStorage.Layout;\n\n    function configureTierTokenId(uint256 tierId, uint256 tokenId) external virtual onlyOwner {\n        ERC1155TieredSalesStorage.layout().tierToTokenId[tierId] = tokenId;\n    }\n\n    function configureTierTokenId(uint256[] calldata tierIds, uint256[] calldata tokenIds) external virtual onlyOwner {\n        require(\n            tierIds.length == tokenIds.length,\n            \"ERC1155TieredSalesOwnable: tierIds and tokenIds must be same length\"\n        );\n\n        for (uint256 i = 0; i < tierIds.length; i++) {\n            ERC1155TieredSalesStorage.layout().tierToTokenId[tierIds[i]] = tokenIds[i];\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/ERC1155WithERC2771": {
    "fqn": "flair-sdk:token/ERC1155/ERC1155WithERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0x994e5a4Ff30d71AD91f03Ba523B605177F795Ab6",
      "goerli": "0x994e5a4Ff30d71AD91f03Ba523B605177F795Ab6"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155WithERC2771",
      "sourceName": "src/token/ERC1155/ERC1155WithERC2771.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ticketTokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50613192806100206000396000f3fe608060405234801561001057600080fd5b50600436106101765760003560e01c8063869f7594116100d8578063bd85b0391161008c578063f242432a11610066578063f242432a1461034b578063f5298aca1461035e578063f7794bae1461037157600080fd5b8063bd85b039146102ca578063bf7bab73146102dd578063e985e9c5146102f057600080fd5b8063a22cb465116100bd578063a22cb46514610291578063a91a988a146102a4578063b164884b146102b757600080fd5b8063869f75941461026b578063983da1561461027e57600080fd5b806348f2f5361161012f5780634f558e79116101145780634f558e79146102225780636708a990146102455780636b20c4541461025857600080fd5b806348f2f536146101ef5780634e1273f41461020257600080fd5b80630ad2bbac116101605780630ad2bbac146101b65780632eb2c2d6146101c95780633f3b797e146101dc57600080fd5b8062fdd58e1461017b5780630a13c503146101a1575b600080fd5b61018e6101893660046125ce565b610384565b6040519081526020015b60405180910390f35b6101b46101af366004612644565b610397565b005b6101b46101c4366004612708565b6103d1565b6101b46101d736600461287a565b610405565b6101b46101ea3660046129eb565b610502565b6101b46101fd366004612a73565b6105fa565b610215610210366004612aa6565b61062a565b6040516101989190612b45565b610235610230366004612b58565b610851565b6040519015158152602001610198565b6101b4610253366004612a73565b610888565b6101b4610266366004612708565b6108b3565b61018e610279366004612b58565b6109dd565b6101b461028c366004612a73565b610a10565b6101b461029f366004612b82565b610a3b565b6102156102b2366004612bb9565b610b79565b6101b46102c5366004612c4e565b610c60565b61018e6102d8366004612b58565b610c8d565b61018e6102eb3660046125ce565b610cc0565b6102356102fe366004612ca5565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101b4610359366004612cd8565b610d08565b6101b461036c366004612a73565b610e02565b6101b461037f3660046129eb565b610f2c565b6000610390838361101e565b9392505050565b3033146103b75760405163fd570b5160e01b815260040160405180910390fd5b6103c788888888888888886110e3565b5050505050505050565b3033146103f15760405163fd570b5160e01b815260040160405180910390fd5b6103fe8585858585611433565b5050505050565b600061040f61176b565b9050806001600160a01b0316866001600160a01b0316148061047557506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104ec5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104fa81878787878761177a565b505050505050565b3033146105225760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610534575080518351145b6105805760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104e3565b60005b83518110156105f4576105e28482815181106105a1576105a1612d50565b60200260200101518483815181106105bb576105bb612d50565b60200260200101518484815181106105d5576105d5612d50565b6020026020010151611796565b806105ec81612dae565b915050610583565b50505050565b30331461061a5760405163fd570b5160e01b815260040160405180910390fd5b610625838383611853565b505050565b606081518351146106a35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104e3565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156106e2576106e2612789565b60405190808252806020026020018201604052801561070b578160200160208202803683370190505b50905060005b85518110156108485760006001600160a01b031686828151811061073757610737612d50565b60200260200101516001600160a01b0316036107bb5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104e3565b8260008683815181106107d0576107d0612d50565b6020026020010151815260200190815260200160002060008783815181106107fa576107fa612d50565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061083557610835612d50565b6020908102919091010152600101610711565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b3033146108a85760405163fd570b5160e01b815260040160405180910390fd5b610625838383611796565b6108bb61176b565b6001600160a01b0316856001600160a01b0316148061096b57503063e985e9c5866108e461176b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096b9190612de6565b6103f15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104e3565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea66020526040812054610882565b303314610a305760405163fd570b5160e01b815260040160405180910390fd5b610625838383611a24565b6000610a4561176b565b9050826001600160a01b0316816001600160a01b031603610ace5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104e3565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610b9657610b96612789565b604051908082528060200260200182016040528015610bbf578160200160208202803683370190505b50905060005b8381101561084857610c3186868684818110610be357610be3612d50565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610c4357610c43612d50565b602090810291909101015280610c5881612dae565b915050610bc5565b303314610c805760405163fd570b5160e01b815260040160405180910390fd5b6103fe8585858585611aeb565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040812054610882565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320848452909152812054610390565b6000610d1261176b565b9050806001600160a01b0316876001600160a01b03161480610d7857506001600160a01b0380881660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610dea5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104e3565b610df981888888888888611c72565b50505050505050565b610e0a61176b565b6001600160a01b0316836001600160a01b03161480610eba57503063e985e9c584610e3361176b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190612de6565b61061a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104e3565b303314610f4c5760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610f5e575080518351145b610faa5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104e3565b60005b83518110156105f45761100c848281518110610fcb57610fcb612d50565b6020026020010151848381518110610fe557610fe5612d50565b6020026020010151848481518110610fff57610fff612d50565b6020026020010151611a24565b8061101681612dae565b915050610fad565b60006001600160a01b03831661109c5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104e3565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b8483146111585760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104e3565b8683146111cd5760405162461bcd60e51b815260206004820152602d60248201527f455243313135353a206163636f756e747320616e6420616d6f756e7473206c6560448201527f6e677468206d69736d617463680000000000000000000000000000000000000060648201526084016104e3565b60006111d761176b565b90507ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b87811015611426576112c68360008d8d8581811061121d5761121d612d50565b90506020020160208101906112329190612e03565b6112538d8d8781811061124757611247612d50565b90506020020135611cc5565b6112688c8c8881811061124757611247612d50565b8a8a8881811061127a5761127a612d50565b905060200281019061128c9190612e1e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1092505050565b8686828181106112d8576112d8612d50565b905060200201358260008b8b858181106112f4576112f4612d50565b90506020020135815260200190815260200160002060008d8d8581811061131d5761131d612d50565b90506020020160208101906113329190612e03565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113619190612e83565b909155508b90508a8281811061137957611379612d50565b905060200201602081019061138e9190612e03565b6001600160a01b031660006001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c8c868181106113df576113df612d50565b905060200201358b8b878181106113f8576113f8612d50565b90506020020135604051611416929190918252602082015260400190565b60405180910390a46001016111fd565b5050505050505050505050565b6001600160a01b0385166114af5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104e3565b8281146115245760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104e3565b600061152e61176b565b90506115af8187600088888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092018290525060408051602081019091529081529250611d10915050565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b858110156117055760008787838181106115ef576115ef612d50565b90506020020135905085858381811061160a5761160a612d50565b9050602002013583600083815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000205410156116ba5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104e3565b8585838181106116cc576116cc612d50565b6000938452602086815260408086206001600160a01b038f168752825290942080549490910292909201359092039055506001016115d3565b5060006001600160a01b0316876001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989898960405161175a9493929190612eea565b60405180910390a450505050505050565b6000611775611d15565b905090565b611788868686868686611d1f565b6104fa868686868686611fc8565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482111561182a5760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104e3565b60008381526020829052604081208054849290611848908490612f1c565b909155505050505050565b6001600160a01b0383166118cf5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104e3565b60006118d961176b565b9050611909818560006118eb87611cc5565b6118f487611cc5565b60405180602001604052806000815250611d10565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038816845291829052909120548311156119c15760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104e3565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b2875278206020908152604080832085845291829052909120548290611a75868661101e565b611a7f9190612f1c565b1015611acd5760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104e3565b60008381526020829052604081208054849290611848908490612e83565b6000611af561176b565b90506001600160a01b038616611b735760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104e3565b611bc881600088611b8389611cc5565b611b8c89611cc5565b88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1092505050565b60008581527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038a16845290915281208054869290611c19908490612e83565b909155505060408051868152602081018690526001600160a01b0380891692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050505050565b611c81878787878787876121cc565b610df9878787878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506123f092505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611cff57611cff612d50565b602090810291909101015292915050565b6104fa565b600061177561254b565b6001600160a01b038416611d9b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104e3565b8151835114611e125760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104e3565b611e20868686868686611d10565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015611f78576000858281518110611e6157611e61612d50565b602002602001015190506000858381518110611e7f57611e7f612d50565b602090810291909101810151600084815286835260408082206001600160a01b038e168352909352919091205490915081811015611f255760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104e3565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290611f6b908490612e83565b90915550611e4492505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161175a929190612f33565b6001600160a01b0384163b156104fa576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c81906120259089908990889088908890600401612fae565b6020604051808303816000875af1925050508015612060575060408051601f3d908101601f1916820190925261205d9181019061300c565b60015b6121155761206c61304e565b806308c379a0036120a55750612080613069565b8061208b57506120a7565b8060405162461bcd60e51b81526004016104e39190613111565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104e3565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610df95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104e3565b6001600160a01b0385166122485760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104e3565b61229c87878761225788611cc5565b61226088611cc5565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1092505050565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038b16855290915290912054848110156123555760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104e3565b6000868152602083815260408083206001600160a01b038c81168552925280832093889003909355881681529081208054869290612394908490612e83565b909155505060408051868152602081018690526001600160a01b03808916928a821692918c16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050565b6001600160a01b0384163b156104fa576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e619061244d9089908990889088908890600401613124565b6020604051808303816000875af1925050508015612488575060408051601f3d908101601f191682019092526124859181019061300c565b60015b6124945761206c61304e565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610df95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104e3565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f420546000906001600160a01b031633036125aa57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b90565b80356001600160a01b03811681146125c957600080fd5b919050565b600080604083850312156125e157600080fd5b6125ea836125b2565b946020939093013593505050565b60008083601f84011261260a57600080fd5b50813567ffffffffffffffff81111561262257600080fd5b6020830191508360208260051b850101111561263d57600080fd5b9250929050565b6000806000806000806000806080898b03121561266057600080fd5b883567ffffffffffffffff8082111561267857600080fd5b6126848c838d016125f8565b909a50985060208b013591508082111561269d57600080fd5b6126a98c838d016125f8565b909850965060408b01359150808211156126c257600080fd5b6126ce8c838d016125f8565b909650945060608b01359150808211156126e757600080fd5b506126f48b828c016125f8565b999c989b5096995094979396929594505050565b60008060008060006060868803121561272057600080fd5b612729866125b2565b9450602086013567ffffffffffffffff8082111561274657600080fd5b61275289838a016125f8565b9096509450604088013591508082111561276b57600080fd5b50612778888289016125f8565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156127de576127de612789565b6040525050565b600067ffffffffffffffff8211156127ff576127ff612789565b5060051b60200190565b600082601f83011261281a57600080fd5b81356020612827826127e5565b60405161283482826127b8565b83815260059390931b850182019282810191508684111561285457600080fd5b8286015b8481101561286f5780358352918301918301612858565b509695505050505050565b600080600080600060a0868803121561289257600080fd5b61289b866125b2565b945060206128aa8188016125b2565b9450604087013567ffffffffffffffff808211156128c757600080fd5b6128d38a838b01612809565b955060608901359150808211156128e957600080fd5b6128f58a838b01612809565b9450608089013591508082111561290b57600080fd5b818901915089601f83011261291f57600080fd5b81358181111561293157612931612789565b604051915061294984601f19601f84011601836127b8565b8082528a8482850101111561295d57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b600082601f83011261298f57600080fd5b8135602061299c826127e5565b6040516129a982826127b8565b83815260059390931b85018201928281019150868411156129c957600080fd5b8286015b8481101561286f576129de816125b2565b83529183019183016129cd565b600080600060608486031215612a0057600080fd5b833567ffffffffffffffff80821115612a1857600080fd5b612a248783880161297e565b94506020860135915080821115612a3a57600080fd5b612a4687838801612809565b93506040860135915080821115612a5c57600080fd5b50612a6986828701612809565b9150509250925092565b600080600060608486031215612a8857600080fd5b612a91846125b2565b95602085013595506040909401359392505050565b60008060408385031215612ab957600080fd5b823567ffffffffffffffff80821115612ad157600080fd5b612add8683870161297e565b93506020850135915080821115612af357600080fd5b50612b0085828601612809565b9150509250929050565b600081518084526020808501945080840160005b83811015612b3a57815187529582019590820190600101612b1e565b509495945050505050565b6020815260006103906020830184612b0a565b600060208284031215612b6a57600080fd5b5035919050565b8015158114612b7f57600080fd5b50565b60008060408385031215612b9557600080fd5b612b9e836125b2565b91506020830135612bae81612b71565b809150509250929050565b600080600060408486031215612bce57600080fd5b612bd7846125b2565b9250602084013567ffffffffffffffff811115612bf357600080fd5b612bff868287016125f8565b9497909650939450505050565b60008083601f840112612c1e57600080fd5b50813567ffffffffffffffff811115612c3657600080fd5b60208301915083602082850101111561263d57600080fd5b600080600080600060808688031215612c6657600080fd5b612c6f866125b2565b94506020860135935060408601359250606086013567ffffffffffffffff811115612c9957600080fd5b61277888828901612c0c565b60008060408385031215612cb857600080fd5b612cc1836125b2565b9150612ccf602084016125b2565b90509250929050565b60008060008060008060a08789031215612cf157600080fd5b612cfa876125b2565b9550612d08602088016125b2565b94506040870135935060608701359250608087013567ffffffffffffffff811115612d3257600080fd5b612d3e89828a01612c0c565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ddf57612ddf612d7f565b5060010190565b600060208284031215612df857600080fd5b815161039081612b71565b600060208284031215612e1557600080fd5b610390826125b2565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612e5357600080fd5b83018035915067ffffffffffffffff821115612e6e57600080fd5b60200191503681900382131561263d57600080fd5b60008219821115612e9657612e96612d7f565b500190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612ecd57600080fd5b8260051b8083602087013760009401602001938452509192915050565b604081526000612efe604083018688612e9b565b8281036020840152612f11818587612e9b565b979650505050505050565b600082821015612f2e57612f2e612d7f565b500390565b604081526000612f466040830185612b0a565b8281036020840152612f588185612b0a565b95945050505050565b6000815180845260005b81811015612f8757602081850181015186830182015201612f6b565b81811115612f99576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a06040830152612fda60a0830186612b0a565b8281036060840152612fec8186612b0a565b905082810360808401526130008185612f61565b98975050505050505050565b60006020828403121561301e57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461039057600080fd5b600060033d11156125af5760046000803e5060005160e01c90565b600060443d10156130775790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156130c557505050505090565b82850191508151818111156130dd5750505050505090565b843d87010160208285010111156130f75750505050505090565b613106602082860101876127b8565b509095945050505050565b6020815260006103906020830184612f61565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612f1160a0830184612f6156fea26469706673582212207a6068e0a2efe1ddf644b21419be14266651388e746b0653b5b7f17277753abc64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101765760003560e01c8063869f7594116100d8578063bd85b0391161008c578063f242432a11610066578063f242432a1461034b578063f5298aca1461035e578063f7794bae1461037157600080fd5b8063bd85b039146102ca578063bf7bab73146102dd578063e985e9c5146102f057600080fd5b8063a22cb465116100bd578063a22cb46514610291578063a91a988a146102a4578063b164884b146102b757600080fd5b8063869f75941461026b578063983da1561461027e57600080fd5b806348f2f5361161012f5780634f558e79116101145780634f558e79146102225780636708a990146102455780636b20c4541461025857600080fd5b806348f2f536146101ef5780634e1273f41461020257600080fd5b80630ad2bbac116101605780630ad2bbac146101b65780632eb2c2d6146101c95780633f3b797e146101dc57600080fd5b8062fdd58e1461017b5780630a13c503146101a1575b600080fd5b61018e6101893660046125ce565b610384565b6040519081526020015b60405180910390f35b6101b46101af366004612644565b610397565b005b6101b46101c4366004612708565b6103d1565b6101b46101d736600461287a565b610405565b6101b46101ea3660046129eb565b610502565b6101b46101fd366004612a73565b6105fa565b610215610210366004612aa6565b61062a565b6040516101989190612b45565b610235610230366004612b58565b610851565b6040519015158152602001610198565b6101b4610253366004612a73565b610888565b6101b4610266366004612708565b6108b3565b61018e610279366004612b58565b6109dd565b6101b461028c366004612a73565b610a10565b6101b461029f366004612b82565b610a3b565b6102156102b2366004612bb9565b610b79565b6101b46102c5366004612c4e565b610c60565b61018e6102d8366004612b58565b610c8d565b61018e6102eb3660046125ce565b610cc0565b6102356102fe366004612ca5565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6101b4610359366004612cd8565b610d08565b6101b461036c366004612a73565b610e02565b6101b461037f3660046129eb565b610f2c565b6000610390838361101e565b9392505050565b3033146103b75760405163fd570b5160e01b815260040160405180910390fd5b6103c788888888888888886110e3565b5050505050505050565b3033146103f15760405163fd570b5160e01b815260040160405180910390fd5b6103fe8585858585611433565b5050505050565b600061040f61176b565b9050806001600160a01b0316866001600160a01b0316148061047557506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6104ec5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104fa81878787878761177a565b505050505050565b3033146105225760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610534575080518351145b6105805760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104e3565b60005b83518110156105f4576105e28482815181106105a1576105a1612d50565b60200260200101518483815181106105bb576105bb612d50565b60200260200101518484815181106105d5576105d5612d50565b6020026020010151611796565b806105ec81612dae565b915050610583565b50505050565b30331461061a5760405163fd570b5160e01b815260040160405180910390fd5b610625838383611853565b505050565b606081518351146106a35760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d61746368000000000000000000000000000000000000000000000060648201526084016104e3565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff8111156106e2576106e2612789565b60405190808252806020026020018201604052801561070b578160200160208202803683370190505b50905060005b85518110156108485760006001600160a01b031686828151811061073757610737612d50565b60200260200101516001600160a01b0316036107bb5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f206164647265737300000000000000000000000000000060648201526084016104e3565b8260008683815181106107d0576107d0612d50565b6020026020010151815260200190815260200160002060008783815181106107fa576107fa612d50565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061083557610835612d50565b6020908102919091010152600101610711565b50949350505050565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea5602052604081205415155b92915050565b3033146108a85760405163fd570b5160e01b815260040160405180910390fd5b610625838383611796565b6108bb61176b565b6001600160a01b0316856001600160a01b0316148061096b57503063e985e9c5866108e461176b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610947573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096b9190612de6565b6103f15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104e3565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea66020526040812054610882565b303314610a305760405163fd570b5160e01b815260040160405180910390fd5b610625838383611a24565b6000610a4561176b565b9050826001600160a01b0316816001600160a01b031603610ace5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c66000000000000000000000000000000000000000000000060648201526084016104e3565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b606060008267ffffffffffffffff811115610b9657610b96612789565b604051908082528060200260200182016040528015610bbf578160200160208202803683370190505b50905060005b8381101561084857610c3186868684818110610be357610be3612d50565b905060200201356001600160a01b039190911660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320938352929052205490565b828281518110610c4357610c43612d50565b602090810291909101015280610c5881612dae565b915050610bc5565b303314610c805760405163fd570b5160e01b815260040160405180910390fd5b6103fe8585858585611aeb565b60008181527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea56020526040812054610882565b6001600160a01b03821660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320848452909152812054610390565b6000610d1261176b565b9050806001600160a01b0316876001600160a01b03161480610d7857506001600160a01b0380881660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b610dea5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104e3565b610df981888888888888611c72565b50505050505050565b610e0a61176b565b6001600160a01b0316836001600160a01b03161480610eba57503063e985e9c584610e3361176b565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190612de6565b61061a5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084016104e3565b303314610f4c5760405163fd570b5160e01b815260040160405180910390fd5b81518351148015610f5e575080518351145b610faa5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f41525241595f4c454e47544800000000000000000000000060448201526064016104e3565b60005b83518110156105f45761100c848281518110610fcb57610fcb612d50565b6020026020010151848381518110610fe557610fe5612d50565b6020026020010151848481518110610fff57610fff612d50565b6020026020010151611a24565b8061101681612dae565b915050610fad565b60006001600160a01b03831661109c5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104e3565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b8483146111585760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104e3565b8683146111cd5760405162461bcd60e51b815260206004820152602d60248201527f455243313135353a206163636f756e747320616e6420616d6f756e7473206c6560448201527f6e677468206d69736d617463680000000000000000000000000000000000000060648201526084016104e3565b60006111d761176b565b90507ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b87811015611426576112c68360008d8d8581811061121d5761121d612d50565b90506020020160208101906112329190612e03565b6112538d8d8781811061124757611247612d50565b90506020020135611cc5565b6112688c8c8881811061124757611247612d50565b8a8a8881811061127a5761127a612d50565b905060200281019061128c9190612e1e565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1092505050565b8686828181106112d8576112d8612d50565b905060200201358260008b8b858181106112f4576112f4612d50565b90506020020135815260200190815260200160002060008d8d8581811061131d5761131d612d50565b90506020020160208101906113329190612e03565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113619190612e83565b909155508b90508a8281811061137957611379612d50565b905060200201602081019061138e9190612e03565b6001600160a01b031660006001600160a01b0316846001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628c8c868181106113df576113df612d50565b905060200201358b8b878181106113f8576113f8612d50565b90506020020135604051611416929190918252602082015260400190565b60405180910390a46001016111fd565b5050505050505050505050565b6001600160a01b0385166114af5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104e3565b8281146115245760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104e3565b600061152e61176b565b90506115af8187600088888080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808c0282810182019093528b82529093508b92508a918291850190849080828437600092018290525060408051602081019091529081529250611d10915050565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b858110156117055760008787838181106115ef576115ef612d50565b90506020020135905085858381811061160a5761160a612d50565b9050602002013583600083815260200190815260200160002060008b6001600160a01b03166001600160a01b031681526020019081526020016000205410156116ba5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104e3565b8585838181106116cc576116cc612d50565b6000938452602086815260408086206001600160a01b038f168752825290942080549490910292909201359092039055506001016115d3565b5060006001600160a01b0316876001600160a01b0316836001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8989898960405161175a9493929190612eea565b60405180910390a450505050505050565b6000611775611d15565b905090565b611788868686868686611d1f565b6104fa868686868686611fc8565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b28752782060209081526040808320858452918290529091205482111561182a5760405162461bcd60e51b815260206004820152601160248201527f4e4f545f454e4f5547485f4c4f434b454400000000000000000000000000000060448201526064016104e3565b60008381526020829052604081208054849290611848908490612f1c565b909155505050505050565b6001600160a01b0383166118cf5760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016104e3565b60006118d961176b565b9050611909818560006118eb87611cc5565b6118f487611cc5565b60405180602001604052806000815250611d10565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038816845291829052909120548311156119c15760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c60448201527f616e63650000000000000000000000000000000000000000000000000000000060648201526084016104e3565b6001600160a01b0385811660008181526020848152604080832080548990039055805189815291820188905291938616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050565b6001600160a01b03831660009081527f349768cb3869818ef8452552d8520ac7355b35c10a0ff9320e2975b2875278206020908152604080832085845291829052909120548290611a75868661101e565b611a7f9190612f1c565b1015611acd5760405162461bcd60e51b815260206004820152601260248201527f4e4f545f454e4f5547485f42414c414e4345000000000000000000000000000060448201526064016104e3565b60008381526020829052604081208054849290611848908490612e83565b6000611af561176b565b90506001600160a01b038616611b735760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016104e3565b611bc881600088611b8389611cc5565b611b8c89611cc5565b88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1092505050565b60008581527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602090815260408083206001600160a01b038a16845290915281208054869290611c19908490612e83565b909155505060408051868152602081018690526001600160a01b0380891692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050505050565b611c81878787878787876121cc565b610df9878787878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506123f092505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611cff57611cff612d50565b602090810291909101015292915050565b6104fa565b600061177561254b565b6001600160a01b038416611d9b5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104e3565b8151835114611e125760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d6174636800000000000000000000000000000000000000000000000060648201526084016104e3565b611e20868686868686611d10565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015611f78576000858281518110611e6157611e61612d50565b602002602001015190506000858381518110611e7f57611e7f612d50565b602090810291909101810151600084815286835260408082206001600160a01b038e168352909352919091205490915081811015611f255760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104e3565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290611f6b908490612e83565b90915550611e4492505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161175a929190612f33565b6001600160a01b0384163b156104fa576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c81906120259089908990889088908890600401612fae565b6020604051808303816000875af1925050508015612060575060408051601f3d908101601f1916820190925261205d9181019061300c565b60015b6121155761206c61304e565b806308c379a0036120a55750612080613069565b8061208b57506120a7565b8060405162461bcd60e51b81526004016104e39190613111565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e74657200000000000000000000000060648201526084016104e3565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014610df95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104e3565b6001600160a01b0385166122485760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104e3565b61229c87878761225788611cc5565b61226088611cc5565b87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d1092505050565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038b16855290915290912054848110156123555760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e7366657200000000000000000000000000000000000000000060648201526084016104e3565b6000868152602083815260408083206001600160a01b038c81168552925280832093889003909355881681529081208054869290612394908490612e83565b909155505060408051868152602081018690526001600160a01b03808916928a821692918c16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050565b6001600160a01b0384163b156104fa576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e619061244d9089908990889088908890600401613124565b6020604051808303816000875af1925050508015612488575060408051601f3d908101601f191682019092526124859181019061300c565b60015b6124945761206c61304e565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014610df95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e7300000000000000000000000000000000000000000000000060648201526084016104e3565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f420546000906001600160a01b031633036125aa57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b90565b80356001600160a01b03811681146125c957600080fd5b919050565b600080604083850312156125e157600080fd5b6125ea836125b2565b946020939093013593505050565b60008083601f84011261260a57600080fd5b50813567ffffffffffffffff81111561262257600080fd5b6020830191508360208260051b850101111561263d57600080fd5b9250929050565b6000806000806000806000806080898b03121561266057600080fd5b883567ffffffffffffffff8082111561267857600080fd5b6126848c838d016125f8565b909a50985060208b013591508082111561269d57600080fd5b6126a98c838d016125f8565b909850965060408b01359150808211156126c257600080fd5b6126ce8c838d016125f8565b909650945060608b01359150808211156126e757600080fd5b506126f48b828c016125f8565b999c989b5096995094979396929594505050565b60008060008060006060868803121561272057600080fd5b612729866125b2565b9450602086013567ffffffffffffffff8082111561274657600080fd5b61275289838a016125f8565b9096509450604088013591508082111561276b57600080fd5b50612778888289016125f8565b969995985093965092949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156127de576127de612789565b6040525050565b600067ffffffffffffffff8211156127ff576127ff612789565b5060051b60200190565b600082601f83011261281a57600080fd5b81356020612827826127e5565b60405161283482826127b8565b83815260059390931b850182019282810191508684111561285457600080fd5b8286015b8481101561286f5780358352918301918301612858565b509695505050505050565b600080600080600060a0868803121561289257600080fd5b61289b866125b2565b945060206128aa8188016125b2565b9450604087013567ffffffffffffffff808211156128c757600080fd5b6128d38a838b01612809565b955060608901359150808211156128e957600080fd5b6128f58a838b01612809565b9450608089013591508082111561290b57600080fd5b818901915089601f83011261291f57600080fd5b81358181111561293157612931612789565b604051915061294984601f19601f84011601836127b8565b8082528a8482850101111561295d57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b600082601f83011261298f57600080fd5b8135602061299c826127e5565b6040516129a982826127b8565b83815260059390931b85018201928281019150868411156129c957600080fd5b8286015b8481101561286f576129de816125b2565b83529183019183016129cd565b600080600060608486031215612a0057600080fd5b833567ffffffffffffffff80821115612a1857600080fd5b612a248783880161297e565b94506020860135915080821115612a3a57600080fd5b612a4687838801612809565b93506040860135915080821115612a5c57600080fd5b50612a6986828701612809565b9150509250925092565b600080600060608486031215612a8857600080fd5b612a91846125b2565b95602085013595506040909401359392505050565b60008060408385031215612ab957600080fd5b823567ffffffffffffffff80821115612ad157600080fd5b612add8683870161297e565b93506020850135915080821115612af357600080fd5b50612b0085828601612809565b9150509250929050565b600081518084526020808501945080840160005b83811015612b3a57815187529582019590820190600101612b1e565b509495945050505050565b6020815260006103906020830184612b0a565b600060208284031215612b6a57600080fd5b5035919050565b8015158114612b7f57600080fd5b50565b60008060408385031215612b9557600080fd5b612b9e836125b2565b91506020830135612bae81612b71565b809150509250929050565b600080600060408486031215612bce57600080fd5b612bd7846125b2565b9250602084013567ffffffffffffffff811115612bf357600080fd5b612bff868287016125f8565b9497909650939450505050565b60008083601f840112612c1e57600080fd5b50813567ffffffffffffffff811115612c3657600080fd5b60208301915083602082850101111561263d57600080fd5b600080600080600060808688031215612c6657600080fd5b612c6f866125b2565b94506020860135935060408601359250606086013567ffffffffffffffff811115612c9957600080fd5b61277888828901612c0c565b60008060408385031215612cb857600080fd5b612cc1836125b2565b9150612ccf602084016125b2565b90509250929050565b60008060008060008060a08789031215612cf157600080fd5b612cfa876125b2565b9550612d08602088016125b2565b94506040870135935060608701359250608087013567ffffffffffffffff811115612d3257600080fd5b612d3e89828a01612c0c565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612ddf57612ddf612d7f565b5060010190565b600060208284031215612df857600080fd5b815161039081612b71565b600060208284031215612e1557600080fd5b610390826125b2565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612e5357600080fd5b83018035915067ffffffffffffffff821115612e6e57600080fd5b60200191503681900382131561263d57600080fd5b60008219821115612e9657612e96612d7f565b500190565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612ecd57600080fd5b8260051b8083602087013760009401602001938452509192915050565b604081526000612efe604083018688612e9b565b8281036020840152612f11818587612e9b565b979650505050505050565b600082821015612f2e57612f2e612d7f565b500390565b604081526000612f466040830185612b0a565b8281036020840152612f588185612b0a565b95945050505050565b6000815180845260005b81811015612f8757602081850181015186830182015201612f6b565b81811115612f99576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a06040830152612fda60a0830186612b0a565b8281036060840152612fec8186612b0a565b905082810360808401526130008185612f61565b98975050505050505050565b60006020828403121561301e57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461039057600080fd5b600060033d11156125af5760046000803e5060005160e01c90565b600060443d10156130775790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156130c557505050505090565b82850191508151818111156130dd5750505050505090565b843d87010160208285010111156130f75750505050505090565b613106602082860101876127b8565b509095945050505050565b6020815260006103906020830184612f61565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612f1160a0830184612f6156fea26469706673582212207a6068e0a2efe1ddf644b21419be14266651388e746b0653b5b7f17277753abc64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./base/ERC1155BaseERC2771.sol\";\nimport \"./extensions/supply/ERC1155SupplyExtension.sol\";\nimport \"./extensions/lockable/ERC1155LockableExtension.sol\";\nimport \"./extensions/mintable/ERC1155MintableExtension.sol\";\nimport \"./extensions/burnable/ERC1155BurnableExtension.sol\";\n\n/**\n * @title ERC1155 - With ERC2771 Context\n * @notice Standard EIP-1155 with ability to accept meta transactions (mainly transfer or burn methods).\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:provides-interfaces IERC1155 IERC1155BurnableExtension IERC1155LockableExtension IERC1155MintableExtension IERC1155SupplyExtension\n */\ncontract ERC1155WithERC2771 is\n    ERC1155BaseERC2771,\n    ERC1155SupplyExtension,\n    ERC1155MintableExtension,\n    ERC1155BurnableExtension,\n    ERC1155LockableExtension\n{\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override(ERC1155BaseInternal, ERC1155SupplyInternal, ERC1155LockableInternal) {\n        ERC1155BaseInternal._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n\n    function _msgSender() internal view virtual override(Context, ERC1155BaseERC2771) returns (address) {\n        return ERC1155BaseERC2771._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC1155BaseERC2771) returns (bytes calldata) {\n        return ERC1155BaseERC2771._msgData();\n    }\n}\n"
  },
  "flair-sdk:introspection/ERC165": {
    "fqn": "flair-sdk:introspection/ERC165",
    "version": "2.14.0",
    "address": {
      "5": "0xd7505363Fdad9E8ECb6513b2f0c9A7C396566295",
      "goerli": "0xd7505363Fdad9E8ECb6513b2f0c9A7C396566295"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC165",
      "sourceName": "src/introspection/ERC165.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061011f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b608e603836600460a2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed2640602052604090205460ff1690565b604051901515815260200160405180910390f35b60006020828403121560b357600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811460e257600080fd5b939250505056fea2646970667358221220bf3c97f84999dcbd3003086ca1d1677173ec75c29aba7816e5963fd36e84e86164736f6c634300080f0033",
      "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c806301ffc9a714602d575b600080fd5b608e603836600460a2565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed2640602052604090205460ff1690565b604051901515815260200160405180910390f35b60006020828403121560b357600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811460e257600080fd5b939250505056fea2646970667358221220bf3c97f84999dcbd3003086ca1d1677173ec75c29aba7816e5963fd36e84e86164736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport \"./ERC165Storage.sol\";\n\n/**\n * @title ERC165\n * @notice Standard EIP-165 facet which would be already included as a core facet in Flair's Diamond contract.\n *\n * @custom:type eip-2535-facet\n * @custom:category Introspection\n * @custom:provides-interfaces IERC165\n */\ncontract ERC165 is IERC165 {\n    using ERC165Storage for ERC165Storage.Layout;\n\n    /**\n     * @inheritdoc IERC165\n     */\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\n        return ERC165Storage.layout().isSupportedInterface(interfaceId);\n    }\n}\n"
  },
  "flair-sdk:introspection/ERC165Ownable": {
    "fqn": "flair-sdk:introspection/ERC165Ownable",
    "version": "2.14.0",
    "address": {
      "5": "0x4c722a991F7E130bd73a465556ba1cAFFAA03594",
      "goerli": "0x4c722a991F7E130bd73a465556ba1cAFFAA03594"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC165Ownable",
      "sourceName": "src/introspection/ERC165Ownable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4[]",
              "name": "interfaceIds",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes4[]",
              "name": "interfaceIdsToRemove",
              "type": "bytes4[]"
            }
          ],
          "name": "setERC165",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610441806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a84809114610030575b600080fd5b61004361003e3660046102c8565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f01ffc9a70000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264060208190527fe1cd5a39bd0bb11debfd51073019ab01630b5cba823095c51b2463cd8445abf8805460ff19166001179055905b848110156101ea57600182600088888581811061018257610182610334565b90506020020160208101906101979190610363565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff1916911515919091179055806101e2816103ac565b915050610163565b5060005b82811015610274576000828186868581811061020c5761020c610334565b90506020020160208101906102219190610363565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff19169115159190911790558061026c816103ac565b9150506101ee565b505050505050565b60008083601f84011261028e57600080fd5b50813567ffffffffffffffff8111156102a657600080fd5b6020830191508360208260051b85010111156102c157600080fd5b9250929050565b600080600080604085870312156102de57600080fd5b843567ffffffffffffffff808211156102f657600080fd5b6103028883890161027c565b9096509450602087013591508082111561031b57600080fd5b506103288782880161027c565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561037557600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146103a557600080fd5b9392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610404577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220f35c0afbb2f6e13fd7b4873481224e1b773be02d72fcba87c24a4db34bb6299264736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80632a84809114610030575b600080fd5b61004361003e3660046102c8565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f01ffc9a70000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed264060208190527fe1cd5a39bd0bb11debfd51073019ab01630b5cba823095c51b2463cd8445abf8805460ff19166001179055905b848110156101ea57600182600088888581811061018257610182610334565b90506020020160208101906101979190610363565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff1916911515919091179055806101e2816103ac565b915050610163565b5060005b82811015610274576000828186868581811061020c5761020c610334565b90506020020160208101906102219190610363565b7fffffffff000000000000000000000000000000000000000000000000000000001681526020810191909152604001600020805460ff19169115159190911790558061026c816103ac565b9150506101ee565b505050505050565b60008083601f84011261028e57600080fd5b50813567ffffffffffffffff8111156102a657600080fd5b6020830191508360208260051b85010111156102c157600080fd5b9250929050565b600080600080604085870312156102de57600080fd5b843567ffffffffffffffff808211156102f657600080fd5b6103028883890161027c565b9096509450602087013591508082111561031b57600080fd5b506103288782880161027c565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561037557600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146103a557600080fd5b9392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610404577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220f35c0afbb2f6e13fd7b4873481224e1b773be02d72fcba87c24a4db34bb6299264736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\nimport \"../access/ownable/OwnableInternal.sol\";\nimport \"./ERC165Storage.sol\";\nimport \"./IERC165Admin.sol\";\n\n/**\n * @title ERC165 - Admin - Ownable\n * @notice Standard EIP-165 management facet using Ownable extension for access control.\n *\n * @custom:type eip-2535-facet\n * @custom:category Diamonds\n * @custom:peer-dependencies IERC165\n * @custom:provides-interfaces IERC165Admin\n */\ncontract ERC165Ownable is IERC165Admin, OwnableInternal {\n    using ERC165Storage for ERC165Storage.Layout;\n\n    /**\n     * @param interfaceIds list of interface id to set as supported\n     * @param interfaceIdsToRemove list of interface id to unset as supported\n     */\n    function setERC165(bytes4[] calldata interfaceIds, bytes4[] calldata interfaceIdsToRemove) public onlyOwner {\n        ERC165Storage.Layout storage l = ERC165Storage.layout();\n\n        l.supportedInterfaces[type(IERC165).interfaceId] = true;\n\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            l.supportedInterfaces[interfaceIds[i]] = true;\n        }\n\n        for (uint256 i = 0; i < interfaceIdsToRemove.length; i++) {\n            l.supportedInterfaces[interfaceIdsToRemove[i]] = false;\n        }\n    }\n}\n"
  },
  "flair-sdk:metatx/erc2771/ERC2771Context": {
    "fqn": "flair-sdk:metatx/erc2771/ERC2771Context",
    "version": "2.14.0",
    "address": {
      "5": "0x3A5eF0Ab2b65b773dB8ecA2053604f4FB27c66d0",
      "goerli": "0x3A5eF0Ab2b65b773dB8ecA2053604f4FB27c66d0"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC2771Context",
      "sourceName": "src/metatx/erc2771/ERC2771Context.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIERC2771Context",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b506101c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806336364ced1461003b578063572b6c0514610083575b600080fd5b604080518082018252600381527f322e7800000000000000000000000000000000000000000000000000000000006020820152905161007a91906100e1565b60405180910390f35b6100d1610091366004610154565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b604051901515815260200161007a565b600060208083528351808285015260005b8181101561010e578581018301518582016040015282016100f2565b81811115610120576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561016657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461018a57600080fd5b939250505056fea26469706673582212207e67a2c9f6b4a15c3f8d5a5738700f20365863aa0257f7ebba91993d4f42d4ba64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806336364ced1461003b578063572b6c0514610083575b600080fd5b604080518082018252600381527f322e7800000000000000000000000000000000000000000000000000000000006020820152905161007a91906100e1565b60405180910390f35b6100d1610091366004610154565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205473ffffffffffffffffffffffffffffffffffffffff90811691161490565b604051901515815260200161007a565b600060208083528351808285015260005b8181101561010e578581018301518582016040015282016100f2565b81811115610120576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561016657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461018a57600080fd5b939250505056fea26469706673582212207e67a2c9f6b4a15c3f8d5a5738700f20365863aa0257f7ebba91993d4f42d4ba64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ERC2771ContextStorage.sol\";\nimport \"./ERC2771ContextInternal.sol\";\nimport \"./IERC2771Context.sol\";\n\ncontract ERC2771Context is IERC2771Context, ERC2771ContextInternal {\n    using ERC2771ContextStorage for ERC2771ContextStorage.Layout;\n\n    function versionIERC2771Context() external pure virtual returns (string memory) {\n        return \"2.x\";\n    }\n\n    function isTrustedForwarder(address forwarder) public view virtual returns (bool) {\n        return _isTrustedForwarder(forwarder);\n    }\n}\n"
  },
  "flair-sdk:metatx/erc2771/ERC2771ContextOwnable": {
    "fqn": "flair-sdk:metatx/erc2771/ERC2771ContextOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0xAD76ED05E47825BA2788a1F7EE9e0A776Ee42D85",
      "goerli": "0xAD76ED05E47825BA2788a1F7EE9e0A776Ee42D85"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC2771ContextOwnable",
      "sourceName": "src/metatx/erc2771/ERC2771ContextOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address"
            }
          ],
          "name": "setTrustedForwarder",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b506101c2806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da74222814610030575b600080fd5b61004361003e36600461014f565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f42080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561016157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461018557600080fd5b939250505056fea2646970667358221220f1f62e78164753ecfc021cc0125c077d840a8e831ac079eb32e345baa1b07d2264736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063da74222814610030575b600080fd5b61004361003e36600461014f565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f42080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006020828403121561016157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461018557600080fd5b939250505056fea2646970667358221220f1f62e78164753ecfc021cc0125c077d840a8e831ac079eb32e345baa1b07d2264736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../access/ownable/OwnableInternal.sol\";\nimport \"./ERC2771ContextStorage.sol\";\nimport \"./IERC2771ContextAdmin.sol\";\n\ncontract ERC2771ContextOwnable is IERC2771ContextAdmin, OwnableInternal {\n    function setTrustedForwarder(address trustedForwarder) public onlyOwner {\n        ERC2771ContextStorage.layout().trustedForwarder = trustedForwarder;\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/ERC721A": {
    "fqn": "flair-sdk:token/ERC721/ERC721A",
    "version": "2.14.0",
    "address": {
      "5": "0xC99E56A3C13b74Ad2b26Ef65bF229E0f145971ca",
      "goerli": "0xC99E56A3C13b74Ad2b26Ef65bF229E0f145971ca"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721A",
      "sourceName": "src/token/ERC721/ERC721A.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrMaxSupplyExceeded",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ErrTokenLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Locked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Unlocked",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ticketTokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool[]",
              "name": "states",
              "type": "bool[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611dfb806100206000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806352f50967116100e3578063b88d4fde1161008c578063e4623c1b11610066578063e4623c1b14610342578063e985e9c514610355578063f9497f341461036857600080fd5b8063b88d4fde14610314578063c7d1bc8314610327578063d5abeb011461033a57600080fd5b8063856e31c1116100bd578063856e31c1146102cb578063a22cb465146102de578063b45a3c0e146102f157600080fd5b806352f50967146102925780636352211e146102a557806370a08231146102b857600080fd5b80633c2a04591161014557806342966c681161011f57806342966c681461025957806349142a141461026c5780634a371f641461027f57600080fd5b80633c2a0459146102135780633d64bec01461022657806342842e0e1461024657600080fd5b806318160ddd1161017657806318160ddd146101d757806323b872dd146101ed5780632d4f475f1461020057600080fd5b8063081812fc14610192578063095ea7b3146101c2575b600080fd5b6101a56101a0366004611891565b61037b565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d56101d03660046118c6565b61038c565b005b6101df61039a565b6040519081526020016101b9565b6101d56101fb3660046118f0565b6103ec565b6101d561020e3660046118c6565b6103fc565b6101d5610221366004611891565b610426565b61023961023436600461198c565b610452565b6040516101b99190611a32565b6101d56102543660046118f0565b610502565b6101d5610267366004611891565b61051d565b6101d561027a366004611ac4565b610528565b6101d561028d36600461198c565b6105b4565b6101d56102a036600461198c565b610614565b6101a56102b3366004611891565b610674565b6101df6102c6366004611b30565b61067f565b6101d56102d9366004611891565b61068a565b6101d56102ec366004611b4b565b6106b3565b6103046102ff366004611891565b6106bd565b60405190151581526020016101b9565b6101d5610322366004611b87565b6106c8565b6101d5610335366004611891565b6106da565b6101df610703565b6101d561035036600461198c565b61072d565b610304610363366004611c47565b61076f565b6101d561037636600461198c565b6107c1565b600061038682610821565b92915050565b610396828261089d565b5050565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b905090565b6103f78383836109c9565b505050565b30331461041c5760405163fd570b5160e01b815260040160405180910390fd5b6103968282610cec565b3033146104465760405163fd570b5160e01b815260040160405180910390fd5b61044f81610ea6565b50565b6060815167ffffffffffffffff81111561046e5761046e61192c565b604051908082528060200260200182016040528015610497578160200160208202803683370190505b50905060005b82518110156104fc576104c88382815181106104bb576104bb611c7a565b6020026020010151610eb1565b8282815181106104da576104da611c7a565b91151560209283029190910190910152806104f481611cd8565b91505061049d565b50919050565b6103f783838360405180602001604052806000815250610ef3565b61044f816001610f50565b3033146105485760405163fd570b5160e01b815260040160405180910390fd5b60005b838110156105ad5761059b85858381811061056857610568611c7a565b905060200201602081019061057d9190611b30565b84848481811061058f5761058f611c7a565b90506020020135610cec565b806105a581611cd8565b91505061054b565b5050505050565b3033146105d45760405163fd570b5160e01b815260040160405180910390fd5b60005b8151811015610396576106028282815181106105f5576105f5611c7a565b6020026020010151611209565b8061060c81611cd8565b9150506105d7565b3033146106345760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761066282828151811061065557610655611c7a565b6020026020010151610ea6565b8061066c81611cd8565b915050610637565b60006103868261127f565b60006103868261128a565b3033146106aa5760405163fd570b5160e01b815260040160405180910390fd5b61044f81611311565b610396828261137f565b600061038682610eb1565b6106d484848484610ef3565b50505050565b3033146106fa5760405163fd570b5160e01b815260040160405180910390fd5b61044f81611209565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f55490565b60005b81518110156103965761075d82828151811061074e5761074e611c7a565b60200260200101516001610f50565b8061076781611cd8565b915050610730565b6001600160a01b0380831660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832093851683529290529081205460ff165b9392505050565b3033146107e15760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761080f82828151811061080257610802611c7a565b6020026020010151611311565b8061081981611cd8565b9150506107e4565b600061082c8261146a565b610862576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4660205260409020546001600160a01b031690565b60006108a88261127f565b9050336001600160a01b03821614610936576001600160a01b03811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff16610936576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006109d4826114e9565b9050836001600160a01b0316816001600160a01b031614610a21576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604090208054610a6c8187335b6001600160a01b039081169116811491141790565b610aec576001600160a01b03861660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff16610aec576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516610b2c576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b3986868660016115df565b8015610b4457600082555b6001600160a01b0386811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4560205260408082208054600019019055918716808252919020805460010190554260a01b177c02000000000000000000000000000000000000000000000000000000001760008581527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c020000000000000000000000000000000000000000000000000000000084169003610ca3576001840160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120549003610ca1577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548114610ca15760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3546000829003610d49576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5660008483856115df565b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020908152604080832080546801000000000000000188020190558483527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610e4357808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610e0b565b5081600003610e7e576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f35550505050565b61044f816000610f50565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b6020526040812054600160ff84161b161515610386565b610efe8484846109c9565b6001600160a01b0383163b156106d457610f1a848484846115eb565b6106d4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f5b836114e9565b905080600080610f988660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c466020526040902080549091565b91509150841561102d57610fad818433610a57565b61102d576001600160a01b03831660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff1661102d576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61103b8360008860016115df565b801561104657600082555b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b177c03000000000000000000000000000000000000000000000000000000001760008781527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c0200000000000000000000000000000000000000000000000000000000851690036111a1576001860160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040812054900361119f577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f354811461119f5760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a450507faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f48054600101905550505050565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b191690556040518181527ff27b6ce5b2f5e68ddb2fd95a8a909d4ecf1daaac270935fff052feacb24f1842906020015b60405180910390a150565b6000610386826114e9565b60006001600160a01b0382166112cc576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604090205467ffffffffffffffff1690565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b1790556040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a161190602001611274565b336001600160a01b038316036113c1576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c47602090815260408083206001600160a01b0387168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60007faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548210801561038657505060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b6000817faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548110156115ad5760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040812054907c0100000000000000000000000000000000000000000000000000000000821690036115ab575b806000036107ba57506000190160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090205461156b565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d484848484611739565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063150b7a0290611639903390899088908890600401611cf2565b6020604051808303816000875af1925050508015611674575060408051601f3d908101601f1916820190925261167191810190611d6b565b60015b6116eb573d8080156116a2576040519150601f19603f3d011682016040523d82523d6000602084013e6116a7565b606091505b5080516000036116e3576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b6001600160a01b038416156117c65760005b818110156117c4576117656117608285611dad565b610eb1565b156117b2576117748184611dad565b6040517f731b8ece0000000000000000000000000000000000000000000000000000000081526004016117a991815260200190565b60405180910390fd5b806117bc81611cd8565b91505061174b565b505b6106d4848484846001600160a01b0383161561188c577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f5548161184a7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b6118549190611dad565b111561188c576040517fb746b1c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d4565b6000602082840312156118a357600080fd5b5035919050565b80356001600160a01b03811681146118c157600080fd5b919050565b600080604083850312156118d957600080fd5b6118e2836118aa565b946020939093013593505050565b60008060006060848603121561190557600080fd5b61190e846118aa565b925061191c602085016118aa565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119845761198461192c565b604052919050565b6000602080838503121561199f57600080fd5b823567ffffffffffffffff808211156119b757600080fd5b818501915085601f8301126119cb57600080fd5b8135818111156119dd576119dd61192c565b8060051b91506119ee84830161195b565b8181529183018401918481019088841115611a0857600080fd5b938501935b83851015611a2657843582529385019390850190611a0d565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611a6c578351151583529284019291840191600101611a4e565b50909695505050505050565b60008083601f840112611a8a57600080fd5b50813567ffffffffffffffff811115611aa257600080fd5b6020830191508360208260051b8501011115611abd57600080fd5b9250929050565b60008060008060408587031215611ada57600080fd5b843567ffffffffffffffff80821115611af257600080fd5b611afe88838901611a78565b90965094506020870135915080821115611b1757600080fd5b50611b2487828801611a78565b95989497509550505050565b600060208284031215611b4257600080fd5b6107ba826118aa565b60008060408385031215611b5e57600080fd5b611b67836118aa565b915060208301358015158114611b7c57600080fd5b809150509250929050565b60008060008060808587031215611b9d57600080fd5b611ba6856118aa565b93506020611bb58187016118aa565b935060408601359250606086013567ffffffffffffffff80821115611bd957600080fd5b818801915088601f830112611bed57600080fd5b813581811115611bff57611bff61192c565b611c1184601f19601f8401160161195b565b91508082528984828501011115611c2757600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215611c5a57600080fd5b611c63836118aa565b9150611c71602084016118aa565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203611ceb57611ceb611ca9565b5060010190565b60006001600160a01b038087168352602081871681850152856040850152608060608501528451915081608085015260005b82811015611d405785810182015185820160a001528101611d24565b82811115611d5257600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215611d7d57600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146107ba57600080fd5b60008219821115611dc057611dc0611ca9565b50019056fea2646970667358221220c46642164a88bb7dee3c4ff7ff8f95c0314d1509398c8ae4d6f3f25a1faa7b7c64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018d5760003560e01c806352f50967116100e3578063b88d4fde1161008c578063e4623c1b11610066578063e4623c1b14610342578063e985e9c514610355578063f9497f341461036857600080fd5b8063b88d4fde14610314578063c7d1bc8314610327578063d5abeb011461033a57600080fd5b8063856e31c1116100bd578063856e31c1146102cb578063a22cb465146102de578063b45a3c0e146102f157600080fd5b806352f50967146102925780636352211e146102a557806370a08231146102b857600080fd5b80633c2a04591161014557806342966c681161011f57806342966c681461025957806349142a141461026c5780634a371f641461027f57600080fd5b80633c2a0459146102135780633d64bec01461022657806342842e0e1461024657600080fd5b806318160ddd1161017657806318160ddd146101d757806323b872dd146101ed5780632d4f475f1461020057600080fd5b8063081812fc14610192578063095ea7b3146101c2575b600080fd5b6101a56101a0366004611891565b61037b565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d56101d03660046118c6565b61038c565b005b6101df61039a565b6040519081526020016101b9565b6101d56101fb3660046118f0565b6103ec565b6101d561020e3660046118c6565b6103fc565b6101d5610221366004611891565b610426565b61023961023436600461198c565b610452565b6040516101b99190611a32565b6101d56102543660046118f0565b610502565b6101d5610267366004611891565b61051d565b6101d561027a366004611ac4565b610528565b6101d561028d36600461198c565b6105b4565b6101d56102a036600461198c565b610614565b6101a56102b3366004611891565b610674565b6101df6102c6366004611b30565b61067f565b6101d56102d9366004611891565b61068a565b6101d56102ec366004611b4b565b6106b3565b6103046102ff366004611891565b6106bd565b60405190151581526020016101b9565b6101d5610322366004611b87565b6106c8565b6101d5610335366004611891565b6106da565b6101df610703565b6101d561035036600461198c565b61072d565b610304610363366004611c47565b61076f565b6101d561037636600461198c565b6107c1565b600061038682610821565b92915050565b610396828261089d565b5050565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b905090565b6103f78383836109c9565b505050565b30331461041c5760405163fd570b5160e01b815260040160405180910390fd5b6103968282610cec565b3033146104465760405163fd570b5160e01b815260040160405180910390fd5b61044f81610ea6565b50565b6060815167ffffffffffffffff81111561046e5761046e61192c565b604051908082528060200260200182016040528015610497578160200160208202803683370190505b50905060005b82518110156104fc576104c88382815181106104bb576104bb611c7a565b6020026020010151610eb1565b8282815181106104da576104da611c7a565b91151560209283029190910190910152806104f481611cd8565b91505061049d565b50919050565b6103f783838360405180602001604052806000815250610ef3565b61044f816001610f50565b3033146105485760405163fd570b5160e01b815260040160405180910390fd5b60005b838110156105ad5761059b85858381811061056857610568611c7a565b905060200201602081019061057d9190611b30565b84848481811061058f5761058f611c7a565b90506020020135610cec565b806105a581611cd8565b91505061054b565b5050505050565b3033146105d45760405163fd570b5160e01b815260040160405180910390fd5b60005b8151811015610396576106028282815181106105f5576105f5611c7a565b6020026020010151611209565b8061060c81611cd8565b9150506105d7565b3033146106345760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761066282828151811061065557610655611c7a565b6020026020010151610ea6565b8061066c81611cd8565b915050610637565b60006103868261127f565b60006103868261128a565b3033146106aa5760405163fd570b5160e01b815260040160405180910390fd5b61044f81611311565b610396828261137f565b600061038682610eb1565b6106d484848484610ef3565b50505050565b3033146106fa5760405163fd570b5160e01b815260040160405180910390fd5b61044f81611209565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f55490565b60005b81518110156103965761075d82828151811061074e5761074e611c7a565b60200260200101516001610f50565b8061076781611cd8565b915050610730565b6001600160a01b0380831660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832093851683529290529081205460ff165b9392505050565b3033146107e15760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761080f82828151811061080257610802611c7a565b6020026020010151611311565b8061081981611cd8565b9150506107e4565b600061082c8261146a565b610862576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4660205260409020546001600160a01b031690565b60006108a88261127f565b9050336001600160a01b03821614610936576001600160a01b03811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff16610936576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006109d4826114e9565b9050836001600160a01b0316816001600160a01b031614610a21576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604090208054610a6c8187335b6001600160a01b039081169116811491141790565b610aec576001600160a01b03861660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff16610aec576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516610b2c576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b3986868660016115df565b8015610b4457600082555b6001600160a01b0386811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4560205260408082208054600019019055918716808252919020805460010190554260a01b177c02000000000000000000000000000000000000000000000000000000001760008581527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c020000000000000000000000000000000000000000000000000000000084169003610ca3576001840160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120549003610ca1577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548114610ca15760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3546000829003610d49576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5660008483856115df565b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020908152604080832080546801000000000000000188020190558483527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610e4357808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610e0b565b5081600003610e7e576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f35550505050565b61044f816000610f50565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b6020526040812054600160ff84161b161515610386565b610efe8484846109c9565b6001600160a01b0383163b156106d457610f1a848484846115eb565b6106d4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f5b836114e9565b905080600080610f988660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c466020526040902080549091565b91509150841561102d57610fad818433610a57565b61102d576001600160a01b03831660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff1661102d576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61103b8360008860016115df565b801561104657600082555b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b177c03000000000000000000000000000000000000000000000000000000001760008781527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c0200000000000000000000000000000000000000000000000000000000851690036111a1576001860160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040812054900361119f577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f354811461119f5760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a450507faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f48054600101905550505050565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b191690556040518181527ff27b6ce5b2f5e68ddb2fd95a8a909d4ecf1daaac270935fff052feacb24f1842906020015b60405180910390a150565b6000610386826114e9565b60006001600160a01b0382166112cc576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604090205467ffffffffffffffff1690565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b1790556040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a161190602001611274565b336001600160a01b038316036113c1576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c47602090815260408083206001600160a01b0387168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60007faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548210801561038657505060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b6000817faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548110156115ad5760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040812054907c0100000000000000000000000000000000000000000000000000000000821690036115ab575b806000036107ba57506000190160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090205461156b565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d484848484611739565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063150b7a0290611639903390899088908890600401611cf2565b6020604051808303816000875af1925050508015611674575060408051601f3d908101601f1916820190925261167191810190611d6b565b60015b6116eb573d8080156116a2576040519150601f19603f3d011682016040523d82523d6000602084013e6116a7565b606091505b5080516000036116e3576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b6001600160a01b038416156117c65760005b818110156117c4576117656117608285611dad565b610eb1565b156117b2576117748184611dad565b6040517f731b8ece0000000000000000000000000000000000000000000000000000000081526004016117a991815260200190565b60405180910390fd5b806117bc81611cd8565b91505061174b565b505b6106d4848484846001600160a01b0383161561188c577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f5548161184a7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b6118549190611dad565b111561188c576040517fb746b1c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d4565b6000602082840312156118a357600080fd5b5035919050565b80356001600160a01b03811681146118c157600080fd5b919050565b600080604083850312156118d957600080fd5b6118e2836118aa565b946020939093013593505050565b60008060006060848603121561190557600080fd5b61190e846118aa565b925061191c602085016118aa565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119845761198461192c565b604052919050565b6000602080838503121561199f57600080fd5b823567ffffffffffffffff808211156119b757600080fd5b818501915085601f8301126119cb57600080fd5b8135818111156119dd576119dd61192c565b8060051b91506119ee84830161195b565b8181529183018401918481019088841115611a0857600080fd5b938501935b83851015611a2657843582529385019390850190611a0d565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611a6c578351151583529284019291840191600101611a4e565b50909695505050505050565b60008083601f840112611a8a57600080fd5b50813567ffffffffffffffff811115611aa257600080fd5b6020830191508360208260051b8501011115611abd57600080fd5b9250929050565b60008060008060408587031215611ada57600080fd5b843567ffffffffffffffff80821115611af257600080fd5b611afe88838901611a78565b90965094506020870135915080821115611b1757600080fd5b50611b2487828801611a78565b95989497509550505050565b600060208284031215611b4257600080fd5b6107ba826118aa565b60008060408385031215611b5e57600080fd5b611b67836118aa565b915060208301358015158114611b7c57600080fd5b809150509250929050565b60008060008060808587031215611b9d57600080fd5b611ba6856118aa565b93506020611bb58187016118aa565b935060408601359250606086013567ffffffffffffffff80821115611bd957600080fd5b818801915088601f830112611bed57600080fd5b813581811115611bff57611bff61192c565b611c1184601f19601f8401160161195b565b91508082528984828501011115611c2757600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215611c5a57600080fd5b611c63836118aa565b9150611c71602084016118aa565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203611ceb57611ceb611ca9565b5060010190565b60006001600160a01b038087168352602081871681850152856040850152608060608501528451915081608085015260005b82811015611d405785810182015185820160a001528101611d24565b82811115611d5257600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215611d7d57600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146107ba57600080fd5b60008219821115611dc057611dc0611ca9565b50019056fea2646970667358221220c46642164a88bb7dee3c4ff7ff8f95c0314d1509398c8ae4d6f3f25a1faa7b7c64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./base/ERC721ABase.sol\";\n\nimport \"./extensions/supply/ERC721ASupplyExtension.sol\";\nimport \"./extensions/mintable/ERC721AMintableExtension.sol\";\nimport \"./extensions/lockable/ERC721ALockableExtension.sol\";\nimport \"./extensions/burnable/ERC721ABurnableExtension.sol\";\n\n/**\n * @title ERC721 (A) - Standard\n * @notice Azuki's implementation of standard EIP-721 NFTs with core capabilities of Mintable, Burnable and Lockable.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:provides-interfaces IERC721 IERC721ABase IERC721SupplyExtension IERC721MintableExtension IERC721BurnableExtension IERC721LockableExtension IERC5192\n */\ncontract ERC721A is\n    ERC721ABase,\n    ERC721ASupplyExtension,\n    ERC721AMintableExtension,\n    ERC721ALockableExtension,\n    ERC721ABurnableExtension\n{\n    /**\n     * @dev See {ERC721A-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual override(ERC721ABaseInternal, ERC721ASupplyExtension, ERC721ALockableInternal) {\n        super._beforeTokenTransfers(from, to, startTokenId, quantity);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/ERC721AWithERC2771": {
    "fqn": "flair-sdk:token/ERC721/ERC721AWithERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0xcF176dc89d1830BdD0F7D8eB385C4Df6605DA958",
      "goerli": "0xcF176dc89d1830BdD0F7D8eB385C4Df6605DA958"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721AWithERC2771",
      "sourceName": "src/token/ERC721/ERC721AWithERC2771.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrMaxSupplyExceeded",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ErrTokenLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Locked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Unlocked",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ticketTokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool[]",
              "name": "states",
              "type": "bool[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611e59806100206000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806352f50967116100e3578063b88d4fde1161008c578063e4623c1b11610066578063e4623c1b14610342578063e985e9c514610355578063f9497f341461036857600080fd5b8063b88d4fde14610314578063c7d1bc8314610327578063d5abeb011461033a57600080fd5b8063856e31c1116100bd578063856e31c1146102cb578063a22cb465146102de578063b45a3c0e146102f157600080fd5b806352f50967146102925780636352211e146102a557806370a08231146102b857600080fd5b80633c2a04591161014557806342966c681161011f57806342966c681461025957806349142a141461026c5780634a371f641461027f57600080fd5b80633c2a0459146102135780633d64bec01461022657806342842e0e1461024657600080fd5b806318160ddd1161017657806318160ddd146101d757806323b872dd146101ed5780632d4f475f1461020057600080fd5b8063081812fc14610192578063095ea7b3146101c2575b600080fd5b6101a56101a03660046118ef565b61037b565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d56101d0366004611924565b61038c565b005b6101df61039a565b6040519081526020016101b9565b6101d56101fb36600461194e565b6103ec565b6101d561020e366004611924565b6103fc565b6101d56102213660046118ef565b610426565b6102396102343660046119ea565b610452565b6040516101b99190611a90565b6101d561025436600461194e565b610502565b6101d56102673660046118ef565b61051d565b6101d561027a366004611b22565b610528565b6101d561028d3660046119ea565b6105b4565b6101d56102a03660046119ea565b610614565b6101a56102b33660046118ef565b610674565b6101df6102c6366004611b8e565b61067f565b6101d56102d93660046118ef565b61068a565b6101d56102ec366004611ba9565b6106b3565b6103046102ff3660046118ef565b6106bd565b60405190151581526020016101b9565b6101d5610322366004611be5565b6106c8565b6101d56103353660046118ef565b6106da565b6101df610703565b6101d56103503660046119ea565b61072d565b610304610363366004611ca5565b61076f565b6101d56103763660046119ea565b6107c1565b600061038682610821565b92915050565b610396828261089d565b5050565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b905090565b6103f78383836109ec565b505050565b30331461041c5760405163fd570b5160e01b815260040160405180910390fd5b6103968282610cdb565b3033146104465760405163fd570b5160e01b815260040160405180910390fd5b61044f81610e95565b50565b6060815167ffffffffffffffff81111561046e5761046e61198a565b604051908082528060200260200182016040528015610497578160200160208202803683370190505b50905060005b82518110156104fc576104c88382815181106104bb576104bb611cd8565b6020026020010151610ea0565b8282815181106104da576104da611cd8565b91151560209283029190910190910152806104f481611d36565b91505061049d565b50919050565b6103f783838360405180602001604052806000815250610ee2565b61044f816001610f3f565b3033146105485760405163fd570b5160e01b815260040160405180910390fd5b60005b838110156105ad5761059b85858381811061056857610568611cd8565b905060200201602081019061057d9190611b8e565b84848481811061058f5761058f611cd8565b90506020020135610cdb565b806105a581611d36565b91505061054b565b5050505050565b3033146105d45760405163fd570b5160e01b815260040160405180910390fd5b60005b8151811015610396576106028282815181106105f5576105f5611cd8565b60200260200101516111c0565b8061060c81611d36565b9150506105d7565b3033146106345760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761066282828151811061065557610655611cd8565b6020026020010151610e95565b8061066c81611d36565b915050610637565b600061038682611236565b600061038682611241565b3033146106aa5760405163fd570b5160e01b815260040160405180910390fd5b61044f816112c8565b6103968282611336565b600061038682610ea0565b6106d484848484610ee2565b50505050565b3033146106fa5760405163fd570b5160e01b815260040160405180910390fd5b61044f816111c0565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f55490565b60005b81518110156103965761075d82828151811061074e5761074e611cd8565b60200260200101516001610f3f565b8061076781611d36565b915050610730565b6001600160a01b0380831660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832093851683529290529081205460ff165b9392505050565b3033146107e15760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761080f82828151811061080257610802611cd8565b60200260200101516112c8565b8061081981611d36565b9150506107e4565b600061082c8261145e565b610862576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4660205260409020546001600160a01b031690565b60006108a882611236565b9050806001600160a01b03166108bc6114dd565b6001600160a01b03161461095957610923816108d66114dd565b6001600160a01b0391821660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832093909416825291909152205460ff1690565b610959576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006109f7826114e7565b9050836001600160a01b0316816001600160a01b031614610a44576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604090208054610a958187610a806114dd565b6001600160a01b039081169116811491141790565b610adb57610aa5866108d66114dd565b610adb576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516610b1b576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2886868660016115dd565b8015610b3357600082555b6001600160a01b0386811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4560205260408082208054600019019055918716808252919020805460010190554260a01b177c02000000000000000000000000000000000000000000000000000000001760008581527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c020000000000000000000000000000000000000000000000000000000084169003610c92576001840160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120549003610c90577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548114610c905760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3546000829003610d38576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4560008483856115dd565b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020908152604080832080546801000000000000000188020190558483527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610e3257808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610dfa565b5081600003610e6d576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f35550505050565b61044f816000610f3f565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b6020526040812054600160ff84161b161515610386565b610eed8484846109ec565b6001600160a01b0383163b156106d457610f09848484846115e9565b6106d4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f4a836114e7565b905080600080610f878660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c466020526040902080549091565b915091508415610fe457610f9e8184610a806114dd565b610fe457610fae836108d66114dd565b610fe4576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ff28360008860016115dd565b8015610ffd57600082555b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b177c03000000000000000000000000000000000000000000000000000000001760008781527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c020000000000000000000000000000000000000000000000000000000085169003611158576001860160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120549003611156577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f35481146111565760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a450507faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f48054600101905550505050565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b191690556040518181527ff27b6ce5b2f5e68ddb2fd95a8a909d4ecf1daaac270935fff052feacb24f1842906020015b60405180910390a150565b6000610386826114e7565b60006001600160a01b038216611283576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604090205467ffffffffffffffff1690565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b1790556040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a16119060200161122b565b61133e6114dd565b6001600160a01b0316826001600160a01b031603611388576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4760006113b46114dd565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556114166114dd565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611452911515815260200190565b60405180910390a35050565b60007faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548210801561038657505060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b60006103e7611724565b6000817faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548110156115ab5760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040812054907c0100000000000000000000000000000000000000000000000000000000821690036115a9575b806000036107ba57506000190160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040902054611569565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d48484848461172e565b6000836001600160a01b031663150b7a026116026114dd565b8786866040518563ffffffff1660e01b81526004016116249493929190611d50565b6020604051808303816000875af192505050801561165f575060408051601f3d908101601f1916820190925261165c91810190611dc9565b60015b6116d6573d80801561168d576040519150601f19603f3d011682016040523d82523d6000602084013e611692565b606091505b5080516000036116ce576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b60006103e76117c7565b6001600160a01b038416156117bb5760005b818110156117b95761175a6117558285611e0b565b610ea0565b156117a7576117698184611e0b565b6040517f731b8ece00000000000000000000000000000000000000000000000000000000815260040161179e91815260200190565b60405180910390fd5b806117b181611d36565b915050611740565b505b6106d48484848461182b565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f420546000906001600160a01b0316330361182657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b6001600160a01b038316156118ea577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f554816118a87faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b6118b29190611e0b565b11156118ea576040517fb746b1c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d4565b60006020828403121561190157600080fd5b5035919050565b80356001600160a01b038116811461191f57600080fd5b919050565b6000806040838503121561193757600080fd5b61194083611908565b946020939093013593505050565b60008060006060848603121561196357600080fd5b61196c84611908565b925061197a60208501611908565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119e2576119e261198a565b604052919050565b600060208083850312156119fd57600080fd5b823567ffffffffffffffff80821115611a1557600080fd5b818501915085601f830112611a2957600080fd5b813581811115611a3b57611a3b61198a565b8060051b9150611a4c8483016119b9565b8181529183018401918481019088841115611a6657600080fd5b938501935b83851015611a8457843582529385019390850190611a6b565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611aca578351151583529284019291840191600101611aac565b50909695505050505050565b60008083601f840112611ae857600080fd5b50813567ffffffffffffffff811115611b0057600080fd5b6020830191508360208260051b8501011115611b1b57600080fd5b9250929050565b60008060008060408587031215611b3857600080fd5b843567ffffffffffffffff80821115611b5057600080fd5b611b5c88838901611ad6565b90965094506020870135915080821115611b7557600080fd5b50611b8287828801611ad6565b95989497509550505050565b600060208284031215611ba057600080fd5b6107ba82611908565b60008060408385031215611bbc57600080fd5b611bc583611908565b915060208301358015158114611bda57600080fd5b809150509250929050565b60008060008060808587031215611bfb57600080fd5b611c0485611908565b93506020611c13818701611908565b935060408601359250606086013567ffffffffffffffff80821115611c3757600080fd5b818801915088601f830112611c4b57600080fd5b813581811115611c5d57611c5d61198a565b611c6f84601f19601f840116016119b9565b91508082528984828501011115611c8557600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215611cb857600080fd5b611cc183611908565b9150611ccf60208401611908565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203611d4957611d49611d07565b5060010190565b60006001600160a01b038087168352602081871681850152856040850152608060608501528451915081608085015260005b82811015611d9e5785810182015185820160a001528101611d82565b82811115611db057600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215611ddb57600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146107ba57600080fd5b60008219821115611e1e57611e1e611d07565b50019056fea2646970667358221220758119a5b004cb2e159637596e4784041c156570b15714de844527c15e79591164736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018d5760003560e01c806352f50967116100e3578063b88d4fde1161008c578063e4623c1b11610066578063e4623c1b14610342578063e985e9c514610355578063f9497f341461036857600080fd5b8063b88d4fde14610314578063c7d1bc8314610327578063d5abeb011461033a57600080fd5b8063856e31c1116100bd578063856e31c1146102cb578063a22cb465146102de578063b45a3c0e146102f157600080fd5b806352f50967146102925780636352211e146102a557806370a08231146102b857600080fd5b80633c2a04591161014557806342966c681161011f57806342966c681461025957806349142a141461026c5780634a371f641461027f57600080fd5b80633c2a0459146102135780633d64bec01461022657806342842e0e1461024657600080fd5b806318160ddd1161017657806318160ddd146101d757806323b872dd146101ed5780632d4f475f1461020057600080fd5b8063081812fc14610192578063095ea7b3146101c2575b600080fd5b6101a56101a03660046118ef565b61037b565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d56101d0366004611924565b61038c565b005b6101df61039a565b6040519081526020016101b9565b6101d56101fb36600461194e565b6103ec565b6101d561020e366004611924565b6103fc565b6101d56102213660046118ef565b610426565b6102396102343660046119ea565b610452565b6040516101b99190611a90565b6101d561025436600461194e565b610502565b6101d56102673660046118ef565b61051d565b6101d561027a366004611b22565b610528565b6101d561028d3660046119ea565b6105b4565b6101d56102a03660046119ea565b610614565b6101a56102b33660046118ef565b610674565b6101df6102c6366004611b8e565b61067f565b6101d56102d93660046118ef565b61068a565b6101d56102ec366004611ba9565b6106b3565b6103046102ff3660046118ef565b6106bd565b60405190151581526020016101b9565b6101d5610322366004611be5565b6106c8565b6101d56103353660046118ef565b6106da565b6101df610703565b6101d56103503660046119ea565b61072d565b610304610363366004611ca5565b61076f565b6101d56103763660046119ea565b6107c1565b600061038682610821565b92915050565b610396828261089d565b5050565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b905090565b6103f78383836109ec565b505050565b30331461041c5760405163fd570b5160e01b815260040160405180910390fd5b6103968282610cdb565b3033146104465760405163fd570b5160e01b815260040160405180910390fd5b61044f81610e95565b50565b6060815167ffffffffffffffff81111561046e5761046e61198a565b604051908082528060200260200182016040528015610497578160200160208202803683370190505b50905060005b82518110156104fc576104c88382815181106104bb576104bb611cd8565b6020026020010151610ea0565b8282815181106104da576104da611cd8565b91151560209283029190910190910152806104f481611d36565b91505061049d565b50919050565b6103f783838360405180602001604052806000815250610ee2565b61044f816001610f3f565b3033146105485760405163fd570b5160e01b815260040160405180910390fd5b60005b838110156105ad5761059b85858381811061056857610568611cd8565b905060200201602081019061057d9190611b8e565b84848481811061058f5761058f611cd8565b90506020020135610cdb565b806105a581611d36565b91505061054b565b5050505050565b3033146105d45760405163fd570b5160e01b815260040160405180910390fd5b60005b8151811015610396576106028282815181106105f5576105f5611cd8565b60200260200101516111c0565b8061060c81611d36565b9150506105d7565b3033146106345760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761066282828151811061065557610655611cd8565b6020026020010151610e95565b8061066c81611d36565b915050610637565b600061038682611236565b600061038682611241565b3033146106aa5760405163fd570b5160e01b815260040160405180910390fd5b61044f816112c8565b6103968282611336565b600061038682610ea0565b6106d484848484610ee2565b50505050565b3033146106fa5760405163fd570b5160e01b815260040160405180910390fd5b61044f816111c0565b60006103e77faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f55490565b60005b81518110156103965761075d82828151811061074e5761074e611cd8565b60200260200101516001610f3f565b8061076781611d36565b915050610730565b6001600160a01b0380831660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832093851683529290529081205460ff165b9392505050565b3033146107e15760405163fd570b5160e01b815260040160405180910390fd5b60005b81518110156103965761080f82828151811061080257610802611cd8565b60200260200101516112c8565b8061081981611d36565b9150506107e4565b600061082c8261145e565b610862576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4660205260409020546001600160a01b031690565b60006108a882611236565b9050806001600160a01b03166108bc6114dd565b6001600160a01b03161461095957610923816108d66114dd565b6001600160a01b0391821660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832093909416825291909152205460ff1690565b610959576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006109f7826114e7565b9050836001600160a01b0316816001600160a01b031614610a44576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604090208054610a958187610a806114dd565b6001600160a01b039081169116811491141790565b610adb57610aa5866108d66114dd565b610adb576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038516610b1b576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2886868660016115dd565b8015610b3357600082555b6001600160a01b0386811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4560205260408082208054600019019055918716808252919020805460010190554260a01b177c02000000000000000000000000000000000000000000000000000000001760008581527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c020000000000000000000000000000000000000000000000000000000084169003610c92576001840160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120549003610c90577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548114610c905760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208490555b505b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3546000829003610d38576040517fb562e8dd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4560008483856115dd565b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020908152604080832080546801000000000000000188020190558483527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4490915281206001851460e11b4260a01b178317905582840190839083907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4600183015b818114610e3257808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4600101610dfa565b5081600003610e6d576040517f2e07630000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f35550505050565b61044f816000610f3f565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b6020526040812054600160ff84161b161515610386565b610eed8484846109ec565b6001600160a01b0383163b156106d457610f09848484846115e9565b6106d4576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610f4a836114e7565b905080600080610f878660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c466020526040902080549091565b915091508415610fe457610f9e8184610a806114dd565b610fe457610fae836108d66114dd565b610fe4576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ff28360008860016115dd565b8015610ffd57600082555b6001600160a01b03831660008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c456020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b177c03000000000000000000000000000000000000000000000000000000001760008781527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c020000000000000000000000000000000000000000000000000000000085169003611158576001860160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120549003611156577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f35481146111565760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a450507faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f48054600101905550505050565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b191690556040518181527ff27b6ce5b2f5e68ddb2fd95a8a909d4ecf1daaac270935fff052feacb24f1842906020015b60405180910390a150565b6000610386826114e7565b60006001600160a01b038216611283576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b506001600160a01b031660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604090205467ffffffffffffffff1690565b600881901c60009081527f939803063e013e06d8dc3e649f5637d6c85e7cdf5a06a1acfb7ec0a27fc9114b602052604090208054600160ff84161b1790556040518181527f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a16119060200161122b565b61133e6114dd565b6001600160a01b0316826001600160a01b031603611388576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b807f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4760006113b46114dd565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016921515929092179091556114166114dd565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611452911515815260200190565b60405180910390a35050565b60007faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548210801561038657505060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b60006103e7611724565b6000817faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3548110156115ab5760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040812054907c0100000000000000000000000000000000000000000000000000000000821690036115a9575b806000036107ba57506000190160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040902054611569565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d48484848461172e565b6000836001600160a01b031663150b7a026116026114dd565b8786866040518563ffffffff1660e01b81526004016116249493929190611d50565b6020604051808303816000875af192505050801561165f575060408051601f3d908101601f1916820190925261165c91810190611dc9565b60015b6116d6573d80801561168d576040519150601f19603f3d011682016040523d82523d6000602084013e611692565b606091505b5080516000036116ce576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b60006103e76117c7565b6001600160a01b038416156117bb5760005b818110156117b95761175a6117558285611e0b565b610ea0565b156117a7576117698184611e0b565b6040517f731b8ece00000000000000000000000000000000000000000000000000000000815260040161179e91815260200190565b60405180910390fd5b806117b181611d36565b915050611740565b505b6106d48484848461182b565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f420546000906001600160a01b0316330361182657507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b6001600160a01b038316156118ea577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f554816118a87faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b6118b29190611e0b565b11156118ea576040517fb746b1c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d4565b60006020828403121561190157600080fd5b5035919050565b80356001600160a01b038116811461191f57600080fd5b919050565b6000806040838503121561193757600080fd5b61194083611908565b946020939093013593505050565b60008060006060848603121561196357600080fd5b61196c84611908565b925061197a60208501611908565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119e2576119e261198a565b604052919050565b600060208083850312156119fd57600080fd5b823567ffffffffffffffff80821115611a1557600080fd5b818501915085601f830112611a2957600080fd5b813581811115611a3b57611a3b61198a565b8060051b9150611a4c8483016119b9565b8181529183018401918481019088841115611a6657600080fd5b938501935b83851015611a8457843582529385019390850190611a6b565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611aca578351151583529284019291840191600101611aac565b50909695505050505050565b60008083601f840112611ae857600080fd5b50813567ffffffffffffffff811115611b0057600080fd5b6020830191508360208260051b8501011115611b1b57600080fd5b9250929050565b60008060008060408587031215611b3857600080fd5b843567ffffffffffffffff80821115611b5057600080fd5b611b5c88838901611ad6565b90965094506020870135915080821115611b7557600080fd5b50611b8287828801611ad6565b95989497509550505050565b600060208284031215611ba057600080fd5b6107ba82611908565b60008060408385031215611bbc57600080fd5b611bc583611908565b915060208301358015158114611bda57600080fd5b809150509250929050565b60008060008060808587031215611bfb57600080fd5b611c0485611908565b93506020611c13818701611908565b935060408601359250606086013567ffffffffffffffff80821115611c3757600080fd5b818801915088601f830112611c4b57600080fd5b813581811115611c5d57611c5d61198a565b611c6f84601f19601f840116016119b9565b91508082528984828501011115611c8557600080fd5b808484018584013760008482840101525080935050505092959194509250565b60008060408385031215611cb857600080fd5b611cc183611908565b9150611ccf60208401611908565b90509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006000198203611d4957611d49611d07565b5060010190565b60006001600160a01b038087168352602081871681850152856040850152608060608501528451915081608085015260005b82811015611d9e5785810182015185820160a001528101611d82565b82811115611db057600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215611ddb57600080fd5b81517fffffffff00000000000000000000000000000000000000000000000000000000811681146107ba57600080fd5b60008219821115611e1e57611e1e611d07565b50019056fea2646970667358221220758119a5b004cb2e159637596e4784041c156570b15714de844527c15e79591164736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./base/ERC721ABaseERC2771.sol\";\nimport \"./extensions/supply/ERC721ASupplyExtension.sol\";\nimport \"./extensions/lockable/ERC721ALockableExtension.sol\";\nimport \"./extensions/mintable/ERC721AMintableExtension.sol\";\nimport \"./extensions/burnable/ERC721ABurnableExtension.sol\";\n\n/**\n * @title ERC721 (A) - With ERC2771 Context\n * @notice Azuki's implemntation of standard EIP-721 with ability to accept meta transactions (mainly transfer or burn methods).\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:provides-interfaces IERC721 IERC721ABase IERC721SupplyExtension IERC721MintableExtension IERC721LockableExtension IERC721BurnableExtension\n */\ncontract ERC721AWithERC2771 is\n    ERC721ABaseERC2771,\n    ERC721ASupplyExtension,\n    ERC721AMintableExtension,\n    ERC721ABurnableExtension,\n    ERC721ALockableExtension\n{\n    /**\n     * @dev See {ERC721A-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual override(ERC721ABaseInternal, ERC721ALockableInternal, ERC721ASupplyExtension) {\n        super._beforeTokenTransfers(from, to, startTokenId, quantity);\n    }\n\n    function _msgSender() internal view virtual override(Context, ERC721ABaseERC2771) returns (address) {\n        return ERC721ABaseERC2771._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC721ABaseERC2771) returns (bytes calldata) {\n        return ERC721ABaseERC2771._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/locking/ERC721LockableOwnable": {
    "fqn": "flair-sdk:token/ERC721/facets/locking/ERC721LockableOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x6f77faCbfcBd6734BE95228DE7D748b9aFC53735",
      "goerli": "0x6f77faCbfcBd6734BE95228DE7D748b9aFC53735"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721LockableOwnable",
      "sourceName": "src/token/ERC721/facets/locking/ERC721LockableOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b506105e5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80637181011614610051578063a3dddafa14610066578063b95440dc14610079578063e923a2a21461008c575b600080fd5b61006461005f366004610447565b61009f565b005b61006461007436600461048f565b6101b2565b610064610087366004610447565b61028e565b61006461009a36600461048f565b61036b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f856e31c100000000000000000000000000000000000000000000000000000000815260048101829052309063856e31c1906024015b600060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517f4a371f640000000000000000000000000000000000000000000000000000000081523090634a371f649061017d90849060040161056b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461032e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517fc7d1bc8300000000000000000000000000000000000000000000000000000000815260048101829052309063c7d1bc839060240161017d565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517ff9497f34000000000000000000000000000000000000000000000000000000008152309063f9497f349061017d90849060040161056b565b60006020828403121561045957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208083850312156104a257600080fd5b823567ffffffffffffffff808211156104ba57600080fd5b818501915085601f8301126104ce57600080fd5b8135818111156104e0576104e0610460565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561052357610523610460565b60405291825284820192508381018501918883111561054157600080fd5b938501935b8285101561055f57843584529385019392850192610546565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105a357835183529284019291840191600101610587565b5090969550505050505056fea26469706673582212207936b9753ebb5e90f3d18ee64b33765f85e7ae1ac1cc867b16830a40266c583c64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80637181011614610051578063a3dddafa14610066578063b95440dc14610079578063e923a2a21461008c575b600080fd5b61006461005f366004610447565b61009f565b005b61006461007436600461048f565b6101b2565b610064610087366004610447565b61028e565b61006461009a36600461048f565b61036b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f856e31c100000000000000000000000000000000000000000000000000000000815260048101829052309063856e31c1906024015b600060405180830381600087803b15801561019757600080fd5b505af11580156101ab573d6000803e3d6000fd5b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517f4a371f640000000000000000000000000000000000000000000000000000000081523090634a371f649061017d90849060040161056b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461032e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517fc7d1bc8300000000000000000000000000000000000000000000000000000000815260048101829052309063c7d1bc839060240161017d565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461040b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161013b565b6040517ff9497f34000000000000000000000000000000000000000000000000000000008152309063f9497f349061017d90849060040161056b565b60006020828403121561045957600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208083850312156104a257600080fd5b823567ffffffffffffffff808211156104ba57600080fd5b818501915085601f8301126104ce57600080fd5b8135818111156104e0576104e0610460565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561052357610523610460565b60405291825284820192508381018501918883111561054157600080fd5b938501935b8285101561055f57843584529385019392850192610546565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156105a357835183529284019291840191600101610587565b5090969550505050505056fea26469706673582212207936b9753ebb5e90f3d18ee64b33765f85e7ae1ac1cc867b16830a40266c583c64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"../../extensions/lockable/IERC721LockableExtension.sol\";\nimport \"./IERC721LockableOwnable.sol\";\n\n/**\n * @title ERC721 - Lock as owner\n * @notice Allow locking tokens as the contract owner.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721LockableExtension\n * @custom:provides-interfaces IERC721LockableOwnable\n */\ncontract ERC721LockableOwnable is IERC721LockableOwnable, OwnableInternal {\n    /**\n     * @inheritdoc IERC721LockableOwnable\n     */\n    function lockByOwner(uint256 id) public virtual onlyOwner {\n        IERC721LockableExtension(address(this)).lockByFacet(id);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableOwnable\n     */\n    function lockByOwner(uint256[] memory ids) public virtual onlyOwner {\n        IERC721LockableExtension(address(this)).lockByFacet(ids);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableOwnable\n     */\n    function unlockByOwner(uint256 id) public virtual onlyOwner {\n        IERC721LockableExtension(address(this)).unlockByFacet(id);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableOwnable\n     */\n    function unlockByOwner(uint256[] memory ids) public virtual onlyOwner {\n        IERC721LockableExtension(address(this)).unlockByFacet(ids);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/locking/ERC721LockableRoleBased": {
    "fqn": "flair-sdk:token/ERC721/facets/locking/ERC721LockableRoleBased",
    "version": "2.14.0",
    "address": {
      "5": "0x3A7e0A560131d4B12A0A349385F247eC31900Fc6",
      "goerli": "0x3A7e0A560131d4B12A0A349385F247eC31900Fc6"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721LockableRoleBased",
      "sourceName": "src/token/ERC721/facets/locking/ERC721LockableRoleBased.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "LOCKER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610966806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80635b5cc735116100505780635b5cc735146100b2578063a217fddf146100c5578063f3621367146100df57600080fd5b80631893a98f14610077578063391c5bc51461008c578063523e71151461009f575b600080fd5b61008a61008536600461061a565b610106565b005b61008a61009a36600461061a565b61019f565b61008a6100ad366004610662565b610206565b61008a6100c0366004610662565b61026c565b6100cd600081565b60405190815260200160405180910390f35b6100cd7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027981565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a90279610130816102d2565b6040517f856e31c100000000000000000000000000000000000000000000000000000000815260048101839052309063856e31c1906024015b600060405180830381600087803b15801561018357600080fd5b505af1158015610197573d6000803e3d6000fd5b505050505050565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a902796101c9816102d2565b6040517fc7d1bc8300000000000000000000000000000000000000000000000000000000815260048101839052309063c7d1bc8390602401610169565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a90279610230816102d2565b6040517f4a371f640000000000000000000000000000000000000000000000000000000081523090634a371f6490610169908590600401610720565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a90279610296816102d2565b6040517ff9497f34000000000000000000000000000000000000000000000000000000008152309063f9497f3490610169908590600401610720565b6102dc81336102df565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166103a35761033e816103a7565b6103498360206103d0565b60405160200161035a929190610794565b60408051601f19818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261039a91600401610815565b60405180910390fd5b5050565b60606103ca73ffffffffffffffffffffffffffffffffffffffff831660146103d0565b92915050565b606060006103df836002610877565b6103ea9060026108b4565b67ffffffffffffffff81111561040257610402610633565b6040519080825280601f01601f19166020018201604052801561042c576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610463576104636108cc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106104c6576104c66108cc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610502846002610877565b61050d9060016108b4565b90505b60018111156105aa577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061054e5761054e6108cc565b1a60f81b828281518110610564576105646108cc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936105a3816108fb565b9050610510565b508315610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161039a565b9392505050565b60006020828403121561062c57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602080838503121561067557600080fd5b823567ffffffffffffffff8082111561068d57600080fd5b818501915085601f8301126106a157600080fd5b8135818111156106b3576106b3610633565b8060051b604051601f19603f830116810181811085821117156106d8576106d8610633565b6040529182528482019250838101850191888311156106f657600080fd5b938501935b82851015610714578435845293850193928501926106fb565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107585783518352928401929184019160010161073c565b50909695505050505050565b60005b8381101561077f578181015183820152602001610767565b8381111561078e576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516107cc816017850160208801610764565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610809816028840160208801610764565b01602801949350505050565b6020815260008251806020840152610834816040850160208701610764565b601f01601f19169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108af576108af610848565b500290565b600082198211156108c7576108c7610848565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008161090a5761090a610848565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220b6fed240f807b382a254a19af2f621db36aa0fc5b717475683d1cf58969eed5664736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c80635b5cc735116100505780635b5cc735146100b2578063a217fddf146100c5578063f3621367146100df57600080fd5b80631893a98f14610077578063391c5bc51461008c578063523e71151461009f575b600080fd5b61008a61008536600461061a565b610106565b005b61008a61009a36600461061a565b61019f565b61008a6100ad366004610662565b610206565b61008a6100c0366004610662565b61026c565b6100cd600081565b60405190815260200160405180910390f35b6100cd7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a9027981565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a90279610130816102d2565b6040517f856e31c100000000000000000000000000000000000000000000000000000000815260048101839052309063856e31c1906024015b600060405180830381600087803b15801561018357600080fd5b505af1158015610197573d6000803e3d6000fd5b505050505050565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a902796101c9816102d2565b6040517fc7d1bc8300000000000000000000000000000000000000000000000000000000815260048101839052309063c7d1bc8390602401610169565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a90279610230816102d2565b6040517f4a371f640000000000000000000000000000000000000000000000000000000081523090634a371f6490610169908590600401610720565b7faf9a8bb3cbd6b84fbccefa71ff73e26e798553c6914585a84886212a46a90279610296816102d2565b6040517ff9497f34000000000000000000000000000000000000000000000000000000008152309063f9497f3490610169908590600401610720565b6102dc81336102df565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166103a35761033e816103a7565b6103498360206103d0565b60405160200161035a929190610794565b60408051601f19818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261039a91600401610815565b60405180910390fd5b5050565b60606103ca73ffffffffffffffffffffffffffffffffffffffff831660146103d0565b92915050565b606060006103df836002610877565b6103ea9060026108b4565b67ffffffffffffffff81111561040257610402610633565b6040519080825280601f01601f19166020018201604052801561042c576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610463576104636108cc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106104c6576104c66108cc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610502846002610877565b61050d9060016108b4565b90505b60018111156105aa577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061054e5761054e6108cc565b1a60f81b828281518110610564576105646108cc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936105a3816108fb565b9050610510565b508315610613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161039a565b9392505050565b60006020828403121561062c57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602080838503121561067557600080fd5b823567ffffffffffffffff8082111561068d57600080fd5b818501915085601f8301126106a157600080fd5b8135818111156106b3576106b3610633565b8060051b604051601f19603f830116810181811085821117156106d8576106d8610633565b6040529182528482019250838101850191888311156106f657600080fd5b938501935b82851015610714578435845293850193928501926106fb565b98975050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107585783518352928401929184019160010161073c565b50909695505050505050565b60005b8381101561077f578181015183820152602001610767565b8381111561078e576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516107cc816017850160208801610764565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351610809816028840160208801610764565b01602801949350505050565b6020815260008251806020840152610834816040850160208701610764565b601f01601f19169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108af576108af610848565b500290565b600082198211156108c7576108c7610848565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008161090a5761090a610848565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220b6fed240f807b382a254a19af2f621db36aa0fc5b717475683d1cf58969eed5664736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/roles/AccessControlInternal.sol\";\nimport \"../../extensions/lockable/IERC721LockableExtension.sol\";\nimport \"./IERC721LockableRoleBased.sol\";\n\n/**\n * @title ERC721 - Lock as role\n * @notice Allow locking tokens by any sender who has the LOCKER_ROLE.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721LockableExtension\n * @custom:provides-interfaces IERC721LockableRoleBased\n */\ncontract ERC721LockableRoleBased is IERC721LockableRoleBased, AccessControlInternal {\n    bytes32 public constant LOCKER_ROLE = keccak256(\"LOCKER_ROLE\");\n\n    /**\n     * @inheritdoc IERC721LockableRoleBased\n     */\n    function lockByRole(uint256 id) external virtual onlyRole(LOCKER_ROLE) {\n        IERC721LockableExtension(address(this)).lockByFacet(id);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableRoleBased\n     */\n    function lockByRole(uint256[] memory ids) external virtual onlyRole(LOCKER_ROLE) {\n        IERC721LockableExtension(address(this)).lockByFacet(ids);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableRoleBased\n     */\n    function unlockByRole(uint256 id) external virtual onlyRole(LOCKER_ROLE) {\n        IERC721LockableExtension(address(this)).unlockByFacet(id);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableRoleBased\n     */\n    function unlockByRole(uint256[] memory ids) external virtual onlyRole(LOCKER_ROLE) {\n        IERC721LockableExtension(address(this)).unlockByFacet(ids);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/metadata/ERC721Metadata": {
    "fqn": "flair-sdk:token/ERC721/facets/metadata/ERC721Metadata",
    "version": "2.14.0",
    "address": {
      "5": "0x6Fc037427E2EDd7F83a57819Ef594F8603B7Bb3D",
      "goerli": "0x6Fc037427E2EDd7F83a57819Ef594F8603B7Bb3D"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721Metadata",
      "sourceName": "src/token/ERC721/facets/metadata/ERC721Metadata.sol",
      "abi": [
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610894806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde031461004657806395d89b4114610064578063c87b56dd1461006c575b600080fd5b61004e61007f565b60405161005b9190610558565b60405180910390f35b61004e610130565b61004e61007a3660046105a9565b610161565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc80546100ad906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546100d9906105c2565b80156101265780601f106100fb57610100808354040283529160200191610126565b820191906000526020600020905b81548152906001019060200180831161010957829003601f168201915b5050505050905090565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60010180546100ad906105c2565b60008181527f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2066020526040812080546060927f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc9290916101c0906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546101ec906105c2565b80156102395780601f1061020e57610100808354040283529160200191610239565b820191906000526020600020905b81548152906001019060200180831161021c57829003601f168201915b505050505090506000826003018054610251906105c2565b80601f016020809104026020016040519081016040528092919081815260200182805461027d906105c2565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b505050505090506000825111156102e357509392505050565b60008360050180546102f4906105c2565b905011156103935782600501805461030b906105c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906105c2565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b50505050509350505050919050565b8051156103d357806103a4866103eb565b846007016040516020016103ba93929190610615565b6040516020818303038152906040529350505050919050565b50506040805160208101909152600081529392505050565b60608160000361042e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610458578061044281610742565b91506104519050600a836107a9565b9150610432565b60008167ffffffffffffffff811115610473576104736107bd565b6040519080825280601f01601f19166020018201604052801561049d576020820181803683370190505b5090505b8415610520576104b26001836107ec565b91506104bf600a86610803565b6104ca906030610817565b60f81b8183815181106104df576104df61082f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610519600a866107a9565b94506104a1565b949350505050565b60005b8381101561054357818101518382015260200161052b565b83811115610552576000848401525b50505050565b6020815260008251806020840152610577816040850160208701610528565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156105bb57600080fd5b5035919050565b600181811c908216806105d657607f821691505b60208210810361060f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000845160206106288285838a01610528565b85519184019161063b8184848a01610528565b8554920191600090600181811c908083168061065857607f831692505b858310810361068e577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b8080156106a257600181146106d557610702565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0085168852831515840288019550610702565b60008b81526020902060005b858110156106fa5781548a8201529084019088016106e1565b505083880195505b50939b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361077357610773610713565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826107b8576107b861077a565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156107fe576107fe610713565b500390565b6000826108125761081261077a565b500690565b6000821982111561082a5761082a610713565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212202a66bf7d7a8b0935a27daf21ae236bf2c4db62b17f3a9e5d0c4a94d6579d21c964736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde031461004657806395d89b4114610064578063c87b56dd1461006c575b600080fd5b61004e61007f565b60405161005b9190610558565b60405180910390f35b61004e610130565b61004e61007a3660046105a9565b610161565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc80546100ad906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546100d9906105c2565b80156101265780601f106100fb57610100808354040283529160200191610126565b820191906000526020600020905b81548152906001019060200180831161010957829003601f168201915b5050505050905090565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60010180546100ad906105c2565b60008181527f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2066020526040812080546060927f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc9290916101c0906105c2565b80601f01602080910402602001604051908101604052809291908181526020018280546101ec906105c2565b80156102395780601f1061020e57610100808354040283529160200191610239565b820191906000526020600020905b81548152906001019060200180831161021c57829003601f168201915b505050505090506000826003018054610251906105c2565b80601f016020809104026020016040519081016040528092919081815260200182805461027d906105c2565b80156102ca5780601f1061029f576101008083540402835291602001916102ca565b820191906000526020600020905b8154815290600101906020018083116102ad57829003601f168201915b505050505090506000825111156102e357509392505050565b60008360050180546102f4906105c2565b905011156103935782600501805461030b906105c2565b80601f0160208091040260200160405190810160405280929190818152602001828054610337906105c2565b80156103845780601f1061035957610100808354040283529160200191610384565b820191906000526020600020905b81548152906001019060200180831161036757829003601f168201915b50505050509350505050919050565b8051156103d357806103a4866103eb565b846007016040516020016103ba93929190610615565b6040516020818303038152906040529350505050919050565b50506040805160208101909152600081529392505050565b60608160000361042e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610458578061044281610742565b91506104519050600a836107a9565b9150610432565b60008167ffffffffffffffff811115610473576104736107bd565b6040519080825280601f01601f19166020018201604052801561049d576020820181803683370190505b5090505b8415610520576104b26001836107ec565b91506104bf600a86610803565b6104ca906030610817565b60f81b8183815181106104df576104df61082f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610519600a866107a9565b94506104a1565b949350505050565b60005b8381101561054357818101518382015260200161052b565b83811115610552576000848401525b50505050565b6020815260008251806020840152610577816040850160208701610528565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156105bb57600080fd5b5035919050565b600181811c908216806105d657607f821691505b60208210810361060f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000845160206106288285838a01610528565b85519184019161063b8184848a01610528565b8554920191600090600181811c908083168061065857607f831692505b858310810361068e577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b8080156106a257600181146106d557610702565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0085168852831515840288019550610702565b60008b81526020902060005b858110156106fa5781548a8201529084019088016106e1565b505083880195505b50939b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361077357610773610713565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826107b8576107b861077a565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000828210156107fe576107fe610713565b500390565b6000826108125761081261077a565b500690565b6000821982111561082a5761082a610713565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212202a66bf7d7a8b0935a27daf21ae236bf2c4db62b17f3a9e5d0c4a94d6579d21c964736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../../common/metadata/MetadataStorage.sol\";\nimport \"./IERC721Metadata.sol\";\n\n/**\n * @title ERC721 - Metadata\n * @notice Provides metadata for ERC721 tokens according to standard.\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies IERC721\n * @custom:provides-interfaces IERC721Metadata\n */\ncontract ERC721Metadata is IERC721Metadata {\n    using MetadataStorage for MetadataStorage.Layout;\n\n    /**\n     * @inheritdoc IERC721Metadata\n     */\n    function name() external view override returns (string memory) {\n        return MetadataStorage.layout().name;\n    }\n\n    /**\n     * @inheritdoc IERC721Metadata\n     */\n    function symbol() external view override returns (string memory) {\n        return MetadataStorage.layout().symbol;\n    }\n\n    /**\n     * @notice inheritdoc IERC721Metadata\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        MetadataStorage.Layout storage l = MetadataStorage.layout();\n\n        string memory _tokenIdURI = l.tokenURIs[tokenId];\n        string memory _baseURI = l.baseURI;\n\n        if (bytes(_tokenIdURI).length > 0) {\n            return _tokenIdURI;\n        } else if (bytes(l.fallbackURI).length > 0) {\n            return l.fallbackURI;\n        } else if (bytes(_baseURI).length > 0) {\n            return string(abi.encodePacked(_baseURI, Strings.toString(tokenId), l.uriSuffix));\n        } else {\n            return \"\";\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnable": {
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0xA291d1B2154Ee24Cf7ee8f390939f3001d11dCBd",
      "goerli": "0xA291d1B2154Ee24Cf7ee8f390939f3001d11dCBd"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721MintableOwnable",
      "sourceName": "src/token/ERC721/facets/minting/ERC721MintableOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610495806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632c3d8acb1461003b5780633542aee214610050575b600080fd5b61004e6100493660046102f8565b610063565b005b61004e61005e36600461038d565b610182565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a149061014a9087908790879087906004016103b7565b600060405180830381600087803b15801561016457600080fd5b505af1158015610178573d6000803e3d6000fd5b5050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602481018290523090632d4f475f90604401600060405180830381600087803b15801561029057600080fd5b505af11580156102a4573d6000803e3d6000fd5b505050505050565b60008083601f8401126102be57600080fd5b50813567ffffffffffffffff8111156102d657600080fd5b6020830191508360208260051b85010111156102f157600080fd5b9250929050565b6000806000806040858703121561030e57600080fd5b843567ffffffffffffffff8082111561032657600080fd5b610332888389016102ac565b9096509450602087013591508082111561034b57600080fd5b50610358878288016102ac565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461038857600080fd5b919050565b600080604083850312156103a057600080fd5b6103a983610364565b946020939093013593505050565b6040808252810184905260008560608301825b878110156104055773ffffffffffffffffffffffffffffffffffffffff6103f084610364565b168252602092830192909101906001016103ca565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561043e57600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220a49471f1c9a9e671a22c950acf2378ffaa0feccab1cf1a3c7846b286d2076c1264736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80632c3d8acb1461003b5780633542aee214610050575b600080fd5b61004e6100493660046102f8565b610063565b005b61004e61005e36600461038d565b610182565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a149061014a9087908790879087906004016103b7565b600060405180830381600087803b15801561016457600080fd5b505af1158015610178573d6000803e3d6000fd5b5050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602481018290523090632d4f475f90604401600060405180830381600087803b15801561029057600080fd5b505af11580156102a4573d6000803e3d6000fd5b505050505050565b60008083601f8401126102be57600080fd5b50813567ffffffffffffffff8111156102d657600080fd5b6020830191508360208260051b85010111156102f157600080fd5b9250929050565b6000806000806040858703121561030e57600080fd5b843567ffffffffffffffff8082111561032657600080fd5b610332888389016102ac565b9096509450602087013591508082111561034b57600080fd5b50610358878288016102ac565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461038857600080fd5b919050565b600080604083850312156103a057600080fd5b6103a983610364565b946020939093013593505050565b6040808252810184905260008560608301825b878110156104055773ffffffffffffffffffffffffffffffffffffffff6103f084610364565b168252602092830192909101906001016103ca565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561043e57600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220a49471f1c9a9e671a22c950acf2378ffaa0feccab1cf1a3c7846b286d2076c1264736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"../../extensions/mintable/IERC721MintableExtension.sol\";\nimport \"./IERC721MintableOwnable.sol\";\n\n/**\n * @title ERC721 - Mint as owner\n * @notice Allow minting as contract owner with no restrictions (supports ERC721A).\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721MintableExtension\n * @custom:provides-interfaces IERC721MintableOwnable\n */\ncontract ERC721MintableOwnable is IERC721MintableOwnable, OwnableInternal {\n    /**\n     * @inheritdoc IERC721MintableOwnable\n     */\n    function mintByOwner(address to, uint256 amount) public virtual onlyOwner {\n        IERC721MintableExtension(address(this)).mintByFacet(to, amount);\n    }\n\n    /**\n     * @inheritdoc IERC721MintableOwnable\n     */\n    function mintByOwner(address[] calldata tos, uint256[] calldata amounts) public virtual onlyOwner {\n        IERC721MintableExtension(address(this)).mintByFacet(tos, amounts);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnableERC2771": {
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableOwnableERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0x0dB99d57157d524CCA0639F4a564F18ae4b338F4",
      "goerli": "0x0dB99d57157d524CCA0639F4a564F18ae4b338F4"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721MintableOwnableERC2771",
      "sourceName": "src/token/ERC721/facets/minting/ERC721MintableOwnableERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061054f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632c3d8acb1461003b5780633542aee214610050575b600080fd5b61004e6100493660046103b2565b610063565b005b61004e61005e366004610447565b61019f565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166100a36102e6565b73ffffffffffffffffffffffffffffffffffffffff1614610125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a1490610167908790879087908790600401610471565b600060405180830381600087803b15801561018157600080fd5b505af1158015610195573d6000803e3d6000fd5b5050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166101df6102e6565b73ffffffffffffffffffffffffffffffffffffffff161461025c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161011c565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602481018290523090632d4f475f90604401600060405180830381600087803b1580156102ca57600080fd5b505af11580156102de573d6000803e3d6000fd5b505050505050565b60006102f06102f5565b905090565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361036157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60008083601f84011261037857600080fd5b50813567ffffffffffffffff81111561039057600080fd5b6020830191508360208260051b85010111156103ab57600080fd5b9250929050565b600080600080604085870312156103c857600080fd5b843567ffffffffffffffff808211156103e057600080fd5b6103ec88838901610366565b9096509450602087013591508082111561040557600080fd5b5061041287828801610366565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461044257600080fd5b919050565b6000806040838503121561045a57600080fd5b6104638361041e565b946020939093013593505050565b6040808252810184905260008560608301825b878110156104bf5773ffffffffffffffffffffffffffffffffffffffff6104aa8461041e565b16825260209283019290910190600101610484565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8511156104f857600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220efdab2e56c834e333c594b36d9f8566ea5fbaa4b1a2a28d95018039dd9690aa464736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80632c3d8acb1461003b5780633542aee214610050575b600080fd5b61004e6100493660046103b2565b610063565b005b61004e61005e366004610447565b61019f565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166100a36102e6565b73ffffffffffffffffffffffffffffffffffffffff1614610125576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a1490610167908790879087908790600401610471565b600060405180830381600087803b15801561018157600080fd5b505af1158015610195573d6000803e3d6000fd5b5050505050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff166101df6102e6565b73ffffffffffffffffffffffffffffffffffffffff161461025c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161011c565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602481018290523090632d4f475f90604401600060405180830381600087803b1580156102ca57600080fd5b505af11580156102de573d6000803e3d6000fd5b505050505050565b60006102f06102f5565b905090565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361036157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60008083601f84011261037857600080fd5b50813567ffffffffffffffff81111561039057600080fd5b6020830191508360208260051b85010111156103ab57600080fd5b9250929050565b600080600080604085870312156103c857600080fd5b843567ffffffffffffffff808211156103e057600080fd5b6103ec88838901610366565b9096509450602087013591508082111561040557600080fd5b5061041287828801610366565b95989497509550505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461044257600080fd5b919050565b6000806040838503121561045a57600080fd5b6104638361041e565b946020939093013593505050565b6040808252810184905260008560608301825b878110156104bf5773ffffffffffffffffffffffffffffffffffffffff6104aa8461041e565b16825260209283019290910190600101610484565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8511156104f857600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220efdab2e56c834e333c594b36d9f8566ea5fbaa4b1a2a28d95018039dd9690aa464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./ERC721MintableOwnable.sol\";\n\n/**\n * @title ERC721 - Mint as owner - With ERC2771 Context\n * @notice Allow minting as owner via meta transactions, signed by the owner private key. (supports ERC721A)\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721MintableExtension\n * @custom:provides-interfaces IERC721MintableOwnable\n */\ncontract ERC721MintableOwnableERC2771 is ERC721MintableOwnable, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBased": {
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBased",
    "version": "2.14.0",
    "address": {
      "5": "0xfCa708279A42aB21998AB902f15C663AFA6D50a6",
      "goerli": "0xfCa708279A42aB21998AB902f15C663AFA6D50a6"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721MintableRoleBased",
      "sourceName": "src/token/ERC721/facets/minting/ERC721MintableRoleBased.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061097c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631a056e7114610051578063a217fddf14610066578063b9a47ff214610080578063d539139314610093575b600080fd5b61006461005f3660046105a3565b6100ba565b005b61006e600081565b60405190815260200160405180910390f35b61006461008e366004610619565b61016f565b61006e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610214565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018390523090632d4f475f90604401600060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b50505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019981610214565b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a14906101db908890889088908890600401610685565b600060405180830381600087803b1580156101f557600080fd5b505af1158015610209573d6000803e3d6000fd5b505050505050505050565b61021e8133610221565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166103035761028081610307565b61028b836020610330565b60405160200161029c92919061075d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102fa916004016107de565b60405180910390fd5b5050565b606061032a73ffffffffffffffffffffffffffffffffffffffff83166014610330565b92915050565b6060600061033f83600261085e565b61034a90600261089b565b67ffffffffffffffff811115610362576103626108b3565b6040519080825280601f01601f19166020018201604052801561038c576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103c3576103c36108e2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610426576104266108e2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061046284600261085e565b61046d90600161089b565b90505b600181111561050a577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106104ae576104ae6108e2565b1a60f81b8282815181106104c4576104c46108e2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361050381610911565b9050610470565b508315610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102fa565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461059e57600080fd5b919050565b600080604083850312156105b657600080fd5b6105bf8361057a565b946020939093013593505050565b60008083601f8401126105df57600080fd5b50813567ffffffffffffffff8111156105f757600080fd5b6020830191508360208260051b850101111561061257600080fd5b9250929050565b6000806000806040858703121561062f57600080fd5b843567ffffffffffffffff8082111561064757600080fd5b610653888389016105cd565b9096509450602087013591508082111561066c57600080fd5b50610679878288016105cd565b95989497509550505050565b6040808252810184905260008560608301825b878110156106d35773ffffffffffffffffffffffffffffffffffffffff6106be8461057a565b16825260209283019290910190600101610698565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561070c57600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b60005b83811015610748578181015183820152602001610730565b83811115610757576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161079581601785016020880161072d565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516107d281602884016020880161072d565b01602801949350505050565b60208152600082518060208401526107fd81604085016020870161072d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108965761089661082f565b500290565b600082198211156108ae576108ae61082f565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816109205761092061082f565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea26469706673582212209af0b14e4c60babeabaa1f29497b94d77b1081f7cc18d3f053c29a07877e1b4c64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631a056e7114610051578063a217fddf14610066578063b9a47ff214610080578063d539139314610093575b600080fd5b61006461005f3660046105a3565b6100ba565b005b61006e600081565b60405190815260200160405180910390f35b61006461008e366004610619565b61016f565b61006e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610214565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018390523090632d4f475f90604401600060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b50505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019981610214565b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a14906101db908890889088908890600401610685565b600060405180830381600087803b1580156101f557600080fd5b505af1158015610209573d6000803e3d6000fd5b505050505050505050565b61021e8133610221565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166103035761028081610307565b61028b836020610330565b60405160200161029c92919061075d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526102fa916004016107de565b60405180910390fd5b5050565b606061032a73ffffffffffffffffffffffffffffffffffffffff83166014610330565b92915050565b6060600061033f83600261085e565b61034a90600261089b565b67ffffffffffffffff811115610362576103626108b3565b6040519080825280601f01601f19166020018201604052801561038c576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106103c3576103c36108e2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610426576104266108e2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061046284600261085e565b61046d90600161089b565b90505b600181111561050a577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106104ae576104ae6108e2565b1a60f81b8282815181106104c4576104c46108e2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361050381610911565b9050610470565b508315610573576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102fa565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461059e57600080fd5b919050565b600080604083850312156105b657600080fd5b6105bf8361057a565b946020939093013593505050565b60008083601f8401126105df57600080fd5b50813567ffffffffffffffff8111156105f757600080fd5b6020830191508360208260051b850101111561061257600080fd5b9250929050565b6000806000806040858703121561062f57600080fd5b843567ffffffffffffffff8082111561064757600080fd5b610653888389016105cd565b9096509450602087013591508082111561066c57600080fd5b50610679878288016105cd565b95989497509550505050565b6040808252810184905260008560608301825b878110156106d35773ffffffffffffffffffffffffffffffffffffffff6106be8461057a565b16825260209283019290910190600101610698565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561070c57600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b60005b83811015610748578181015183820152602001610730565b83811115610757576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161079581601785016020880161072d565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516107d281602884016020880161072d565b01602801949350505050565b60208152600082518060208401526107fd81604085016020870161072d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108965761089661082f565b500290565b600082198211156108ae576108ae61082f565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816109205761092061082f565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea26469706673582212209af0b14e4c60babeabaa1f29497b94d77b1081f7cc18d3f053c29a07877e1b4c64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../../../access/roles/AccessControlInternal.sol\";\nimport \"../../extensions/mintable/IERC721MintableExtension.sol\";\nimport \"./IERC721MintableRoleBased.sol\";\n\n/**\n * @title ERC721 - Mint as role\n * @notice Allow minting for senders with MINTER_ROLE to mint new tokens (supports ERC721A).\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721MintableExtension\n * @custom:provides-interfaces IERC721MintableRoleBased\n */\ncontract ERC721MintableRoleBased is IERC721MintableRoleBased, AccessControlInternal {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    /**\n     * @inheritdoc IERC721MintableRoleBased\n     */\n    function mintByRole(address to, uint256 amount) public virtual onlyRole(MINTER_ROLE) {\n        IERC721MintableExtension(address(this)).mintByFacet(to, amount);\n    }\n\n    /**\n     * @inheritdoc IERC721MintableRoleBased\n     */\n    function mintByRole(address[] calldata tos, uint256[] calldata amounts) public virtual onlyRole(MINTER_ROLE) {\n        IERC721MintableExtension(address(this)).mintByFacet(tos, amounts);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBasedERC2771": {
    "fqn": "flair-sdk:token/ERC721/facets/minting/ERC721MintableRoleBasedERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0xa423353b3aa80149f4cddC7acF353F8Af988A963",
      "goerli": "0xa423353b3aa80149f4cddC7acF353F8Af988A963"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721MintableRoleBasedERC2771",
      "sourceName": "src/token/ERC721/facets/minting/ERC721MintableRoleBasedERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "MINTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610a03806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631a056e7114610051578063a217fddf14610066578063b9a47ff214610080578063d539139314610093575b600080fd5b61006461005f36600461062a565b6100ba565b005b61006e600081565b60405190815260200160405180910390f35b61006461008e3660046106a0565b61016f565b61006e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610214565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018390523090632d4f475f90604401600060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b50505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019981610214565b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a14906101db90889088908890889060040161070c565b600060405180830381600087803b1580156101f557600080fd5b505af1158015610209573d6000803e3d6000fd5b505050505050505050565b61022581610220610228565b610237565b50565b600061023261031d565b905090565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610319576102968161038e565b6102a18360206103b7565b6040516020016102b29291906107e4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261031091600401610865565b60405180910390fd5b5050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361038957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60606103b173ffffffffffffffffffffffffffffffffffffffff831660146103b7565b92915050565b606060006103c68360026108e5565b6103d1906002610922565b67ffffffffffffffff8111156103e9576103e961093a565b6040519080825280601f01601f191660200182016040528015610413576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061044a5761044a610969565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106104ad576104ad610969565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006104e98460026108e5565b6104f4906001610922565b90505b6001811115610591577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061053557610535610969565b1a60f81b82828151811061054b5761054b610969565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361058a81610998565b90506104f7565b5083156105fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610310565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461062557600080fd5b919050565b6000806040838503121561063d57600080fd5b61064683610601565b946020939093013593505050565b60008083601f84011261066657600080fd5b50813567ffffffffffffffff81111561067e57600080fd5b6020830191508360208260051b850101111561069957600080fd5b9250929050565b600080600080604085870312156106b657600080fd5b843567ffffffffffffffff808211156106ce57600080fd5b6106da88838901610654565b909650945060208701359150808211156106f357600080fd5b5061070087828801610654565b95989497509550505050565b6040808252810184905260008560608301825b8781101561075a5773ffffffffffffffffffffffffffffffffffffffff61074584610601565b1682526020928301929091019060010161071f565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561079357600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b60005b838110156107cf5781810151838201526020016107b7565b838111156107de576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161081c8160178501602088016107b4565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516108598160288401602088016107b4565b01602801949350505050565b60208152600082518060208401526108848160408501602087016107b4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561091d5761091d6108b6565b500290565b60008219821115610935576109356108b6565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816109a7576109a76108b6565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220bf0208eaf45f1cbcd5fcc7a1377c80075d54de91918f584808ababb5b305537964736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80631a056e7114610051578063a217fddf14610066578063b9a47ff214610080578063d539139314610093575b600080fd5b61006461005f36600461062a565b6100ba565b005b61006e600081565b60405190815260200160405180910390f35b61006461008e3660046106a0565b61016f565b61006e7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610214565b6040517f2d4f475f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602481018390523090632d4f475f90604401600060405180830381600087803b15801561015257600080fd5b505af1158015610166573d6000803e3d6000fd5b50505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019981610214565b6040517f49142a1400000000000000000000000000000000000000000000000000000000815230906349142a14906101db90889088908890889060040161070c565b600060405180830381600087803b1580156101f557600080fd5b505af1158015610209573d6000803e3d6000fd5b505050505050505050565b61022581610220610228565b610237565b50565b600061023261031d565b905090565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610319576102968161038e565b6102a18360206103b7565b6040516020016102b29291906107e4565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261031091600401610865565b60405180910390fd5b5050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff16330361038957507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60606103b173ffffffffffffffffffffffffffffffffffffffff831660146103b7565b92915050565b606060006103c68360026108e5565b6103d1906002610922565b67ffffffffffffffff8111156103e9576103e961093a565b6040519080825280601f01601f191660200182016040528015610413576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061044a5761044a610969565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106104ad576104ad610969565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006104e98460026108e5565b6104f4906001610922565b90505b6001811115610591577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061053557610535610969565b1a60f81b82828151811061054b5761054b610969565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361058a81610998565b90506104f7565b5083156105fa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610310565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461062557600080fd5b919050565b6000806040838503121561063d57600080fd5b61064683610601565b946020939093013593505050565b60008083601f84011261066657600080fd5b50813567ffffffffffffffff81111561067e57600080fd5b6020830191508360208260051b850101111561069957600080fd5b9250929050565b600080600080604085870312156106b657600080fd5b843567ffffffffffffffff808211156106ce57600080fd5b6106da88838901610654565b909650945060208701359150808211156106f357600080fd5b5061070087828801610654565b95989497509550505050565b6040808252810184905260008560608301825b8781101561075a5773ffffffffffffffffffffffffffffffffffffffff61074584610601565b1682526020928301929091019060010161071f565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561079357600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b60005b838110156107cf5781810151838201526020016107b7565b838111156107de576000848401525b50505050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161081c8160178501602088016107b4565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516108598160288401602088016107b4565b01602801949350505050565b60208152600082518060208401526108848160408501602087016107b4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561091d5761091d6108b6565b500290565b60008219821115610935576109356108b6565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000816109a7576109a76108b6565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220bf0208eaf45f1cbcd5fcc7a1377c80075d54de91918f584808ababb5b305537964736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./ERC721MintableRoleBased.sol\";\n\n/**\n * @dev Extension of {ERC721} to mint by MINTER_ROLE\n */\n/**\n * @title ERC721 - Mint as role - with ERC2771\n * @notice Allow minting for senders with MINTER_ROLE to mint new tokens with meta-transactions supported via ERC2771 (supports ERC721A).\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721MintableExtension\n * @custom:provides-interfaces IERC721MintableRoleBased\n */\ncontract ERC721MintableRoleBasedERC2771 is ERC721MintableRoleBased, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/supply/ERC721SupplyOwnable": {
    "fqn": "flair-sdk:token/ERC721/facets/supply/ERC721SupplyOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0xd02acF2C31B5cEd78F1b48b65d893E8050De0559",
      "goerli": "0xd02acF2C31B5cEd78F1b48b65d893E8050De0559"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721SupplyOwnable",
      "sourceName": "src/token/ERC721/facets/supply/ERC721SupplyOwnable.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyFrozen",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "freezeMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSupplyFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256"
            }
          ],
          "name": "setMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610322806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806316744607146100465780636f8b44b014610050578063f384702f14610063575b600080fd5b61004e61007f565b005b61004e61005e3660046102d3565b610175565b61006b610221565b604051901515815260200160405180910390f35b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6101737fbcb5379325aa7bbb39c6e8a7078c057698e285f8d4d4341334ae2b0ada74114380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161011b565b61021e81610253565b50565b600061024e7fbcb5379325aa7bbb39c6e8a7078c057698e285f8d4d4341334ae2b0ada7411435460ff1690565b905090565b7fbcb5379325aa7bbb39c6e8a7078c057698e285f8d4d4341334ae2b0ada7411435460ff16156102af576040517f600d428700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f555565b6000602082840312156102e557600080fd5b503591905056fea2646970667358221220a0c242cbffa3837b58c0ea6a3d6751486f1bf9a1a4988539b92cced6b6072dfe64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806316744607146100465780636f8b44b014610050578063f384702f14610063575b600080fd5b61004e61007f565b005b61004e61005e3660046102d3565b610175565b61006b610221565b604051901515815260200160405180910390f35b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610124576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6101737fbcb5379325aa7bbb39c6e8a7078c057698e285f8d4d4341334ae2b0ada74114380547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161011b565b61021e81610253565b50565b600061024e7fbcb5379325aa7bbb39c6e8a7078c057698e285f8d4d4341334ae2b0ada7411435460ff1690565b905090565b7fbcb5379325aa7bbb39c6e8a7078c057698e285f8d4d4341334ae2b0ada7411435460ff16156102af576040517f600d428700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f555565b6000602082840312156102e557600080fd5b503591905056fea2646970667358221220a0c242cbffa3837b58c0ea6a3d6751486f1bf9a1a4988539b92cced6b6072dfe64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../extensions/supply/ERC721SupplyStorage.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"./ERC721SupplyAdminInternal.sol\";\nimport \"./IERC721SupplyAdmin.sol\";\n\n/**\n * @title ERC721 - Supply - Admin - Ownable\n * @notice Allows owner of a EIP-721 contract to change max supply of tokens.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies IERC721SupplyExtension\n * @custom:provides-interfaces IERC721SupplyAdmin\n */\ncontract ERC721SupplyOwnable is IERC721SupplyAdmin, ERC721SupplyAdminInternal, OwnableInternal {\n    function setMaxSupply(uint256 newValue) public virtual onlyOwner {\n        _setMaxSupply(newValue);\n    }\n\n    function freezeMaxSupply() public virtual onlyOwner {\n        _freezeMaxSupply();\n    }\n\n    function maxSupplyFrozen() public view virtual override returns (bool) {\n        return _maxSupplyFrozen();\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/sales/ERC721TieredSales": {
    "fqn": "flair-sdk:token/ERC721/facets/sales/ERC721TieredSales",
    "version": "2.14.0",
    "address": {
      "5": "0xD67d572f0514443632aD5c6f5423b705a73e2387",
      "goerli": "0xD67d572f0514443632aD5c6f5423b705a73e2387"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721TieredSales",
      "sourceName": "src/token/ERC721/facets/sales/ERC721TieredSales.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyExceeded",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            }
          ],
          "name": "maxMintableForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxMintable",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "mintByTier",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            }
          ],
          "name": "onTierAllowlist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "remainingForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "reservedMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tiers",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalReserved",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "verifySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "walletMintedByTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611b3b806100206000396000f3fe6080604052600436106100b15760003560e01c80635897f87811610069578063ba09e6321161004e578063ba09e632146102d6578063c71b0e1c146102f6578063d36ed2f31461032a57600080fd5b80635897f8781461029657806368c7d37c146102b657600080fd5b8063200cd62a1161009a578063200cd62a146101e65780632cb9b2ac1461021657806353367f081461024a57600080fd5b8063039af9eb146100b65780631123f2ef14610169575b600080fd5b3480156100c257600080fd5b506100d66100d136600461171c565b61033f565b60405161016091906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152606085015160608501526080850151608085015260a085015160a085015260c085015160c085015260e085015160e0850152610100915080828601511682850152505092915050565b60405180910390f35b34801561017557600080fd5b506101d861018436600461175e565b60009182527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cc06020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205490565b604051908152602001610160565b3480156101f257600080fd5b506102066102013660046117cc565b61046e565b6040519015158152602001610160565b34801561022257600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd546101d8565b34801561025657600080fd5b506101d861026536600461171c565b60009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf602052604090205490565b3480156102a257600080fd5b506101d86102b136600461171c565b6104cf565b3480156102c257600080fd5b506102066102d1366004611881565b610546565b3480156102e257600080fd5b506101d86102f13660046118e9565b61055f565b34801561030257600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546101d8565b61033d61033836600461191e565b61056c565b005b6103bd6040518061012001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5060009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe602090815260409182902082516101208101845281548152600182015492810192909252600281015473ffffffffffffffffffffffffffffffffffffffff908116938301939093526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008015490911661010082015290565b60008681527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600801546104c49073ffffffffffffffffffffffffffffffffffffffff168888888888886106fa565b979650505050505050565b60007fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb816104fc84610785565b600085815260048401602090815260408083205460038701909252822060070154929350909161052c91906119e1565b90508082101561053e57509392505050565b949350505050565b60006105558686868686610866565b9695505050505050565b600061053e8484846108cd565b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e054036105e25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e0556106168888888888888888610b52565b30632d4f475f336040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018a9052604401600060405180830381600087803b15801561068a57600080fd5b505af115801561069e573d6000803e3d6000fd5b5050505060016106cb7f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e090565b555050505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90565b60004282101561070c575060006104c4565b600061075c85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061075692508c91508b90508a88610dbe565b90610e49565b73ffffffffffffffffffffffffffffffffffffffff8a8116911614915050979650505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546000917fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb916107f891906119e1565b61080184610e6d565b61080b91906119e1565b600084815260038301602052604090206006015490925015610860576000838152600482016020908152604080832054600385019092529091206006015461085391906119e1565b61085d90836119f8565b91505b50919050565b60006105558383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108a892506106d6915050565b600089815260039190910160205260409020600501546108c88888610eee565b610f49565b60008381527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600401547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9061096c5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4558495354530000000000000000000000000000000000000000000060448201526064016105d9565b60008581526003820160205260409020544210156109cc5760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f5354415254454400000000000000000000000000000000000000000060448201526064016105d9565b6000858152600382016020526040902060010154421115610a2f5760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f454e4445440000000000000000000000000000000000000060448201526064016105d9565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684528252808320548884526003850190925290912060040154610a7c91906119e1565b6000868152600583016020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020549092508311610aff5760405162461bcd60e51b815260206004820152600f60248201527f4d415845445f414c4c4f57414e4345000000000000000000000000000000000060448201526064016105d9565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812054610b3b90856119e1565b905080831115610b49578092505b50509392505050565b610b63883389898989898989610f5f565b60008881527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020600201547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9073ffffffffffffffffffffffffffffffffffffffff16610c445760008981526003808301602052604090912001543490610bf1908a90611a10565b1115610c3f5760405162461bcd60e51b815260206004820152601360248201527f494e53554646494349454e545f414d4f554e540000000000000000000000000060448201526064016105d9565b610d2b565b600089815260038281016020526040909120600281015491015473ffffffffffffffffffffffffffffffffffffffff909116906323b872dd9033903090610c8c908d90611a10565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610d05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d299190611a4d565b505b60008981526005820160209081526040808320338452909152812080548a9290610d569084906119f8565b90915550506000898152600482016020526040812080548a9290610d7b9084906119f8565b9091555050600089815260038201602052604090206006015415610db35787816002016000828254610dad91906119f8565b90915550505b505050505050505050565b604080517f9e1fb3640a418bdeb2ea9d1423d656894db5c96e895e93867d5bb7862df246ac602082015290810185905273ffffffffffffffffffffffffffffffffffffffff841660608201526080810183905260a08101829052600090819060c001604051602081830303815290604052805190602001209050610555610e436111e4565b8261131d565b6000806000610e58858561135f565b91509150610e65816113a4565b509392505050565b600080610ebb7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f554610ee791906119e1565b9392505050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600082610f568584611593565b14949350505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb6000610f8d8b8b8a6108cd565b905080891115610fdf5760405162461bcd60e51b815260206004820152600b60248201527f455843454544535f4d415800000000000000000000000000000000000000000060448201526064016105d9565b610fe88b610785565b8911156110375760405162461bcd60e51b815260206004820152600e60248201527f455843454544535f535550504c5900000000000000000000000000000000000060448201526064016105d9565b60008b81526003830160209081526040808320600701546004860190925290912054611063908b6119f8565b11156110b15760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e000000000000000000000000000060448201526064016105d9565b60008b815260038301602052604090206005015415611123576110d78b8b8a8a8a610866565b6111235760405162461bcd60e51b815260206004820152600f60248201527f4e4f545f414c4c4f574c4953544544000000000000000000000000000000000060448201526064016105d9565b60008b815260038301602052604090206008015473ffffffffffffffffffffffffffffffffffffffff16156111d75760008b815260038301602052604090206008015461118b9073ffffffffffffffffffffffffffffffffffffffff168c8c8b8989896106fa565b6111d75760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e415455524500000000000000000000000000000060448201526064016105d9565b5050505050505050505050565b4660009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb60205260408120549081900361131a5750604080518082018252600b81527f54696572656453616c657300000000000000000000000000000000000000000060209182015281518083018352600381527f322e7800000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0a8f5cd262c609ce448522f0993fd8cd7e4c5487b979cac486662358ea244890818401527ff5f84182131be97a41a3d4efb82d0a0d5698d76e6ec4dc9589738f1341d900c960608201524660808201523060a0808301919091528351808303909101815260c090910190925281519101205b90565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526022810183905260428101829052600090606201610f2b565b60008082516041036113955760208301516040840151606085015160001a611389878285856115d8565b9450945050505061139d565b506000905060025b9250929050565b60008160048111156113b8576113b8611a6f565b036113c05750565b60018160048111156113d4576113d4611a6f565b036114215760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105d9565b600281600481111561143557611435611a6f565b036114825760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105d9565b600381600481111561149657611496611a6f565b036115095760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d9565b600481600481111561151d5761151d611a6f565b036115905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d9565b50565b600081815b8451811015610e65576115c4828683815181106115b7576115b7611a9e565b60200260200101516116f0565b9150806115d081611acd565b915050611598565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561160f57506000905060036116e7565b8460ff16601b1415801561162757508460ff16601c14155b1561163857506000905060046116e7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561168c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166116e0576000600192509250506116e7565b9150600090505b94509492505050565b600081831061170c576000828152602084905260409020610ee7565b5060009182526020526040902090565b60006020828403121561172e57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461175957600080fd5b919050565b6000806040838503121561177157600080fd5b8235915061178160208401611735565b90509250929050565b60008083601f84011261179c57600080fd5b50813567ffffffffffffffff8111156117b457600080fd5b60208301915083602082850101111561139d57600080fd5b60008060008060008060a087890312156117e557600080fd5b863595506117f560208801611735565b945060408701359350606087013567ffffffffffffffff81111561181857600080fd5b61182489828a0161178a565b979a9699509497949695608090950135949350505050565b60008083601f84011261184e57600080fd5b50813567ffffffffffffffff81111561186657600080fd5b6020830191508360208260051b850101111561139d57600080fd5b60008060008060006080868803121561189957600080fd5b853594506118a960208701611735565b935060408601359250606086013567ffffffffffffffff8111156118cc57600080fd5b6118d88882890161183c565b969995985093965092949392505050565b6000806000606084860312156118fe57600080fd5b8335925061190e60208501611735565b9150604084013590509250925092565b60008060008060008060008060c0898b03121561193a57600080fd5b883597506020890135965060408901359550606089013567ffffffffffffffff8082111561196757600080fd5b6119738c838d0161183c565b909750955060808b013591508082111561198c57600080fd5b506119998b828c0161178a565b999c989b50969995989497949560a00135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156119f3576119f36119b2565b500390565b60008219821115611a0b57611a0b6119b2565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a4857611a486119b2565b500290565b600060208284031215611a5f57600080fd5b81518015158114610ee757600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611afe57611afe6119b2565b506001019056fea26469706673582212203d823ebd4baaf247a6a1fbcaa976db225f2fd0c4bfd47369ce5989093983d9db64736f6c634300080f0033",
      "deployedBytecode": "0x6080604052600436106100b15760003560e01c80635897f87811610069578063ba09e6321161004e578063ba09e632146102d6578063c71b0e1c146102f6578063d36ed2f31461032a57600080fd5b80635897f8781461029657806368c7d37c146102b657600080fd5b8063200cd62a1161009a578063200cd62a146101e65780632cb9b2ac1461021657806353367f081461024a57600080fd5b8063039af9eb146100b65780631123f2ef14610169575b600080fd5b3480156100c257600080fd5b506100d66100d136600461171c565b61033f565b60405161016091906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152606085015160608501526080850151608085015260a085015160a085015260c085015160c085015260e085015160e0850152610100915080828601511682850152505092915050565b60405180910390f35b34801561017557600080fd5b506101d861018436600461175e565b60009182527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cc06020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205490565b604051908152602001610160565b3480156101f257600080fd5b506102066102013660046117cc565b61046e565b6040519015158152602001610160565b34801561022257600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd546101d8565b34801561025657600080fd5b506101d861026536600461171c565b60009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf602052604090205490565b3480156102a257600080fd5b506101d86102b136600461171c565b6104cf565b3480156102c257600080fd5b506102066102d1366004611881565b610546565b3480156102e257600080fd5b506101d86102f13660046118e9565b61055f565b34801561030257600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546101d8565b61033d61033836600461191e565b61056c565b005b6103bd6040518061012001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5060009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe602090815260409182902082516101208101845281548152600182015492810192909252600281015473ffffffffffffffffffffffffffffffffffffffff908116938301939093526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008015490911661010082015290565b60008681527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600801546104c49073ffffffffffffffffffffffffffffffffffffffff168888888888886106fa565b979650505050505050565b60007fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb816104fc84610785565b600085815260048401602090815260408083205460038701909252822060070154929350909161052c91906119e1565b90508082101561053e57509392505050565b949350505050565b60006105558686868686610866565b9695505050505050565b600061053e8484846108cd565b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e054036105e25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e0556106168888888888888888610b52565b30632d4f475f336040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018a9052604401600060405180830381600087803b15801561068a57600080fd5b505af115801561069e573d6000803e3d6000fd5b5050505060016106cb7f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e090565b555050505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90565b60004282101561070c575060006104c4565b600061075c85858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061075692508c91508b90508a88610dbe565b90610e49565b73ffffffffffffffffffffffffffffffffffffffff8a8116911614915050979650505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546000917fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb916107f891906119e1565b61080184610e6d565b61080b91906119e1565b600084815260038301602052604090206006015490925015610860576000838152600482016020908152604080832054600385019092529091206006015461085391906119e1565b61085d90836119f8565b91505b50919050565b60006105558383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108a892506106d6915050565b600089815260039190910160205260409020600501546108c88888610eee565b610f49565b60008381527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600401547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9061096c5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4558495354530000000000000000000000000000000000000000000060448201526064016105d9565b60008581526003820160205260409020544210156109cc5760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f5354415254454400000000000000000000000000000000000000000060448201526064016105d9565b6000858152600382016020526040902060010154421115610a2f5760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f454e4445440000000000000000000000000000000000000060448201526064016105d9565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684528252808320548884526003850190925290912060040154610a7c91906119e1565b6000868152600583016020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020549092508311610aff5760405162461bcd60e51b815260206004820152600f60248201527f4d415845445f414c4c4f57414e4345000000000000000000000000000000000060448201526064016105d9565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812054610b3b90856119e1565b905080831115610b49578092505b50509392505050565b610b63883389898989898989610f5f565b60008881527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020600201547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9073ffffffffffffffffffffffffffffffffffffffff16610c445760008981526003808301602052604090912001543490610bf1908a90611a10565b1115610c3f5760405162461bcd60e51b815260206004820152601360248201527f494e53554646494349454e545f414d4f554e540000000000000000000000000060448201526064016105d9565b610d2b565b600089815260038281016020526040909120600281015491015473ffffffffffffffffffffffffffffffffffffffff909116906323b872dd9033903090610c8c908d90611a10565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610d05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d299190611a4d565b505b60008981526005820160209081526040808320338452909152812080548a9290610d569084906119f8565b90915550506000898152600482016020526040812080548a9290610d7b9084906119f8565b9091555050600089815260038201602052604090206006015415610db35787816002016000828254610dad91906119f8565b90915550505b505050505050505050565b604080517f9e1fb3640a418bdeb2ea9d1423d656894db5c96e895e93867d5bb7862df246ac602082015290810185905273ffffffffffffffffffffffffffffffffffffffff841660608201526080810183905260a08101829052600090819060c001604051602081830303815290604052805190602001209050610555610e436111e4565b8261131d565b6000806000610e58858561135f565b91509150610e65816113a4565b509392505050565b600080610ebb7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f554610ee791906119e1565b9392505050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600082610f568584611593565b14949350505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb6000610f8d8b8b8a6108cd565b905080891115610fdf5760405162461bcd60e51b815260206004820152600b60248201527f455843454544535f4d415800000000000000000000000000000000000000000060448201526064016105d9565b610fe88b610785565b8911156110375760405162461bcd60e51b815260206004820152600e60248201527f455843454544535f535550504c5900000000000000000000000000000000000060448201526064016105d9565b60008b81526003830160209081526040808320600701546004860190925290912054611063908b6119f8565b11156110b15760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e000000000000000000000000000060448201526064016105d9565b60008b815260038301602052604090206005015415611123576110d78b8b8a8a8a610866565b6111235760405162461bcd60e51b815260206004820152600f60248201527f4e4f545f414c4c4f574c4953544544000000000000000000000000000000000060448201526064016105d9565b60008b815260038301602052604090206008015473ffffffffffffffffffffffffffffffffffffffff16156111d75760008b815260038301602052604090206008015461118b9073ffffffffffffffffffffffffffffffffffffffff168c8c8b8989896106fa565b6111d75760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e415455524500000000000000000000000000000060448201526064016105d9565b5050505050505050505050565b4660009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb60205260408120549081900361131a5750604080518082018252600b81527f54696572656453616c657300000000000000000000000000000000000000000060209182015281518083018352600381527f322e7800000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0a8f5cd262c609ce448522f0993fd8cd7e4c5487b979cac486662358ea244890818401527ff5f84182131be97a41a3d4efb82d0a0d5698d76e6ec4dc9589738f1341d900c960608201524660808201523060a0808301919091528351808303909101815260c090910190925281519101205b90565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526022810183905260428101829052600090606201610f2b565b60008082516041036113955760208301516040840151606085015160001a611389878285856115d8565b9450945050505061139d565b506000905060025b9250929050565b60008160048111156113b8576113b8611a6f565b036113c05750565b60018160048111156113d4576113d4611a6f565b036114215760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105d9565b600281600481111561143557611435611a6f565b036114825760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105d9565b600381600481111561149657611496611a6f565b036115095760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d9565b600481600481111561151d5761151d611a6f565b036115905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d9565b50565b600081815b8451811015610e65576115c4828683815181106115b7576115b7611a9e565b60200260200101516116f0565b9150806115d081611acd565b915050611598565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561160f57506000905060036116e7565b8460ff16601b1415801561162757508460ff16601c14155b1561163857506000905060046116e7565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561168c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166116e0576000600192509250506116e7565b9150600090505b94509492505050565b600081831061170c576000828152602084905260409020610ee7565b5060009182526020526040902090565b60006020828403121561172e57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461175957600080fd5b919050565b6000806040838503121561177157600080fd5b8235915061178160208401611735565b90509250929050565b60008083601f84011261179c57600080fd5b50813567ffffffffffffffff8111156117b457600080fd5b60208301915083602082850101111561139d57600080fd5b60008060008060008060a087890312156117e557600080fd5b863595506117f560208801611735565b945060408701359350606087013567ffffffffffffffff81111561181857600080fd5b61182489828a0161178a565b979a9699509497949695608090950135949350505050565b60008083601f84011261184e57600080fd5b50813567ffffffffffffffff81111561186657600080fd5b6020830191508360208260051b850101111561139d57600080fd5b60008060008060006080868803121561189957600080fd5b853594506118a960208701611735565b935060408601359250606086013567ffffffffffffffff8111156118cc57600080fd5b6118d88882890161183c565b969995985093965092949392505050565b6000806000606084860312156118fe57600080fd5b8335925061190e60208501611735565b9150604084013590509250925092565b60008060008060008060008060c0898b03121561193a57600080fd5b883597506020890135965060408901359550606089013567ffffffffffffffff8082111561196757600080fd5b6119738c838d0161183c565b909750955060808b013591508082111561198c57600080fd5b506119998b828c0161178a565b999c989b50969995989497949560a00135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156119f3576119f36119b2565b500390565b60008219821115611a0b57611a0b6119b2565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a4857611a486119b2565b500290565b600060208284031215611a5f57600080fd5b81518015158114610ee757600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611afe57611afe6119b2565b506001019056fea26469706673582212203d823ebd4baaf247a6a1fbcaa976db225f2fd0c4bfd47369ce5989093983d9db64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../security/ReentrancyGuard.sol\";\nimport \"../../../../introspection/ERC165Storage.sol\";\nimport \"../../../../finance/sales/TieredSales.sol\";\nimport \"../../extensions/mintable/IERC721MintableExtension.sol\";\nimport \"../../extensions/supply/ERC721SupplyStorage.sol\";\nimport \"../../extensions/supply/ERC721SupplyInternal.sol\";\n\n/**\n * @title ERC721 - Tiered Sales\n * @notice Sales mechanism for ERC721 NFTs with multiple tiered pricing, allowlist and allocation plans.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721MintableExtension IERC721SupplyExtension\n * @custom:provides-interfaces ITieredSales\n */\ncontract ERC721TieredSales is ReentrancyGuard, TieredSales, ERC721SupplyInternal {\n    using ERC165Storage for ERC165Storage.Layout;\n    using ERC721SupplyStorage for ERC721SupplyStorage.Layout;\n\n    function mintByTier(\n        uint256 tierId,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof,\n        bytes calldata signature,\n        uint256 validUntil\n    ) external payable virtual nonReentrant {\n        super._executeSale(tierId, count, maxAllowance, allowlistProof, signature, validUntil);\n\n        IERC721MintableExtension(address(this)).mintByFacet(_msgSender(), count);\n    }\n\n    function _remainingSupply(uint256) internal view virtual override returns (uint256) {\n        uint256 remainingSupply = ERC721SupplyStorage.layout().maxSupply - _totalSupply();\n\n        return remainingSupply;\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/sales/ERC721TieredSalesERC2771": {
    "fqn": "flair-sdk:token/ERC721/facets/sales/ERC721TieredSalesERC2771",
    "version": "2.14.0",
    "address": {
      "5": "0x32205565D0e6948617C8329bdc539e283C32EC28",
      "goerli": "0x32205565D0e6948617C8329bdc539e283C32EC28"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721TieredSalesERC2771",
      "sourceName": "src/token/ERC721/facets/sales/ERC721TieredSalesERC2771.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyExceeded",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            }
          ],
          "name": "maxMintableForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxMintable",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "mintByTier",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            }
          ],
          "name": "onTierAllowlist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "remainingForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "reservedMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tiers",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalReserved",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "verifySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "walletMintedByTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611c13806100206000396000f3fe6080604052600436106100b15760003560e01c80635897f87811610069578063ba09e6321161004e578063ba09e632146102d6578063c71b0e1c146102f6578063d36ed2f31461032a57600080fd5b80635897f8781461029657806368c7d37c146102b657600080fd5b8063200cd62a1161009a578063200cd62a146101e65780632cb9b2ac1461021657806353367f081461024a57600080fd5b8063039af9eb146100b65780631123f2ef14610169575b600080fd5b3480156100c257600080fd5b506100d66100d13660046117f4565b61033f565b60405161016091906000610120820190508251825260208301516020830152604083015173ffffffffffffffffffffffffffffffffffffffff8082166040850152606085015160608501526080850151608085015260a085015160a085015260c085015160c085015260e085015160e0850152610100915080828601511682850152505092915050565b60405180910390f35b34801561017557600080fd5b506101d8610184366004611836565b60009182527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cc06020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205490565b604051908152602001610160565b3480156101f257600080fd5b506102066102013660046118a4565b61046e565b6040519015158152602001610160565b34801561022257600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd546101d8565b34801561025657600080fd5b506101d86102653660046117f4565b60009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf602052604090205490565b3480156102a257600080fd5b506101d86102b13660046117f4565b6104cf565b3480156102c257600080fd5b506102066102d1366004611959565b610546565b3480156102e257600080fd5b506101d86102f13660046119c1565b61055f565b34801561030257600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546101d8565b61033d6103383660046119f6565b61056c565b005b6103bd6040518061012001604052806000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600080191681526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5060009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe602090815260409182902082516101208101845281548152600182015492810192909252600281015473ffffffffffffffffffffffffffffffffffffffff908116938301939093526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e08301526008015490911661010082015290565b60008681527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600801546104c49073ffffffffffffffffffffffffffffffffffffffff16888888888888610701565b979650505050505050565b60007fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb816104fc8461078c565b600085815260048401602090815260408083205460038701909252822060070154929350909161052c9190611ab9565b90508082101561053e57509392505050565b949350505050565b6000610555868686868661086d565b9695505050505050565b600061053e8484846108d4565b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e054036105e25760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60027f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e0556106168888888888888888610b59565b30632d4f475f610624610e14565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602481018a9052604401600060405180830381600087803b15801561069157600080fd5b505af11580156106a5573d6000803e3d6000fd5b5050505060016106d27f3d9e0cf98d8ac76a756d900415e06fbccac0f9e61251a384452695e2330be6e090565b555050505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90565b600042821015610713575060006104c4565b600061076385858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061075d92508c91508b90508a88610e23565b90610eae565b73ffffffffffffffffffffffffffffffffffffffff8a8116911614915050979650505050505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546000917fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb916107ff9190611ab9565b61080884610ed2565b6108129190611ab9565b600084815260038301602052604090206006015490925015610867576000838152600482016020908152604080832054600385019092529091206006015461085a9190611ab9565b6108649083611ad0565b91505b50919050565b60006105558383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506108af92506106dd915050565b600089815260039190910160205260409020600501546108cf8888610f53565b610fae565b60008381527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260408120600401547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb906109735760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4558495354530000000000000000000000000000000000000000000060448201526064016105d9565b60008581526003820160205260409020544210156109d35760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f5354415254454400000000000000000000000000000000000000000060448201526064016105d9565b6000858152600382016020526040902060010154421115610a365760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f454e4445440000000000000000000000000000000000000060448201526064016105d9565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684528252808320548884526003850190925290912060040154610a839190611ab9565b6000868152600583016020908152604080832073ffffffffffffffffffffffffffffffffffffffff891684529091529020549092508311610b065760405162461bcd60e51b815260206004820152600f60248201527f4d415845445f414c4c4f57414e4345000000000000000000000000000000000060448201526064016105d9565b6000858152600582016020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452909152812054610b429085611ab9565b905080831115610b50578092505b50509392505050565b610b7188610b65610e14565b89898989898989610fc4565b60008881527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020600201547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9073ffffffffffffffffffffffffffffffffffffffff16610c525760008981526003808301602052604090912001543490610bff908a90611ae8565b1115610c4d5760405162461bcd60e51b815260206004820152601360248201527f494e53554646494349454e545f414d4f554e540000000000000000000000000060448201526064016105d9565b610d49565b600089815260038201602052604090206002015473ffffffffffffffffffffffffffffffffffffffff166323b872dd610c89610e14565b60008c81526003808601602052604090912001543090610caa908d90611ae8565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d479190611b25565b505b600089815260058201602052604081208991610d63610e14565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610dac9190611ad0565b90915550506000898152600482016020526040812080548a9290610dd1908490611ad0565b9091555050600089815260038201602052604090206006015415610e095787816002016000828254610e039190611ad0565b90915550505b505050505050505050565b6000610e1e611249565b905090565b604080517f9e1fb3640a418bdeb2ea9d1423d656894db5c96e895e93867d5bb7862df246ac602082015290810185905273ffffffffffffffffffffffffffffffffffffffff841660608201526080810183905260a08101829052600090819060c001604051602081830303815290604052805190602001209050610555610ea86112bd565b826113f5565b6000806000610ebd8585611437565b91509150610eca8161147c565b509392505050565b600080610f207faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f4547faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f3540390565b7faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f554610f4c9190611ab9565b9392505050565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600082610fbb858461166b565b14949350505050565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb6000610ff28b8b8a6108d4565b9050808911156110445760405162461bcd60e51b815260206004820152600b60248201527f455843454544535f4d415800000000000000000000000000000000000000000060448201526064016105d9565b61104d8b61078c565b89111561109c5760405162461bcd60e51b815260206004820152600e60248201527f455843454544535f535550504c5900000000000000000000000000000000000060448201526064016105d9565b60008b815260038301602090815260408083206007015460048601909252909120546110c8908b611ad0565b11156111165760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e000000000000000000000000000060448201526064016105d9565b60008b8152600383016020526040902060050154156111885761113c8b8b8a8a8a61086d565b6111885760405162461bcd60e51b815260206004820152600f60248201527f4e4f545f414c4c4f574c4953544544000000000000000000000000000000000060448201526064016105d9565b60008b815260038301602052604090206008015473ffffffffffffffffffffffffffffffffffffffff161561123c5760008b81526003830160205260409020600801546111f09073ffffffffffffffffffffffffffffffffffffffff168c8c8b898989610701565b61123c5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5349474e415455524500000000000000000000000000000060448201526064016105d9565b5050505050505050505050565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f4205460009073ffffffffffffffffffffffffffffffffffffffff1633036112b557507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b90565b4660009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb6020526040812054908190036112ba5750604080518082018252600b81527f54696572656453616c657300000000000000000000000000000000000000000060209182015281518083018352600381527f322e7800000000000000000000000000000000000000000000000000000000009082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f0a8f5cd262c609ce448522f0993fd8cd7e4c5487b979cac486662358ea244890818401527ff5f84182131be97a41a3d4efb82d0a0d5698d76e6ec4dc9589738f1341d900c960608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526022810183905260428101829052600090606201610f90565b600080825160410361146d5760208301516040840151606085015160001a611461878285856116b0565b94509450505050611475565b506000905060025b9250929050565b600081600481111561149057611490611b47565b036114985750565b60018160048111156114ac576114ac611b47565b036114f95760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105d9565b600281600481111561150d5761150d611b47565b0361155a5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105d9565b600381600481111561156e5761156e611b47565b036115e15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d9565b60048160048111156115f5576115f5611b47565b036116685760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016105d9565b50565b600081815b8451811015610eca5761169c8286838151811061168f5761168f611b76565b60200260200101516117c8565b9150806116a881611ba5565b915050611670565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156116e757506000905060036117bf565b8460ff16601b141580156116ff57508460ff16601c14155b1561171057506000905060046117bf565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611764573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81166117b8576000600192509250506117bf565b9150600090505b94509492505050565b60008183106117e4576000828152602084905260409020610f4c565b5060009182526020526040902090565b60006020828403121561180657600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461183157600080fd5b919050565b6000806040838503121561184957600080fd5b823591506118596020840161180d565b90509250929050565b60008083601f84011261187457600080fd5b50813567ffffffffffffffff81111561188c57600080fd5b60208301915083602082850101111561147557600080fd5b60008060008060008060a087890312156118bd57600080fd5b863595506118cd6020880161180d565b945060408701359350606087013567ffffffffffffffff8111156118f057600080fd5b6118fc89828a01611862565b979a9699509497949695608090950135949350505050565b60008083601f84011261192657600080fd5b50813567ffffffffffffffff81111561193e57600080fd5b6020830191508360208260051b850101111561147557600080fd5b60008060008060006080868803121561197157600080fd5b853594506119816020870161180d565b935060408601359250606086013567ffffffffffffffff8111156119a457600080fd5b6119b088828901611914565b969995985093965092949392505050565b6000806000606084860312156119d657600080fd5b833592506119e66020850161180d565b9150604084013590509250925092565b60008060008060008060008060c0898b031215611a1257600080fd5b883597506020890135965060408901359550606089013567ffffffffffffffff80821115611a3f57600080fd5b611a4b8c838d01611914565b909750955060808b0135915080821115611a6457600080fd5b50611a718b828c01611862565b999c989b50969995989497949560a00135949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015611acb57611acb611a8a565b500390565b60008219821115611ae357611ae3611a8a565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611b2057611b20611a8a565b500290565b600060208284031215611b3757600080fd5b81518015158114610f4c57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611bd657611bd6611a8a565b506001019056fea2646970667358221220deeb73fb7a32ba9a961703a915026ca5977011f7131fc8b579bd1e6a779e758c64736f6c634300080f0033",
      "deployedBytecode": "",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./ERC721TieredSales.sol\";\n\n/**\n * @title ERC721 - Tiered Sales - with meta-transactions\n * @notice Sales mechanism for ERC721 NFTs with ERC2771 meta-transactions support (e.g. credit card minting).\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:required-dependencies IERC721MintableExtension\n * @custom:provides-interfaces ITieredSales\n */\ncontract ERC721TieredSalesERC2771 is ERC721TieredSales, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:factory/FlairFactory": {
    "fqn": "flair-sdk:factory/FlairFactory",
    "version": "2.14.0",
    "address": {
      "5": "0x123B51748a29F9bEE2ECD7bB0B4E32c1fcB324c8",
      "goerli": "0x123B51748a29F9bEE2ECD7bB0B4E32c1fcB324c8"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "FlairFactory",
      "sourceName": "src/factory/FlairFactory.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "proxyAddress",
              "type": "address"
            }
          ],
          "name": "ProxyCreated",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "cloneDeterministicSimple",
          "outputs": [
            {
              "internalType": "address",
              "name": "deployedProxy",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "name": "predictDeterministicSimple",
          "outputs": [
            {
              "internalType": "address",
              "name": "deployedProxy",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61007a565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6108c5806100896000396000f3fe6080604052600436106100655760003560e01c8063715018a611610043578063715018a6146100dd5780638da5cb5b146100f2578063f2fde38b1461012357600080fd5b806310db94b91461006a5780633ccfd60b146100b357806347791ece146100ca575b600080fd5b34801561007657600080fd5b5061008a6100853660046107b3565b610143565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100bf57600080fd5b506100c86101aa565b005b61008a6100d83660046107dd565b6101f2565b3480156100e957600080fd5b506100c861037b565b3480156100fe57600080fd5b5060005462010000900473ffffffffffffffffffffffffffffffffffffffff1661008a565b34801561012f57600080fd5b506100c861013e366004610864565b61038d565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506101a2848261042a565b949350505050565b6101f0476101d460005473ffffffffffffffffffffffffffffffffffffffff620100009091041690565b73ffffffffffffffffffffffffffffffffffffffff16906104af565b565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b16602082015260348101849052600090819060540160405160208183030381529060405280519060200120905061025186826105da565b9150821561032f576000808373ffffffffffffffffffffffffffffffffffffffff16868660405161028392919061087f565b6000604051808303816000865af19150503d80600081146102c0576040519150601f19603f3d011682016040523d82523d6000602084013e6102c5565b606091505b50915091508161032c578051156102df5780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e45000000000000000000000000000000000060448201526064015b60405180910390fd5b50505b60405173ffffffffffffffffffffffffffffffffffffffff83169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b61038361069e565b6101f0600061070c565b61039561069e565b73ffffffffffffffffffffffffffffffffffffffff811661041e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610323565b6104278161070c565b50565b60006104a68383306040517f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000008152606093841b60148201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006028820152921b6038830152604c8201526037808220606c830152605591012090565b90505b92915050565b804710156104ff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610323565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610559576040519150601f19603f3d011682016040523d82523d6000602084013e61055e565b606091505b50509050806105d55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610323565b505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f591505073ffffffffffffffffffffffffffffffffffffffff81166104a95760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610323565b60005473ffffffffffffffffffffffffffffffffffffffff620100009091041633146101f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610323565b6000805473ffffffffffffffffffffffffffffffffffffffff838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107ae57600080fd5b919050565b600080604083850312156107c657600080fd5b6107cf8361078a565b946020939093013593505050565b600080600080606085870312156107f357600080fd5b6107fc8561078a565b935060208501359250604085013567ffffffffffffffff8082111561082057600080fd5b818701915087601f83011261083457600080fd5b81358181111561084357600080fd5b88602082850101111561085557600080fd5b95989497505060200194505050565b60006020828403121561087657600080fd5b6104a68261078a565b818382376000910190815291905056fea26469706673582212205dd26872140cc88adb843df9aedeffa11ade68572bb316e502e8f96425b684d264736f6c634300080f0033",
      "deployedBytecode": "0x6080604052600436106100655760003560e01c8063715018a611610043578063715018a6146100dd5780638da5cb5b146100f2578063f2fde38b1461012357600080fd5b806310db94b91461006a5780633ccfd60b146100b357806347791ece146100ca575b600080fd5b34801561007657600080fd5b5061008a6100853660046107b3565b610143565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100bf57600080fd5b506100c86101aa565b005b61008a6100d83660046107dd565b6101f2565b3480156100e957600080fd5b506100c861037b565b3480156100fe57600080fd5b5060005462010000900473ffffffffffffffffffffffffffffffffffffffff1661008a565b34801561012f57600080fd5b506100c861013e366004610864565b61038d565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506101a2848261042a565b949350505050565b6101f0476101d460005473ffffffffffffffffffffffffffffffffffffffff620100009091041690565b73ffffffffffffffffffffffffffffffffffffffff16906104af565b565b6040517fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b16602082015260348101849052600090819060540160405160208183030381529060405280519060200120905061025186826105da565b9150821561032f576000808373ffffffffffffffffffffffffffffffffffffffff16868660405161028392919061087f565b6000604051808303816000865af19150503d80600081146102c0576040519150601f19603f3d011682016040523d82523d6000602084013e6102c5565b606091505b50915091508161032c578051156102df5780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e45000000000000000000000000000000000060448201526064015b60405180910390fd5b50505b60405173ffffffffffffffffffffffffffffffffffffffff83169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b61038361069e565b6101f0600061070c565b61039561069e565b73ffffffffffffffffffffffffffffffffffffffff811661041e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610323565b6104278161070c565b50565b60006104a68383306040517f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000008152606093841b60148201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006028820152921b6038830152604c8201526037808220606c830152605591012090565b90505b92915050565b804710156104ff5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610323565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610559576040519150601f19603f3d011682016040523d82523d6000602084013e61055e565b606091505b50509050806105d55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610323565b505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f591505073ffffffffffffffffffffffffffffffffffffffff81166104a95760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610323565b60005473ffffffffffffffffffffffffffffffffffffffff620100009091041633146101f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610323565b6000805473ffffffffffffffffffffffffffffffffffffffff838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107ae57600080fd5b919050565b600080604083850312156107c657600080fd5b6107cf8361078a565b946020939093013593505050565b600080600080606085870312156107f357600080fd5b6107fc8561078a565b935060208501359250604085013567ffffffffffffffff8082111561082057600080fd5b818701915087601f83011261083457600080fd5b81358181111561084357600080fd5b88602082850101111561085557600080fd5b95989497505060200194505050565b60006020828403121561087657600080fd5b6104a68261078a565b818382376000910190815291905056fea26469706673582212205dd26872140cc88adb843df9aedeffa11ade68572bb316e502e8f96425b684d264736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\nimport \"./Clones.sol\";\n\ncontract FlairFactory is Initializable, Ownable {\n    using Address for address payable;\n\n    event ProxyCreated(address indexed deployer, address indexed proxyAddress);\n\n    function withdraw() public {\n        payable(owner()).sendValue(address(this).balance);\n    }\n\n    function cloneDeterministicSimple(\n        address implementation,\n        bytes32 salt,\n        bytes calldata data\n    ) external payable returns (address deployedProxy) {\n        bytes32 _salt = keccak256(abi.encodePacked(msg.sender, salt));\n        deployedProxy = Clones.cloneDeterministic(implementation, _salt);\n\n        if (data.length > 0) {\n            (bool success, bytes memory returndata) = deployedProxy.call(data);\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (returndata.length > 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    assembly {\n                        let returndata_size := mload(returndata)\n                        revert(add(32, returndata), returndata_size)\n                    }\n                } else {\n                    revert(\"FAILED_TO_CLONE\");\n                }\n            }\n        }\n\n        emit ProxyCreated(msg.sender, deployedProxy);\n    }\n\n    function predictDeterministicSimple(address implementation, bytes32 salt)\n        external\n        view\n        returns (address deployedProxy)\n    {\n        bytes32 _salt = keccak256(abi.encodePacked(msg.sender, salt));\n        deployedProxy = Clones.predictDeterministicAddress(implementation, _salt);\n    }\n}\n"
  },
  "flair-sdk:factory/FlairFactoryNewable": {
    "fqn": "flair-sdk:factory/FlairFactoryNewable",
    "version": "2.14.0",
    "address": {
      "5": "0x1d5b50B570a474dA722F5A5e6deA8FB13B001AA2",
      "goerli": "0x1d5b50B570a474dA722F5A5e6deA8FB13B001AA2"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "FlairFactoryNewable",
      "sourceName": "src/factory/FlairFactoryNewable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint8",
              "name": "version",
              "type": "uint8"
            }
          ],
          "name": "Initialized",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "deployer",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "proxyAddress",
              "type": "address"
            }
          ],
          "name": "ProxyCreated",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "cloneDeterministicSimple",
          "outputs": [
            {
              "internalType": "address",
              "name": "deployedProxy",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61007a565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6108bb806100896000396000f3fe60806040526004361061005a5760003560e01c8063715018a611610043578063715018a6146100b25780638da5cb5b146100c7578063f2fde38b146100f857600080fd5b80633ccfd60b1461005f57806347791ece14610076575b600080fd5b34801561006b57600080fd5b50610074610118565b005b61008961008436600461065a565b610160565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100be57600080fd5b506100746102f6565b3480156100d357600080fd5b5060005462010000900473ffffffffffffffffffffffffffffffffffffffff16610089565b34801561010457600080fd5b506100746101133660046106e1565b610308565b61015e4761014260005473ffffffffffffffffffffffffffffffffffffffff620100009091041690565b73ffffffffffffffffffffffffffffffffffffffff16906103bf565b565b600080848660405161017190610624565b73ffffffffffffffffffffffffffffffffffffffff90911681526020018190604051809103906000f59050801580156101ae573d6000803e3d6000fd5b50915081905082156102aa576000808373ffffffffffffffffffffffffffffffffffffffff1686866040516101e4929190610703565b6000604051808303816000865af19150503d8060008114610221576040519150601f19603f3d011682016040523d82523d6000602084013e610226565b606091505b5091509150816102a7578051156102405780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e45000000000000000000000000000000000060448201526064015b60405180910390fd5b50505b60405173ffffffffffffffffffffffffffffffffffffffff83169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b6102fe61051e565b61015e60006105a6565b61031061051e565b73ffffffffffffffffffffffffffffffffffffffff81166103b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161029e565b6103bc816105a6565b50565b80471015610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161029e565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610483576040519150601f19603f3d011682016040523d82523d6000602084013e610488565b606091505b5050905080610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161029e565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff6201000090910416331461015e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029e565b6000805473ffffffffffffffffffffffffffffffffffffffff838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6101728061071483390190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461065557600080fd5b919050565b6000806000806060858703121561067057600080fd5b61067985610631565b935060208501359250604085013567ffffffffffffffff8082111561069d57600080fd5b818701915087601f8301126106b157600080fd5b8135818111156106c057600080fd5b8860208285010111156106d257600080fd5b95989497505060200194505050565b6000602082840312156106f357600080fd5b6106fc82610631565b9392505050565b818382376000910190815291905056fe608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea2646970667358221220aab8be08fa0bce1d9b1dff013bf6f0d12eb11a17975f75de080d165140f5c35c64736f6c634300080f0033a2646970667358221220edd8144075ea17da140bdd70a7a96bfd1f06cd949158113371200b0550b3d69c64736f6c634300080f0033",
      "deployedBytecode": "0x60806040526004361061005a5760003560e01c8063715018a611610043578063715018a6146100b25780638da5cb5b146100c7578063f2fde38b146100f857600080fd5b80633ccfd60b1461005f57806347791ece14610076575b600080fd5b34801561006b57600080fd5b50610074610118565b005b61008961008436600461065a565b610160565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100be57600080fd5b506100746102f6565b3480156100d357600080fd5b5060005462010000900473ffffffffffffffffffffffffffffffffffffffff16610089565b34801561010457600080fd5b506100746101133660046106e1565b610308565b61015e4761014260005473ffffffffffffffffffffffffffffffffffffffff620100009091041690565b73ffffffffffffffffffffffffffffffffffffffff16906103bf565b565b600080848660405161017190610624565b73ffffffffffffffffffffffffffffffffffffffff90911681526020018190604051809103906000f59050801580156101ae573d6000803e3d6000fd5b50915081905082156102aa576000808373ffffffffffffffffffffffffffffffffffffffff1686866040516101e4929190610703565b6000604051808303816000865af19150503d8060008114610221576040519150601f19603f3d011682016040523d82523d6000602084013e610226565b606091505b5091509150816102a7578051156102405780518082602001fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e45000000000000000000000000000000000060448201526064015b60405180910390fd5b50505b60405173ffffffffffffffffffffffffffffffffffffffff83169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b6102fe61051e565b61015e60006105a6565b61031061051e565b73ffffffffffffffffffffffffffffffffffffffff81166103b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161029e565b6103bc816105a6565b50565b80471015610429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161029e565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610483576040519150601f19603f3d011682016040523d82523d6000602084013e610488565b606091505b5050905080610519576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161029e565b505050565b60005473ffffffffffffffffffffffffffffffffffffffff6201000090910416331461015e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029e565b6000805473ffffffffffffffffffffffffffffffffffffffff838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b6101728061071483390190565b803573ffffffffffffffffffffffffffffffffffffffff8116811461065557600080fd5b919050565b6000806000806060858703121561067057600080fd5b61067985610631565b935060208501359250604085013567ffffffffffffffff8082111561069d57600080fd5b818701915087601f8301126106b157600080fd5b8135818111156106c057600080fd5b8860208285010111156106d257600080fd5b95989497505060200194505050565b6000602082840312156106f357600080fd5b6106fc82610631565b9392505050565b818382376000910190815291905056fe608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea2646970667358221220aab8be08fa0bce1d9b1dff013bf6f0d12eb11a17975f75de080d165140f5c35c64736f6c634300080f0033a2646970667358221220edd8144075ea17da140bdd70a7a96bfd1f06cd949158113371200b0550b3d69c64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\nimport \"./Clones.sol\";\nimport \"./MinimalProxy.sol\";\n\ncontract FlairFactoryNewable is Initializable, Ownable {\n    using Address for address payable;\n\n    event ProxyCreated(address indexed deployer, address indexed proxyAddress);\n\n    function withdraw() public {\n        payable(owner()).sendValue(address(this).balance);\n    }\n\n    function cloneDeterministicSimple(\n        address implementation,\n        bytes32 salt,\n        bytes calldata data\n    ) external payable returns (address deployedProxy) {\n        MinimalProxy p = new MinimalProxy{ salt: salt }(implementation);\n        deployedProxy = address(p);\n\n        if (data.length > 0) {\n            (bool success, bytes memory returndata) = deployedProxy.call(data);\n\n            if (!success) {\n                // Look for revert reason and bubble it up if present\n                if (returndata.length > 0) {\n                    // The easiest way to bubble the revert reason is using memory via assembly\n                    assembly {\n                        let returndata_size := mload(returndata)\n                        revert(add(32, returndata), returndata_size)\n                    }\n                } else {\n                    revert(\"FAILED_TO_CLONE\");\n                }\n            }\n        }\n\n        emit ProxyCreated(msg.sender, address(deployedProxy));\n    }\n}\n"
  },
  "flair-sdk:legal/license/License": {
    "fqn": "flair-sdk:legal/license/License",
    "version": "2.14.0",
    "address": {
      "5": "0xBfd72811396fe16Fa2283359E7d8C9b1294e5578",
      "goerli": "0xBfd72811396fe16Fa2283359E7d8C9b1294e5578"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "License",
      "sourceName": "src/legal/license/License.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrLicenseLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseURI",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseName",
              "type": "string"
            }
          ],
          "name": "CustomLicenseSet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "LicenseLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "licenseVersion",
              "type": "uint8"
            }
          ],
          "name": "LicenseVersionSet",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "customLicenseName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "customLicenseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLicenseName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLicenseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "licenseVersion",
          "outputs": [
            {
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610966806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a341793b11610050578063a341793b1461009f578063c7db2893146100a7578063d41a6f5f146100af57600080fd5b806350a5292f1461006c5780636884ff2b1461008a575b600080fd5b6100746100b7565b6040516100819190610706565b60405180910390f35b6100926100e9565b604051610081919061075e565b61009261019d565b6100926101a7565b6100926101b1565b60006100e47f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f65460ff1690565b905090565b60607f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f6600101805461011a906107af565b80601f0160208091040260200160405190810160405280929190818152602001828054610146906107af565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b5050505050905090565b60606100e46101e2565b60606100e46104d1565b60607f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f6600201805461011a906107af565b606060007f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f690506006815460ff166007811115610221576102216106f0565b036102b957806002018054610235906107af565b80601f0160208091040260200160405190810160405280929190818152602001828054610261906107af565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b505050505091505090565b6007815460ff1660078111156102d1576102d16106f0565b036102ea57505060408051602081019091526000815290565b805460ff166007811115610300576103006106f0565b60000361034057505060408051808201909152600781527f4342455f43433000000000000000000000000000000000000000000000000000602082015290565b805460ff166007811115610356576103566106f0565b60010361039657505060408051808201909152600781527f4342455f45435200000000000000000000000000000000000000000000000000602082015290565b805460ff1660078111156103ac576103ac6106f0565b6002036103ec57505060408051808201909152600881527f4342455f4e454352000000000000000000000000000000000000000000000000602082015290565b805460ff166007811115610402576104026106f0565b60030361044257505060408051808201909152600b81527f4342455f4e4543525f4853000000000000000000000000000000000000000000602082015290565b805460ff166007811115610458576104586106f0565b60040361049857505060408051808201909152600681527f4342455f50520000000000000000000000000000000000000000000000000000602082015290565b505060408051808201909152600981527f4342455f50525f48530000000000000000000000000000000000000000000000602082015290565b606060007f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f690506006815460ff166007811115610510576105106106f0565b0361052457806001018054610235906107af565b6007815460ff16600781111561053c5761053c6106f0565b0361055557505060408051602081019091526000815290565b60405180606001604052806031815260200161090060319139815461058d9060ff166007811115610588576105886106f0565b6105b3565b60405160200161059e9291906107e9565b60405160208183030381529060405291505090565b6060816000036105f657505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610620578061060a8161082e565b91506106199050600a8361087c565b91506105fa565b60008167ffffffffffffffff81111561063b5761063b610890565b6040519080825280601f01601f191660200182016040528015610665576020820181803683370190505b5090505b84156106e85761067a6001836108a6565b9150610687600a866108bd565b6106929060306108d1565b60f81b8183815181106106a7576106a76108e9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506106e1600a8661087c565b9450610669565b949350505050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061072857634e487b7160e01b600052602160045260246000fd5b91905290565b60005b83811015610749578181015183820152602001610731565b83811115610758576000848401525b50505050565b602081526000825180602084015261077d81604085016020870161072e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600181811c908216806107c357607f821691505b6020821081036107e357634e487b7160e01b600052602260045260246000fd5b50919050565b600083516107fb81846020880161072e565b83519083019061080f81836020880161072e565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361085f5761085f610818565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261088b5761088b610866565b500490565b634e487b7160e01b600052604160045260246000fd5b6000828210156108b8576108b8610818565b500390565b6000826108cc576108cc610866565b500690565b600082198211156108e4576108e4610818565b500190565b634e487b7160e01b600052603260045260246000fdfe61723a2f2f5f44396b4e3157724e576243713535425341475262544234625333763851415054596d42546853625833412fa264697066735822122084e09a3c9d1c356da6314db0d4cc46b2a079379bdc4a6e0898677d54ceb351cf64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063a341793b11610050578063a341793b1461009f578063c7db2893146100a7578063d41a6f5f146100af57600080fd5b806350a5292f1461006c5780636884ff2b1461008a575b600080fd5b6100746100b7565b6040516100819190610706565b60405180910390f35b6100926100e9565b604051610081919061075e565b61009261019d565b6100926101a7565b6100926101b1565b60006100e47f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f65460ff1690565b905090565b60607f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f6600101805461011a906107af565b80601f0160208091040260200160405190810160405280929190818152602001828054610146906107af565b80156101935780601f1061016857610100808354040283529160200191610193565b820191906000526020600020905b81548152906001019060200180831161017657829003601f168201915b5050505050905090565b60606100e46101e2565b60606100e46104d1565b60607f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f6600201805461011a906107af565b606060007f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f690506006815460ff166007811115610221576102216106f0565b036102b957806002018054610235906107af565b80601f0160208091040260200160405190810160405280929190818152602001828054610261906107af565b80156102ae5780601f10610283576101008083540402835291602001916102ae565b820191906000526020600020905b81548152906001019060200180831161029157829003601f168201915b505050505091505090565b6007815460ff1660078111156102d1576102d16106f0565b036102ea57505060408051602081019091526000815290565b805460ff166007811115610300576103006106f0565b60000361034057505060408051808201909152600781527f4342455f43433000000000000000000000000000000000000000000000000000602082015290565b805460ff166007811115610356576103566106f0565b60010361039657505060408051808201909152600781527f4342455f45435200000000000000000000000000000000000000000000000000602082015290565b805460ff1660078111156103ac576103ac6106f0565b6002036103ec57505060408051808201909152600881527f4342455f4e454352000000000000000000000000000000000000000000000000602082015290565b805460ff166007811115610402576104026106f0565b60030361044257505060408051808201909152600b81527f4342455f4e4543525f4853000000000000000000000000000000000000000000602082015290565b805460ff166007811115610458576104586106f0565b60040361049857505060408051808201909152600681527f4342455f50520000000000000000000000000000000000000000000000000000602082015290565b505060408051808201909152600981527f4342455f50525f48530000000000000000000000000000000000000000000000602082015290565b606060007f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f690506006815460ff166007811115610510576105106106f0565b0361052457806001018054610235906107af565b6007815460ff16600781111561053c5761053c6106f0565b0361055557505060408051602081019091526000815290565b60405180606001604052806031815260200161090060319139815461058d9060ff166007811115610588576105886106f0565b6105b3565b60405160200161059e9291906107e9565b60405160208183030381529060405291505090565b6060816000036105f657505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610620578061060a8161082e565b91506106199050600a8361087c565b91506105fa565b60008167ffffffffffffffff81111561063b5761063b610890565b6040519080825280601f01601f191660200182016040528015610665576020820181803683370190505b5090505b84156106e85761067a6001836108a6565b9150610687600a866108bd565b6106929060306108d1565b60f81b8183815181106106a7576106a76108e9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506106e1600a8661087c565b9450610669565b949350505050565b634e487b7160e01b600052602160045260246000fd5b602081016008831061072857634e487b7160e01b600052602160045260246000fd5b91905290565b60005b83811015610749578181015183820152602001610731565b83811115610758576000848401525b50505050565b602081526000825180602084015261077d81604085016020870161072e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600181811c908216806107c357607f821691505b6020821081036107e357634e487b7160e01b600052602260045260246000fd5b50919050565b600083516107fb81846020880161072e565b83519083019061080f81836020880161072e565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361085f5761085f610818565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261088b5761088b610866565b500490565b634e487b7160e01b600052604160045260246000fd5b6000828210156108b8576108b8610818565b500390565b6000826108cc576108cc610866565b500690565b600082198211156108e4576108e4610818565b500190565b634e487b7160e01b600052603260045260246000fdfe61723a2f2f5f44396b4e3157724e576243713535425341475262544234625333763851415054596d42546853625833412fa264697066735822122084e09a3c9d1c356da6314db0d4cc46b2a079379bdc4a6e0898677d54ceb351cf64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165Storage.sol\";\n\nimport \"./LicenseStorage.sol\";\nimport \"./LicenseInternal.sol\";\nimport \"./ILicense.sol\";\n\n/**\n * @title License\n * @notice Add license name and content URI for interacting or holding assets of this contract. Based on a16z's \"Can't Be Evil\".\n *\n * @custom:type eip-2535-facet\n * @custom:category Legal\n * @custom:provides-interfaces ILicense ICantBeEvil\n */\ncontract License is ILicense, LicenseInternal {\n    function getLicenseURI() external view returns (string memory) {\n        return _getLicenseURI();\n    }\n\n    function getLicenseName() external view returns (string memory) {\n        return _getLicenseName();\n    }\n\n    function licenseVersion() external view returns (LicenseVersion) {\n        return _licenseVersion();\n    }\n\n    function customLicenseURI() external view returns (string memory) {\n        return LicenseStorage.layout().customLicenseURI;\n    }\n\n    function customLicenseName() external view returns (string memory) {\n        return LicenseStorage.layout().customLicenseName;\n    }\n}\n"
  },
  "flair-sdk:legal/license/LicenseOwnable": {
    "fqn": "flair-sdk:legal/license/LicenseOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x8dB874B5B2342ED2c1252dc8A50fCA6F642e0e00",
      "goerli": "0x8dB874B5B2342ED2c1252dc8A50fCA6F642e0e00"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "LicenseOwnable",
      "sourceName": "src/legal/license/LicenseOwnable.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrLicenseLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseURI",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseName",
              "type": "string"
            }
          ],
          "name": "CustomLicenseSet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "LicenseLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "licenseVersion",
              "type": "uint8"
            }
          ],
          "name": "LicenseVersionSet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "licenseVersionLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockLicenseVersion",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "licenseVersion",
              "type": "uint8"
            }
          ],
          "name": "setLicenseVersion",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610434806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806364ed291314610046578063bf9b7a571461005b578063dd89c6fa14610094575b600080fd5b610059610054366004610366565b61009c565b005b7f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f95460ff16604051901515815260200160405180910390f35b61005961014d565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61014a816101f7565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610138565b6101f56102f1565b565b7f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f9547f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f69060ff1615610275576040517ff48a7fea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8054829082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360078111156102b1576102b161038e565b02179055507f43151bff1cc6df3c0eb4f611859a071e6e4d636b029326ea9298ca84819df167826040516102e591906103bd565b60405180910390a15050565b7f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040517fe8dbcfb731deb2db7b5ed93a3d4dc3676d4e5b8bd51aef007a734a98697ec78d90600090a1565b60006020828403121561037857600080fd5b81356008811061038757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600883106103f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea2646970667358221220948df6697672c7618a69fac3394958d1084cc2639e5c7a68e88e67db0684486464736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806364ed291314610046578063bf9b7a571461005b578063dd89c6fa14610094575b600080fd5b610059610054366004610366565b61009c565b005b7f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f95460ff16604051901515815260200160405180910390f35b61005961014d565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61014a816101f7565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610138565b6101f56102f1565b565b7f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f9547f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f69060ff1615610275576040517ff48a7fea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8054829082907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360078111156102b1576102b161038e565b02179055507f43151bff1cc6df3c0eb4f611859a071e6e4d636b029326ea9298ca84819df167826040516102e591906103bd565b60405180910390a15050565b7f686fbd75ec6671870c2ca65eac65ee184d2285f055fb69de73ba3ce5549e15f980547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040517fe8dbcfb731deb2db7b5ed93a3d4dc3676d4e5b8bd51aef007a734a98697ec78d90600090a1565b60006020828403121561037857600080fd5b81356008811061038757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60208101600883106103f8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea2646970667358221220948df6697672c7618a69fac3394958d1084cc2639e5c7a68e88e67db0684486464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\nimport \"./LicenseStorage.sol\";\nimport \"./LicenseInternal.sol\";\nimport \"./ILicenseAdmin.sol\";\n\n/**\n * @title License - Admin - Ownable\n * @notice Allow contract owner to manage license version, name and URI.\n *\n * @custom:type eip-2535-facet\n * @custom:category Legal\n * @custom:peer-dependencies ILicense ICantBeEvil\n * @custom:provides-interfaces ILicenseAdmin\n */\ncontract LicenseOwnable is ILicenseAdmin, OwnableInternal, LicenseInternal {\n    using LicenseStorage for LicenseStorage.Layout;\n\n    function setLicenseVersion(LicenseVersion licenseVersion) external override onlyOwner {\n        _setLicenseVersion(licenseVersion);\n    }\n\n    function lockLicenseVersion() external override onlyOwner {\n        _lockLicenseVersion();\n    }\n\n    function licenseVersionLocked() external view override returns (bool) {\n        return LicenseStorage.layout().licenseVersionLocked;\n    }\n}\n"
  },
  "flair-sdk:token/common/metadata/Metadata": {
    "fqn": "flair-sdk:token/common/metadata/Metadata",
    "version": "2.14.0",
    "address": {
      "5": "0xD48a5fc3985Bf67BE78c294860964F4952b4B16b",
      "goerli": "0xD48a5fc3985Bf67BE78c294860964F4952b4B16b"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Metadata",
      "sourceName": "src/token/common/metadata/Metadata.sol",
      "abi": [
        {
          "inputs": [],
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "baseURILocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fallbackURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fallbackURILocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lastLockedTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "uriSuffix",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "uriSuffixLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061040d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635d148e5c116100765780636c0360eb1161005b5780636c0360eb1461016257806395d89b411461016a578063c4ef3e051461017257600080fd5b80635d148e5c146101085780636b95c5041461013257600080fd5b8063067f0848146100a857806306fdde03146100e35780630c7d9752146100f85780635503a0e814610100575b600080fd5b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2025460ff165b60405190151581526020015b60405180910390f35b6100eb61019c565b6040516100da9190610311565b6100eb61024d565b6100eb61027e565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2005460ff166100ce565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a205546040519081526020016100da565b6100eb6102af565b6100eb6102e0565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2045460ff166100ce565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc80546101ca90610384565b80601f01602080910402602001604051908101604052809291908181526020018280546101f690610384565b80156102435780601f1061021857610100808354040283529160200191610243565b820191906000526020600020905b81548152906001019060200180831161022657829003601f168201915b5050505050905090565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60050180546101ca90610384565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60070180546101ca90610384565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60030180546101ca90610384565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60010180546101ca90610384565b600060208083528351808285015260005b8181101561033e57858101830151858201604001528201610322565b81811115610350576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061039857607f821691505b6020821081036103d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212209b3a2a877e9558f45a78a46208fddc8bcc200dc70fc46fe0cd58514ec55ac34464736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80635d148e5c116100765780636c0360eb1161005b5780636c0360eb1461016257806395d89b411461016a578063c4ef3e051461017257600080fd5b80635d148e5c146101085780636b95c5041461013257600080fd5b8063067f0848146100a857806306fdde03146100e35780630c7d9752146100f85780635503a0e814610100575b600080fd5b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2025460ff165b60405190151581526020015b60405180910390f35b6100eb61019c565b6040516100da9190610311565b6100eb61024d565b6100eb61027e565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2005460ff166100ce565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a205546040519081526020016100da565b6100eb6102af565b6100eb6102e0565b7f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a2045460ff166100ce565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc80546101ca90610384565b80601f01602080910402602001604051908101604052809291908181526020018280546101f690610384565b80156102435780601f1061021857610100808354040283529160200191610243565b820191906000526020600020905b81548152906001019060200180831161022657829003601f168201915b5050505050905090565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60050180546101ca90610384565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60070180546101ca90610384565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60030180546101ca90610384565b60607f70612f47e27b43eb7f87867b7b8f899a5e08503dcccf1bf322c9eef06483a1fc60010180546101ca90610384565b600060208083528351808285015260005b8181101561033e57858101830151858201604001528201610322565b81811115610350576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061039857607f821691505b6020821081036103d1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea26469706673582212209b3a2a877e9558f45a78a46208fddc8bcc200dc70fc46fe0cd58514ec55ac34464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./IMetadata.sol\";\nimport \"./MetadataStorage.sol\";\n\n/**\n * @title Metadata\n * @notice Provides common functions for various token metadata standards. This extension supports base URI, per-token URI, and a fallback URI. You can also freeze URIs until a certain token ID.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:provides-interfaces IMetadata\n */\ncontract Metadata is IMetadata {\n    function name() external view virtual override returns (string memory) {\n        return MetadataStorage.layout().name;\n    }\n\n    function symbol() external view virtual override returns (string memory) {\n        return MetadataStorage.layout().symbol;\n    }\n\n    function baseURI() external view virtual returns (string memory) {\n        return MetadataStorage.layout().baseURI;\n    }\n\n    function fallbackURI() external view virtual returns (string memory) {\n        return MetadataStorage.layout().fallbackURI;\n    }\n\n    function uriSuffix() external view virtual returns (string memory) {\n        return MetadataStorage.layout().uriSuffix;\n    }\n\n    function baseURILocked() external view virtual returns (bool) {\n        return MetadataStorage.layout().baseURILocked;\n    }\n\n    function fallbackURILocked() external view virtual returns (bool) {\n        return MetadataStorage.layout().fallbackURILocked;\n    }\n\n    function uriSuffixLocked() external view virtual returns (bool) {\n        return MetadataStorage.layout().uriSuffixLocked;\n    }\n\n    function lastLockedTokenId() external view virtual returns (uint256) {\n        return MetadataStorage.layout().lastLockedTokenId;\n    }\n}\n"
  },
  "flair-sdk:token/common/metadata/MetadataOwnable": {
    "fqn": "flair-sdk:token/common/metadata/MetadataOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x5368004569091713B85000564D668D1744803B7a",
      "goerli": "0x5368004569091713B85000564D668D1744803B7a"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "MetadataOwnable",
      "sourceName": "src/token/common/metadata/MetadataOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "lockBaseURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockFallbackURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockNameAndSymbol",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockURISuffix",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "lockURIUntil",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newBaseURI",
              "type": "string"
            }
          ],
          "name": "setBaseURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newFallbackURI",
              "type": "string"
            }
          ],
          "name": "setFallbackURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "setName",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "name": "setSymbol",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "newTokenURI",
              "type": "string"
            }
          ],
          "name": "setURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "string[]",
              "name": "newTokenURIs",
              "type": "string[]"
            }
          ],
          "name": "setURIBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newURISuffix",
              "type": "string"
            }
          ],
          "name": "setURISuffix",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "",
      "deployedBytecode": "",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../../access/ownable/OwnableInternal.sol\";\n\nimport \"./MetadataAdminInternal.sol\";\nimport \"./MetadataStorage.sol\";\nimport \"./IMetadataAdmin.sol\";\n\n/**\n * @title Metadata - Admin - Ownable\n * @notice Allows diamond owner to change base, per-token, and fallback URIs, as wel as freezing URIs.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies IMetadata\n * @custom:provides-interfaces IMetadataAdmin\n */\ncontract MetadataOwnable is IMetadataAdmin, MetadataAdminInternal, OwnableInternal {\n    function setName(string calldata name) external virtual override onlyOwner {\n        _setName(name);\n    }\n\n    function setSymbol(string calldata symbol) external virtual override onlyOwner {\n        _setSymbol(symbol);\n    }\n\n    function lockNameAndSymbol() external virtual override onlyOwner {\n        _lockNameAndSymbol();\n    }\n\n    function setBaseURI(string calldata newBaseURI) public virtual onlyOwner {\n        _setBaseURI(newBaseURI);\n    }\n\n    function setFallbackURI(string calldata newFallbackURI) public virtual onlyOwner {\n        _setFallbackURI(newFallbackURI);\n    }\n\n    function setURISuffix(string calldata newURISuffix) public virtual onlyOwner {\n        _setURISuffix(newURISuffix);\n    }\n\n    function setURI(uint256 tokenId, string calldata newTokenURI) public virtual onlyOwner {\n        _setURI(tokenId, newTokenURI);\n    }\n\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) public virtual onlyOwner {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            _setURI(tokenIds[i], newTokenURIs[i]);\n        }\n    }\n\n    function lockBaseURI() public virtual onlyOwner {\n        _lockBaseURI();\n    }\n\n    function lockFallbackURI() public virtual onlyOwner {\n        _lockFallbackURI();\n    }\n\n    function lockURISuffix() public virtual onlyOwner {\n        _lockURISuffix();\n    }\n\n    function lockURIUntil(uint256 tokenId) public virtual onlyOwner {\n        _lockURIUntil(tokenId);\n    }\n}\n"
  },
  "flair-sdk:access/ownable/Ownable": {
    "fqn": "flair-sdk:access/ownable/Ownable",
    "version": "2.14.0",
    "address": {
      "5": "0xd9718C4796ca66a17313B7954634229b161c15dF",
      "goerli": "0xd9718C4796ca66a17313B7954634229b161c15dF"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Ownable",
      "sourceName": "src/access/ownable/Ownable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIERC173",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610410806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b03414414610051578063715018a6146100995780638da5cb5b146100a3578063f2fde38b146100d0575b600080fd5b604080518082018252600381527f322e78000000000000000000000000000000000000000000000000000000000060208201529051610090919061032a565b60405180910390f35b6100a16100e3565b005b6100ab610194565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610090565b6100a16100de36600461039d565b6101d9565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6101926000610285565b565b60006101d47fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161017f565b61028281610285565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905560405173ffffffffffffffffffffffffffffffffffffffff82169033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b600060208083528351808285015260005b818110156103575785810183015185820160400152820161033b565b81811115610369576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000602082840312156103af57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103d357600080fd5b939250505056fea2646970667358221220d077eec837dc072bf17adfcca40e53d8e105be5a76628bd8dbd1c6c16f06fbc164736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b03414414610051578063715018a6146100995780638da5cb5b146100a3578063f2fde38b146100d0575b600080fd5b604080518082018252600381527f322e78000000000000000000000000000000000000000000000000000000000060208201529051610090919061032a565b60405180910390f35b6100a16100e3565b005b6100ab610194565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610090565b6100a16100de36600461039d565b6101d9565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6101926000610285565b565b60006101d47fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610279576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640161017f565b61028281610285565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905560405173ffffffffffffffffffffffffffffffffffffffff82169033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b600060208083528351808285015260005b818110156103575785810183015185820160400152820161033b565b81811115610369576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000602082840312156103af57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146103d357600080fd5b939250505056fea2646970667358221220d077eec837dc072bf17adfcca40e53d8e105be5a76628bd8dbd1c6c16f06fbc164736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IERC173.sol\";\nimport \"./OwnableInternal.sol\";\n\n/**\n * @title ERC173 - Ownable\n * @notice Ownership access control facet based on EIP-173 which would be already included as a core facet in Flair's Diamond contract.\n *\n * @custom:type eip-2535-facet\n * @custom:category Access\n * @custom:provides-interfaces IERC173\n */\ncontract Ownable is IERC173, OwnableInternal {\n    function versionIERC173() external pure virtual returns (string memory) {\n        return \"2.x\";\n    }\n\n    /**\n     * @inheritdoc IERC173\n     */\n    function owner() public view virtual returns (address) {\n        return _owner();\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @inheritdoc IERC173\n     */\n    function transferOwnership(address account) public virtual onlyOwner {\n        _transferOwnership(account);\n    }\n}\n"
  },
  "flair-sdk:finance/royalty/Royalty": {
    "fqn": "flair-sdk:finance/royalty/Royalty",
    "version": "2.14.0",
    "address": {
      "5": "0xDAe948b02Ab72Ed6a6e1D0db16F580012f3ADf70",
      "goerli": "0xDAe948b02Ab72Ed6a6e1D0db16F580012f3ADf70"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Royalty",
      "sourceName": "src/finance/royalty/Royalty.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "DefaultRoyaltySet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "TokenRoyaltyRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "TokenRoyaltySet",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "defaultRoyalty",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyalty",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getFeeBps",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getFeeRecipients",
          "outputs": [
            {
              "internalType": "address payable[]",
              "name": "",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getFees",
          "outputs": [
            {
              "internalType": "address payable[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getRaribleV2Royalties",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "value",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IRaribleV2.Part[]",
              "name": "result",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getTokenRoyaltiesCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "getTokenRoyaltyByIndex",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyaltyConfig",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610a82806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637e9803421161005b5780637e980342146101d0578063b9c4d9fb146101e6578063cad96cca14610206578063d5a06d4c1461022657600080fd5b80630653aca51461008d5780630ebd4c7f146100e15780632a55205a146101015780637885fdc714610140575b600080fd5b6100a061009b3660046107fb565b610247565b604080518251815260208084015173ffffffffffffffffffffffffffffffffffffffff16908201529181015161ffff16908201526060015b60405180910390f35b6100f46100ef3660046107fb565b610273565b6040516100d8919061084f565b61011461010f366004610862565b6102d0565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016100d8565b6040805180820182526000808252602091820152815180830183527fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0755473ffffffffffffffffffffffffffffffffffffffff811680835261ffff740100000000000000000000000000000000000000009092048216928401928352845190815291511691810191909152016100d8565b6101d86102e9565b6040519081526020016100d8565b6101f96101f43660046107fb565b6102f8565b6040516100d891906108ca565b6102196102143660046107fb565b61036f565b6040516100d891906108dd565b6102396102343660046107fb565b61045d565b6040516100d8929190610950565b604080516060810182526000808252602082018190529181019190915261026d82610533565b92915050565b604080516001808252818301909252606091600091906020808301908036833701905050905060006102a78461271061061d565b91505080826000815181106102be576102be61097e565b60209081029190910101525092915050565b6000806102dd848461061d565b915091505b9250929050565b60006102f3610789565b905090565b6040805160018082528183019092526060916000919060208083019080368337019050509050600061032c8461271061061d565b50905080826000815181106103435761034361097e565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101525092915050565b604080516001808252818301909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816103865790505090506000806103be8461271061061d565b9150915081836000815181106103d6576103d661097e565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080836000815181106104285761042861097e565b6020026020010151602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff16815250505050919050565b60408051600180825281830190925260609182916000916020808301908036833750506040805160018082528183019092529293506000929150602080830190803683370190505090506000806104b68761271061061d565b9150915081846000815181106104ce576104ce61097e565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808360008151811061051c5761051c61097e565b602090810291909101015250919590945092505050565b60408051606081018252600080825260208201819052918101829052907fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0759061059c7fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea077856107b4565b60008181526001909301602090815260409384902084518086018652905473ffffffffffffffffffffffffffffffffffffffff808216835261ffff7401000000000000000000000000000000000000000090920482168385019081528751606081018952958652925116928401929092525116928101929092525092915050565b60008281527fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea076602052604081205481907fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0759073ffffffffffffffffffffffffffffffffffffffff16156106f157600085815260018201602052604090205473ffffffffffffffffffffffffffffffffffffffff811690612710906106dd9074010000000000000000000000000000000000000000900461ffff16876109ad565b6106e79190610a11565b92509250506102e2565b805473ffffffffffffffffffffffffffffffffffffffff16158015906107335750805474010000000000000000000000000000000000000000900461ffff1615155b1561077c57805473ffffffffffffffffffffffffffffffffffffffff811690612710906106dd9074010000000000000000000000000000000000000000900461ffff16876109ad565b5060009485945092505050565b60006102f37fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0776107c7565b60006107c083836107d1565b9392505050565b600061026d825490565b60008260000182815481106107e8576107e861097e565b9060005260206000200154905092915050565b60006020828403121561080d57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561084457815187529582019590820190600101610828565b509495945050505050565b6020815260006107c06020830184610814565b6000806040838503121561087557600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b8381101561084457815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610898565b6020815260006107c06020830184610884565b602080825282518282018190526000919060409081850190868401855b82811015610943578151805173ffffffffffffffffffffffffffffffffffffffff1685528601516bffffffffffffffffffffffff168685015292840192908501906001016108fa565b5091979650505050505050565b6040815260006109636040830185610884565b82810360208401526109758185610814565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610a47577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212206298c8b4ecdb5ae58f4a7bb60874325d2d03d9c91498f9bf342fd93539692b1364736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80637e9803421161005b5780637e980342146101d0578063b9c4d9fb146101e6578063cad96cca14610206578063d5a06d4c1461022657600080fd5b80630653aca51461008d5780630ebd4c7f146100e15780632a55205a146101015780637885fdc714610140575b600080fd5b6100a061009b3660046107fb565b610247565b604080518251815260208084015173ffffffffffffffffffffffffffffffffffffffff16908201529181015161ffff16908201526060015b60405180910390f35b6100f46100ef3660046107fb565b610273565b6040516100d8919061084f565b61011461010f366004610862565b6102d0565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152016100d8565b6040805180820182526000808252602091820152815180830183527fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0755473ffffffffffffffffffffffffffffffffffffffff811680835261ffff740100000000000000000000000000000000000000009092048216928401928352845190815291511691810191909152016100d8565b6101d86102e9565b6040519081526020016100d8565b6101f96101f43660046107fb565b6102f8565b6040516100d891906108ca565b6102196102143660046107fb565b61036f565b6040516100d891906108dd565b6102396102343660046107fb565b61045d565b6040516100d8929190610950565b604080516060810182526000808252602082018190529181019190915261026d82610533565b92915050565b604080516001808252818301909252606091600091906020808301908036833701905050905060006102a78461271061061d565b91505080826000815181106102be576102be61097e565b60209081029190910101525092915050565b6000806102dd848461061d565b915091505b9250929050565b60006102f3610789565b905090565b6040805160018082528183019092526060916000919060208083019080368337019050509050600061032c8461271061061d565b50905080826000815181106103435761034361097e565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101525092915050565b604080516001808252818301909252606091816020015b60408051808201909152600080825260208201528152602001906001900390816103865790505090506000806103be8461271061061d565b9150915081836000815181106103d6576103d661097e565b60200260200101516000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080836000815181106104285761042861097e565b6020026020010151602001906bffffffffffffffffffffffff1690816bffffffffffffffffffffffff16815250505050919050565b60408051600180825281830190925260609182916000916020808301908036833750506040805160018082528183019092529293506000929150602080830190803683370190505090506000806104b68761271061061d565b9150915081846000815181106104ce576104ce61097e565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808360008151811061051c5761051c61097e565b602090810291909101015250919590945092505050565b60408051606081018252600080825260208201819052918101829052907fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0759061059c7fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea077856107b4565b60008181526001909301602090815260409384902084518086018652905473ffffffffffffffffffffffffffffffffffffffff808216835261ffff7401000000000000000000000000000000000000000090920482168385019081528751606081018952958652925116928401929092525116928101929092525092915050565b60008281527fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea076602052604081205481907fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0759073ffffffffffffffffffffffffffffffffffffffff16156106f157600085815260018201602052604090205473ffffffffffffffffffffffffffffffffffffffff811690612710906106dd9074010000000000000000000000000000000000000000900461ffff16876109ad565b6106e79190610a11565b92509250506102e2565b805473ffffffffffffffffffffffffffffffffffffffff16158015906107335750805474010000000000000000000000000000000000000000900461ffff1615155b1561077c57805473ffffffffffffffffffffffffffffffffffffffff811690612710906106dd9074010000000000000000000000000000000000000000900461ffff16876109ad565b5060009485945092505050565b60006102f37fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea0776107c7565b60006107c083836107d1565b9392505050565b600061026d825490565b60008260000182815481106107e8576107e861097e565b9060005260206000200154905092915050565b60006020828403121561080d57600080fd5b5035919050565b600081518084526020808501945080840160005b8381101561084457815187529582019590820190600101610828565b509495945050505050565b6020815260006107c06020830184610814565b6000806040838503121561087557600080fd5b50508035926020909101359150565b600081518084526020808501945080840160005b8381101561084457815173ffffffffffffffffffffffffffffffffffffffff1687529582019590820190600101610898565b6020815260006107c06020830184610884565b602080825282518282018190526000919060409081850190868401855b82811015610943578151805173ffffffffffffffffffffffffffffffffffffffff1685528601516bffffffffffffffffffffffff168685015292840192908501906001016108fa565b5091979650505050505050565b6040815260006109636040830185610884565b82810360208401526109758185610814565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600082610a47577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212206298c8b4ecdb5ae58f4a7bb60874325d2d03d9c91498f9bf342fd93539692b1364736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"./RoyaltyInternal.sol\";\nimport \"./RoyaltyStorage.sol\";\nimport \"./IRoyalty.sol\";\n\n/**\n * @title ERC2981 - Royalty\n * @notice Provide standard on-chain EIP-2981 royalty support for ERC721 or ERC1155 tokens, and additional functions for Rarible and Foundation.\n *\n * @custom:type eip-2535-facet\n * @custom:category Finance\n * @custom:provides-interfaces IEIP2981 IRoyalty IRaribleV1 IRaribleV2 IFoundation IEIP2981RoyaltyOverride\n */\ncontract Royalty is IRoyalty, RoyaltyInternal {\n    using RoyaltyStorage for RoyaltyStorage.Layout;\n\n    function defaultRoyalty() external view virtual returns (TokenRoyalty memory) {\n        return RoyaltyStorage.layout().defaultRoyalty;\n    }\n\n    /**\n     * @dev EIP-2981\n     */\n    function royaltyInfo(uint256 tokenId, uint256 value) external view virtual returns (address, uint256) {\n        return _royaltyInfo(tokenId, value);\n    }\n\n    /**\n     * @dev IEIP2981RoyaltyOverride (Manifold)\n     */\n    function getTokenRoyaltiesCount() external view virtual override returns (uint256) {\n        return _getTokenRoyaltiesCount();\n    }\n\n    function getTokenRoyaltyByIndex(uint256 index) external view virtual override returns (TokenRoyaltyConfig memory) {\n        return _getTokenRoyaltyByIndex(index);\n    }\n\n    /**\n     * @dev IFoundation\n     */\n    function getFees(uint256 tokenId) external view virtual returns (address payable[] memory, uint256[] memory) {\n        address payable[] memory receivers = new address payable[](1);\n        uint256[] memory bps = new uint256[](1);\n\n        (address receiver, uint256 value) = _royaltyInfo(tokenId, 10000);\n\n        receivers[0] = payable(receiver);\n        bps[0] = value;\n\n        return (receivers, bps);\n    }\n\n    /**\n     * @dev IRaribleV1\n     */\n    function getFeeRecipients(uint256 tokenId) external view virtual returns (address payable[] memory) {\n        address payable[] memory receivers = new address payable[](1);\n\n        (address receiver, ) = _royaltyInfo(tokenId, 10000);\n        receivers[0] = payable(receiver);\n\n        return receivers;\n    }\n\n    function getFeeBps(uint256 tokenId) external view virtual returns (uint256[] memory) {\n        uint256[] memory bps = new uint256[](1);\n\n        (, uint256 value) = _royaltyInfo(tokenId, 10000);\n\n        bps[0] = value;\n\n        return bps;\n    }\n\n    /**\n     * @dev IRaribleV2\n     */\n    function getRaribleV2Royalties(uint256 tokenId) external view override returns (IRaribleV2.Part[] memory result) {\n        result = new IRaribleV2.Part[](1);\n\n        // Passing 10,000 as value will give us the bps (basis points, out of 10,000) of the royalty.\n        (address account, uint256 value) = _royaltyInfo(tokenId, 10000);\n\n        result[0].account = payable(account);\n        result[0].value = uint96(value);\n    }\n}\n"
  },
  "flair-sdk:finance/royalty/RoyaltyOwnable": {
    "fqn": "flair-sdk:finance/royalty/RoyaltyOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x61313B42A18146aAbdd0dFBFF3a50b97697c2A35",
      "goerli": "0x61313B42A18146aAbdd0dFBFF3a50b97697c2A35"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "RoyaltyOwnable",
      "sourceName": "src/finance/royalty/RoyaltyOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "DefaultRoyaltySet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "TokenRoyaltyRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "TokenRoyaltySet",
          "type": "event"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyalty",
              "name": "royalty",
              "type": "tuple"
            }
          ],
          "name": "setDefaultRoyalty",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyaltyConfig[]",
              "name": "royalties",
              "type": "tuple[]"
            }
          ],
          "name": "setTokenRoyalties",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610a49806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635136dcc71461003b578063ef60ceaf14610050575b600080fd5b61004e610049366004610761565b610063565b005b61004e61005e3660046107d6565b610167565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6101638282808060200260200160405190810160405280939291908181526020016000905b828210156101595761014a60608302860136819003810190610829565b8152602001906001019061012d565b5050505050610221565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610207576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b61021e610219368390038301836108b5565b6104a8565b50565b7fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea07560005b82518110156104a357600083828151811061026257610262610937565b60200260200101519050612710816040015161ffff16106102df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f496e76616c69642062707300000000000000000000000000000000000000000060448201526064016100ff565b602081015173ffffffffffffffffffffffffffffffffffffffff166103815780516000908152600184016020526040902080547fffffffffffffffffffff0000000000000000000000000000000000000000000016905580516103469060028501906105fe565b5080516040519081527fa2870857763bd9ae76c957f869f16b31c18dd3bb4c7b4d3a4496dc5c57c657f99060200160405180910390a1610490565b60408051808201825260208084015173ffffffffffffffffffffffffffffffffffffffff90811683528484015161ffff9081168385019081528651600090815260018a019094529490922092518354945190921674010000000000000000000000000000000000000000027fffffffffffffffffffff000000000000000000000000000000000000000000009094169116179190911790558051610429906002850190610613565b508051602080830151604080850151815194855273ffffffffffffffffffffffffffffffffffffffff9092169284019290925261ffff1682820152517f389b70fb0887f01e83784eb1c4c589f740eca53b00ed0f45e41db5d079719abb9181900360600190a15b508061049b81610995565b915050610245565b505050565b612710816020015161ffff161061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f496e76616c69642062707300000000000000000000000000000000000000000060448201526064016100ff565b604080518082018252825173ffffffffffffffffffffffffffffffffffffffff9081168083526020808601805161ffff9081169583018690527fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea07580547fffffffffffffffffffff0000000000000000000000000000000000000000000016909417740100000000000000000000000000000000000000009096029590951790925585519151855192909316825291909216908201527f2c5ea6e4103e78cb101e796fb2dace540362fc542cbff5145eaa24af7dd8fe41910160405180910390a150565b600061060a838361061f565b90505b92915050565b600061060a8383610712565b600081815260018301602052604081205480156107085760006106436001836109cd565b8554909150600090610657906001906109cd565b90508181146106bc57600086600001828154811061067757610677610937565b906000526020600020015490508087600001848154811061069a5761069a610937565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806106cd576106cd6109e4565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061060d565b600091505061060d565b60008181526001830160205260408120546107595750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561060d565b50600061060d565b6000806020838503121561077457600080fd5b823567ffffffffffffffff8082111561078c57600080fd5b818501915085601f8301126107a057600080fd5b8135818111156107af57600080fd5b8660206060830285010111156107c457600080fd5b60209290920196919550909350505050565b6000604082840312156107e857600080fd5b50919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461081257600080fd5b919050565b803561ffff8116811461081257600080fd5b60006060828403121561083b57600080fd5b6040516060810181811067ffffffffffffffff82111715610885577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282358152610898602084016107ee565b60208201526108a960408401610817565b60408201529392505050565b6000604082840312156108c757600080fd5b6040516040810181811067ffffffffffffffff82111715610911577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405261091d836107ee565b815261092b60208401610817565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109c6576109c6610966565b5060010190565b6000828210156109df576109df610966565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220e659c8f52ae2bb71785e6846986757f2f684b426a24e5c330fea5b756af695ce64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80635136dcc71461003b578063ef60ceaf14610050575b600080fd5b61004e610049366004610761565b610063565b005b61004e61005e3660046107d6565b610167565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6101638282808060200260200160405190810160405280939291908181526020016000905b828210156101595761014a60608302860136819003810190610829565b8152602001906001019061012d565b5050505050610221565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610207576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b61021e610219368390038301836108b5565b6104a8565b50565b7fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea07560005b82518110156104a357600083828151811061026257610262610937565b60200260200101519050612710816040015161ffff16106102df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f496e76616c69642062707300000000000000000000000000000000000000000060448201526064016100ff565b602081015173ffffffffffffffffffffffffffffffffffffffff166103815780516000908152600184016020526040902080547fffffffffffffffffffff0000000000000000000000000000000000000000000016905580516103469060028501906105fe565b5080516040519081527fa2870857763bd9ae76c957f869f16b31c18dd3bb4c7b4d3a4496dc5c57c657f99060200160405180910390a1610490565b60408051808201825260208084015173ffffffffffffffffffffffffffffffffffffffff90811683528484015161ffff9081168385019081528651600090815260018a019094529490922092518354945190921674010000000000000000000000000000000000000000027fffffffffffffffffffff000000000000000000000000000000000000000000009094169116179190911790558051610429906002850190610613565b508051602080830151604080850151815194855273ffffffffffffffffffffffffffffffffffffffff9092169284019290925261ffff1682820152517f389b70fb0887f01e83784eb1c4c589f740eca53b00ed0f45e41db5d079719abb9181900360600190a15b508061049b81610995565b915050610245565b505050565b612710816020015161ffff161061051b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f496e76616c69642062707300000000000000000000000000000000000000000060448201526064016100ff565b604080518082018252825173ffffffffffffffffffffffffffffffffffffffff9081168083526020808601805161ffff9081169583018690527fad41a88d044cfe4c318a78970a1f122259b5b1a56fdee398e17d1e83109ea07580547fffffffffffffffffffff0000000000000000000000000000000000000000000016909417740100000000000000000000000000000000000000009096029590951790925585519151855192909316825291909216908201527f2c5ea6e4103e78cb101e796fb2dace540362fc542cbff5145eaa24af7dd8fe41910160405180910390a150565b600061060a838361061f565b90505b92915050565b600061060a8383610712565b600081815260018301602052604081205480156107085760006106436001836109cd565b8554909150600090610657906001906109cd565b90508181146106bc57600086600001828154811061067757610677610937565b906000526020600020015490508087600001848154811061069a5761069a610937565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806106cd576106cd6109e4565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061060d565b600091505061060d565b60008181526001830160205260408120546107595750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561060d565b50600061060d565b6000806020838503121561077457600080fd5b823567ffffffffffffffff8082111561078c57600080fd5b818501915085601f8301126107a057600080fd5b8135818111156107af57600080fd5b8660206060830285010111156107c457600080fd5b60209290920196919550909350505050565b6000604082840312156107e857600080fd5b50919050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461081257600080fd5b919050565b803561ffff8116811461081257600080fd5b60006060828403121561083b57600080fd5b6040516060810181811067ffffffffffffffff82111715610885577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405282358152610898602084016107ee565b60208201526108a960408401610817565b60408201529392505050565b6000604082840312156108c757600080fd5b6040516040810181811067ffffffffffffffff82111715610911577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405261091d836107ee565b815261092b60208401610817565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109c6576109c6610966565b5060010190565b6000828210156109df576109df610966565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220e659c8f52ae2bb71785e6846986757f2f684b426a24e5c330fea5b756af695ce64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\nimport \"./RoyaltyStorage.sol\";\nimport \"./RoyaltyInternal.sol\";\nimport \"./IRoyaltyAdmin.sol\";\n\n/**\n * @title ERC2981 - Royalty - Admin - Ownable\n * @notice Allow contract owner to manage token royalties based on EIP-2981 standard.\n *\n * @custom:type eip-2535-facet\n * @custom:category Finance\n * @custom:peer-dependencies IRoyalty IEIP2981\n * @custom:provides-interfaces IRoyaltyAdmin\n */\ncontract RoyaltyOwnable is IRoyaltyAdmin, RoyaltyInternal, OwnableInternal {\n    using RoyaltyStorage for RoyaltyStorage.Layout;\n\n    function setTokenRoyalties(TokenRoyaltyConfig[] calldata royalties) external override onlyOwner {\n        _setTokenRoyalties(royalties);\n    }\n\n    function setDefaultRoyalty(TokenRoyalty calldata royalty) external override onlyOwner {\n        _setDefaultRoyalty(royalty);\n    }\n}\n"
  },
  "flair-sdk:finance/sales/TieredSalesOwnable": {
    "fqn": "flair-sdk:finance/sales/TieredSalesOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x4080e4062818B15902706751269b9527984b8E8D",
      "goerli": "0x4080e4062818B15902706751269b9527984b8E8D"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "TieredSalesOwnable",
      "sourceName": "src/finance/sales/TieredSalesOwnable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "tier",
              "type": "tuple"
            }
          ],
          "name": "configureTiering",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tierIds",
              "type": "uint256[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier[]",
              "name": "tiers",
              "type": "tuple[]"
            }
          ],
          "name": "configureTiering",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b506107b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631ba8e5d61461003b578063bb24041214610050575b600080fd5b61004e610049366004610480565b610063565b005b61004e61005e3660046104d8565b610116565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61011282826101c8565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b6101c284848484610422565b50505050565b60008281527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf60205260409020547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9060e08301351015610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4c4f5745525f5448414e5f4d494e54454400000000000000000000000000000060448201526064016100ff565b60008381526003820160205260409020600601541561031c57600083815260048201602052604090205460c0830135101561031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4c4f575f524553455256455f414d4f554e54000000000000000000000000000060448201526064016100ff565b6000838152600482016020526040902054156103b3576000838152600382016020526040902060040154608083013510156103b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4c4f575f4d41585f5045525f57414c4c4554000000000000000000000000000060448201526064016100ff565b6000838152600382016020526040812060060154600183018054919290916103dc9084906105d0565b90915550506000838152600382016020526040902082906103fd8282610613565b9050508160c0013581600101600082825461041891906106fe565b9091555050505050565b60005b838110156104795761046785858381811061044257610442610716565b9050602002013584848481811061045b5761045b610716565b905061012002016101c8565b8061047181610745565b915050610425565b5050505050565b60008082840361014081121561049557600080fd5b833592506101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156104ca57600080fd5b506020830190509250929050565b600080600080604085870312156104ee57600080fd5b843567ffffffffffffffff8082111561050657600080fd5b818701915087601f83011261051a57600080fd5b81358181111561052957600080fd5b8860208260051b850101111561053e57600080fd5b60209283019650945090860135908082111561055957600080fd5b818701915087601f83011261056d57600080fd5b81358181111561057c57600080fd5b8860206101208302850101111561059257600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156105e2576105e26105a1565b500390565b6000813573ffffffffffffffffffffffffffffffffffffffff8116811461060d57600080fd5b92915050565b8135815560208201356001820155610676610630604084016105e7565b6002830173ffffffffffffffffffffffffffffffffffffffff82167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161781555050565b606082013560038201556080820135600482015560a0820135600582015560c0820135600682015560e082013560078201556101126106b861010084016105e7565b6008830173ffffffffffffffffffffffffffffffffffffffff82167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161781555050565b60008219821115610711576107116105a1565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610776576107766105a1565b506001019056fea264697066735822122050519c65b32aa77a4e56f3ac87f93bc2d7ee36bd57fbbb162eaeb4c0422c275f64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631ba8e5d61461003b578063bb24041214610050575b600080fd5b61004e610049366004610480565b610063565b005b61004e61005e3660046104d8565b610116565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610108576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61011282826101c8565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100ff565b6101c284848484610422565b50505050565b60008281527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf60205260409020547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9060e08301351015610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4c4f5745525f5448414e5f4d494e54454400000000000000000000000000000060448201526064016100ff565b60008381526003820160205260409020600601541561031c57600083815260048201602052604090205460c0830135101561031c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4c4f575f524553455256455f414d4f554e54000000000000000000000000000060448201526064016100ff565b6000838152600482016020526040902054156103b3576000838152600382016020526040902060040154608083013510156103b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4c4f575f4d41585f5045525f57414c4c4554000000000000000000000000000060448201526064016100ff565b6000838152600382016020526040812060060154600183018054919290916103dc9084906105d0565b90915550506000838152600382016020526040902082906103fd8282610613565b9050508160c0013581600101600082825461041891906106fe565b9091555050505050565b60005b838110156104795761046785858381811061044257610442610716565b9050602002013584848481811061045b5761045b610716565b905061012002016101c8565b8061047181610745565b915050610425565b5050505050565b60008082840361014081121561049557600080fd5b833592506101207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156104ca57600080fd5b506020830190509250929050565b600080600080604085870312156104ee57600080fd5b843567ffffffffffffffff8082111561050657600080fd5b818701915087601f83011261051a57600080fd5b81358181111561052957600080fd5b8860208260051b850101111561053e57600080fd5b60209283019650945090860135908082111561055957600080fd5b818701915087601f83011261056d57600080fd5b81358181111561057c57600080fd5b8860206101208302850101111561059257600080fd5b95989497505060200194505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156105e2576105e26105a1565b500390565b6000813573ffffffffffffffffffffffffffffffffffffffff8116811461060d57600080fd5b92915050565b8135815560208201356001820155610676610630604084016105e7565b6002830173ffffffffffffffffffffffffffffffffffffffff82167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161781555050565b606082013560038201556080820135600482015560a0820135600582015560c0820135600682015560e082013560078201556101126106b861010084016105e7565b6008830173ffffffffffffffffffffffffffffffffffffffff82167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161781555050565b60008219821115610711576107116105a1565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610776576107766105a1565b506001019056fea264697066735822122050519c65b32aa77a4e56f3ac87f93bc2d7ee36bd57fbbb162eaeb4c0422c275f64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ITieredSalesAdmin.sol\";\nimport \"./TieredSalesInternal.sol\";\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\n/**\n * @title Tiered Sales - Admin - Ownable\n * @notice Allow contract owner to manage sale tiers.\n *\n * @custom:type eip-2535-facet\n * @custom:category NFTs\n * @custom:peer-dependencies ITieredSales\n * @custom:provides-interfaces ITieredSalesAdmin\n */\ncontract TieredSalesOwnable is ITieredSalesAdmin, OwnableInternal, TieredSalesInternal {\n    function configureTiering(uint256 tierId, ITieredSalesInternal.Tier calldata tier) external override onlyOwner {\n        super._configureTiering(tierId, tier);\n    }\n\n    function configureTiering(uint256[] calldata tierIds, ITieredSalesInternal.Tier[] calldata tiers)\n        external\n        override\n        onlyOwner\n    {\n        super._configureTiering(tierIds, tiers);\n    }\n}\n"
  },
  "flair-sdk:common/UnorderedForwarder": {
    "fqn": "flair-sdk:common/UnorderedForwarder",
    "version": "2.14.0",
    "address": {
      "5": "0xd1731c401FDe35E5B83643EfB47562fd7c5ded6F",
      "goerli": "0xd1731c401FDe35E5B83643EfB47562fd7c5ded6F"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "UnorderedForwarder",
      "sourceName": "src/common/UnorderedForwarder.sol",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiresAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UnorderedForwarder.MetaTransaction[]",
              "name": "mtxs",
              "type": "tuple[]"
            },
            {
              "internalType": "bytes[]",
              "name": "signatures",
              "type": "bytes[]"
            }
          ],
          "name": "batchExecute",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "returnResults",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiresAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UnorderedForwarder.MetaTransaction",
              "name": "mtx",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "name": "execute",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxGasPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "expiresAt",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UnorderedForwarder.MetaTransaction",
              "name": "mtx",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "name": "verify",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "mtxHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x61014060405234801561001157600080fd5b5060408051808201825260128152712ab737b93232b932b22337b93bb0b93232b960711b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100fd8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c0526101205250506001600055506101179050565b60805160a05160c05160e051610100516101205161122061016660003960006109a0015260006109ef015260006109ca015260006109230152600061094d0152600061097701526112206000f3fe6080604052600436106100345760003560e01c8063b0565b2714610039578063b122ea941461006c578063cd74662f1461008c575b600080fd5b34801561004557600080fd5b50610059610054366004610d6b565b6100ac565b6040519081526020015b60405180910390f35b61007f61007a366004610e50565b610327565b6040516100639190610f18565b61009f61009a366004610d6b565b61055d565b6040516100639190610f98565b60006101a27f2bbaa6c701d9ecd9e324adef5727bb11883e2c24df1dd4c8f19e4e038b3734666100df6020870187610fab565b6100ef6040880160208901610fab565b6040880135606089013560808a013560a08b013560c08c013561011560e08e018e610fe1565b604051610123929190611046565b60408051918290038220602083019a909a5273ffffffffffffffffffffffffffffffffffffffff98891690820152969095166060870152608086019390935260a085019190915260c084015260e08301526101008201526101208101919091526101400160405160208183030381529060405280519060200120610677565b9050428460a00135116101fc5760405162461bcd60e51b815260206004820152600b60248201527f4657445f4558504952454400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6102096020850185610fab565b73ffffffffffffffffffffffffffffffffffffffff1661026184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106e69050565b73ffffffffffffffffffffffffffffffffffffffff16146102c45760405162461bcd60e51b815260206004820152601560248201527f4657445f494e56414c49445f5349474e4154555245000000000000000000000060448201526064016101f3565b600081815260016020526040902054156103205760405162461bcd60e51b815260206004820152600c60248201527f4657445f5245504c41594544000000000000000000000000000000000000000060448201526064016101f3565b9392505050565b606060026000540361037b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101f3565b6002600090815561038c3447611085565b90508483146103dd5760405162461bcd60e51b815260206004820152601760248201527f4657445f4d49534d415443485f5349474e41545552455300000000000000000060448201526064016101f3565b8467ffffffffffffffff8111156103f6576103f661109c565b60405190808252806020026020018201604052801561042957816020015b60608152602001906001900390816104145790505b50915060005b858110156104b55761048787878381811061044c5761044c6110cb565b905060200281019061045e91906110fa565b868684818110610470576104706110cb565b90506020028101906104829190610fe1565b61070a565b838281518110610499576104996110cb565b6020026020010181905250806104ae90611138565b905061042f565b5060004734116104c557346104c7565b475b905080156104fe57604051339082156108fc029083906000818181858888f193505050501580156104fc573d6000803e3d6000fd5b505b504781111561054f5760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101f3565b506001600055949350505050565b60606002600054036105b15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101f3565b600260009081556105c23447611085565b90506105cf85858561070a565b915060004734116105e057346105e2565b475b9050801561061957604051339082156108fc029083906000818181858888f19350505050158015610617573d6000803e3d6000fd5b505b504781111561066a5760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101f3565b5060016000559392505050565b60006106e0610684610909565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006106f58585610a3d565b9150915061070281610a82565b509392505050565b60603a846060013511158015610724575083608001353a11155b6107705760405162461bcd60e51b815260206004820152600f60248201527f4657445f494e56414c49445f474153000000000000000000000000000000000060448201526064016101f3565b47846040013511156107c45760405162461bcd60e51b815260206004820152601160248201527f4657445f494e56414c49445f56414c554500000000000000000000000000000060448201526064016101f3565b60006107d18585856100ac565b6000818152600160209081526040808320439055929350909182916107fa918901908901610fab565b73ffffffffffffffffffffffffffffffffffffffff16604088013561082260e08a018a610fe1565b61082f60208c018c610fab565b60405160200161084193929190611170565b60408051601f198184030181529082905261085b916111a9565b60006040518083038185875af1925050503d8060008114610898576040519150601f19603f3d011682016040523d82523d6000602084013e61089d565b606091505b5091509150816108ff578051156108b75780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4657445f43414c4c5f4641494c4544000000000000000000000000000000000060448201526064016101f3565b9695505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561096f57507f000000000000000000000000000000000000000000000000000000000000000046145b1561099957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103610a735760208301516040840151606085015160001a610a6787828585610c71565b94509450505050610a7b565b506000905060025b9250929050565b6000816004811115610a9657610a966111bb565b03610a9e5750565b6001816004811115610ab257610ab26111bb565b03610aff5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101f3565b6002816004811115610b1357610b136111bb565b03610b605760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101f3565b6003816004811115610b7457610b746111bb565b03610be75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016101f3565b6004816004811115610bfb57610bfb6111bb565b03610c6e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016101f3565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610ca85750600090506003610d62565b8460ff16601b14158015610cc057508460ff16601c14155b15610cd15750600090506004610d62565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d25573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff8116610d5b57600060019250925050610d62565b9150600090505b94509492505050565b600080600060408486031215610d8057600080fd5b833567ffffffffffffffff80821115610d9857600080fd5b908501906101008288031215610dad57600080fd5b90935060208501359080821115610dc357600080fd5b818601915086601f830112610dd757600080fd5b813581811115610de657600080fd5b876020828501011115610df857600080fd5b6020830194508093505050509250925092565b60008083601f840112610e1d57600080fd5b50813567ffffffffffffffff811115610e3557600080fd5b6020830191508360208260051b8501011115610a7b57600080fd5b60008060008060408587031215610e6657600080fd5b843567ffffffffffffffff80821115610e7e57600080fd5b610e8a88838901610e0b565b90965094506020870135915080821115610ea357600080fd5b50610eb087828801610e0b565b95989497509550505050565b60005b83811015610ed7578181015183820152602001610ebf565b83811115610ee6576000848401525b50505050565b60008151808452610f04816020860160208601610ebc565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610f8b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610f79858351610eec565b94509285019290850190600101610f3f565b5092979650505050505050565b6020815260006103206020830184610eec565b600060208284031215610fbd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461032057600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261101657600080fd5b83018035915067ffffffffffffffff82111561103157600080fd5b602001915036819003821315610a7b57600080fd5b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561109757611097611056565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183360301811261112e57600080fd5b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361116957611169611056565b5060010190565b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b6000825161112e818460208701610ebc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122047b1bb294939cdaa3976ca0702a373cd87880255989cd0b8f08fd1fe30b5124a64736f6c634300080f0033",
      "deployedBytecode": "0x6080604052600436106100345760003560e01c8063b0565b2714610039578063b122ea941461006c578063cd74662f1461008c575b600080fd5b34801561004557600080fd5b50610059610054366004610d6b565b6100ac565b6040519081526020015b60405180910390f35b61007f61007a366004610e50565b610327565b6040516100639190610f18565b61009f61009a366004610d6b565b61055d565b6040516100639190610f98565b60006101a27f2bbaa6c701d9ecd9e324adef5727bb11883e2c24df1dd4c8f19e4e038b3734666100df6020870187610fab565b6100ef6040880160208901610fab565b6040880135606089013560808a013560a08b013560c08c013561011560e08e018e610fe1565b604051610123929190611046565b60408051918290038220602083019a909a5273ffffffffffffffffffffffffffffffffffffffff98891690820152969095166060870152608086019390935260a085019190915260c084015260e08301526101008201526101208101919091526101400160405160208183030381529060405280519060200120610677565b9050428460a00135116101fc5760405162461bcd60e51b815260206004820152600b60248201527f4657445f4558504952454400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6102096020850185610fab565b73ffffffffffffffffffffffffffffffffffffffff1661026184848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086939250506106e69050565b73ffffffffffffffffffffffffffffffffffffffff16146102c45760405162461bcd60e51b815260206004820152601560248201527f4657445f494e56414c49445f5349474e4154555245000000000000000000000060448201526064016101f3565b600081815260016020526040902054156103205760405162461bcd60e51b815260206004820152600c60248201527f4657445f5245504c41594544000000000000000000000000000000000000000060448201526064016101f3565b9392505050565b606060026000540361037b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101f3565b6002600090815561038c3447611085565b90508483146103dd5760405162461bcd60e51b815260206004820152601760248201527f4657445f4d49534d415443485f5349474e41545552455300000000000000000060448201526064016101f3565b8467ffffffffffffffff8111156103f6576103f661109c565b60405190808252806020026020018201604052801561042957816020015b60608152602001906001900390816104145790505b50915060005b858110156104b55761048787878381811061044c5761044c6110cb565b905060200281019061045e91906110fa565b868684818110610470576104706110cb565b90506020028101906104829190610fe1565b61070a565b838281518110610499576104996110cb565b6020026020010181905250806104ae90611138565b905061042f565b5060004734116104c557346104c7565b475b905080156104fe57604051339082156108fc029083906000818181858888f193505050501580156104fc573d6000803e3d6000fd5b505b504781111561054f5760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101f3565b506001600055949350505050565b60606002600054036105b15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101f3565b600260009081556105c23447611085565b90506105cf85858561070a565b915060004734116105e057346105e2565b475b9050801561061957604051339082156108fc029083906000818181858888f19350505050158015610617573d6000803e3d6000fd5b505b504781111561066a5760405162461bcd60e51b815260206004820152600c60248201527f4657445f4554485f4c45414b000000000000000000000000000000000000000060448201526064016101f3565b5060016000559392505050565b60006106e0610684610909565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b60008060006106f58585610a3d565b9150915061070281610a82565b509392505050565b60603a846060013511158015610724575083608001353a11155b6107705760405162461bcd60e51b815260206004820152600f60248201527f4657445f494e56414c49445f474153000000000000000000000000000000000060448201526064016101f3565b47846040013511156107c45760405162461bcd60e51b815260206004820152601160248201527f4657445f494e56414c49445f56414c554500000000000000000000000000000060448201526064016101f3565b60006107d18585856100ac565b6000818152600160209081526040808320439055929350909182916107fa918901908901610fab565b73ffffffffffffffffffffffffffffffffffffffff16604088013561082260e08a018a610fe1565b61082f60208c018c610fab565b60405160200161084193929190611170565b60408051601f198184030181529082905261085b916111a9565b60006040518083038185875af1925050503d8060008114610898576040519150601f19603f3d011682016040523d82523d6000602084013e61089d565b606091505b5091509150816108ff578051156108b75780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4657445f43414c4c5f4641494c4544000000000000000000000000000000000060448201526064016101f3565b9695505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561096f57507f000000000000000000000000000000000000000000000000000000000000000046145b1561099957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103610a735760208301516040840151606085015160001a610a6787828585610c71565b94509450505050610a7b565b506000905060025b9250929050565b6000816004811115610a9657610a966111bb565b03610a9e5750565b6001816004811115610ab257610ab26111bb565b03610aff5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101f3565b6002816004811115610b1357610b136111bb565b03610b605760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101f3565b6003816004811115610b7457610b746111bb565b03610be75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016101f3565b6004816004811115610bfb57610bfb6111bb565b03610c6e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f756500000000000000000000000000000000000000000000000000000000000060648201526084016101f3565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610ca85750600090506003610d62565b8460ff16601b14158015610cc057508460ff16601c14155b15610cd15750600090506004610d62565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d25573d6000803e3d6000fd5b5050604051601f19015191505073ffffffffffffffffffffffffffffffffffffffff8116610d5b57600060019250925050610d62565b9150600090505b94509492505050565b600080600060408486031215610d8057600080fd5b833567ffffffffffffffff80821115610d9857600080fd5b908501906101008288031215610dad57600080fd5b90935060208501359080821115610dc357600080fd5b818601915086601f830112610dd757600080fd5b813581811115610de657600080fd5b876020828501011115610df857600080fd5b6020830194508093505050509250925092565b60008083601f840112610e1d57600080fd5b50813567ffffffffffffffff811115610e3557600080fd5b6020830191508360208260051b8501011115610a7b57600080fd5b60008060008060408587031215610e6657600080fd5b843567ffffffffffffffff80821115610e7e57600080fd5b610e8a88838901610e0b565b90965094506020870135915080821115610ea357600080fd5b50610eb087828801610e0b565b95989497509550505050565b60005b83811015610ed7578181015183820152602001610ebf565b83811115610ee6576000848401525b50505050565b60008151808452610f04816020860160208601610ebc565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610f8b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610f79858351610eec565b94509285019290850190600101610f3f565b5092979650505050505050565b6020815260006103206020830184610eec565b600060208284031215610fbd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461032057600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261101657600080fd5b83018035915067ffffffffffffffff82111561103157600080fd5b602001915036819003821315610a7b57600080fd5b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561109757611097611056565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0183360301811261112e57600080fd5b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361116957611169611056565b5060010190565b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b6000825161112e818460208701610ebc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122047b1bb294939cdaa3976ca0702a373cd87880255989cd0b8f08fd1fe30b5124a64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract UnorderedForwarder is EIP712, ReentrancyGuard {\n    using ECDSA for bytes32;\n\n    struct MetaTransaction {\n        address from;\n        address to;\n        uint256 value;\n        uint256 minGasPrice;\n        uint256 maxGasPrice;\n        uint256 expiresAt;\n        uint256 nonce;\n        bytes data;\n    }\n\n    bytes32 private constant _TYPEHASH =\n        keccak256(\n            \"MetaTransaction(address from,address to,uint256 value,uint256 minGasPrice,uint256 maxGasPrice,uint256 expiresAt,uint256 nonce,bytes data)\"\n        );\n\n    mapping(bytes32 => uint256) mtxHashToExecutedBlockNumber;\n\n    constructor() EIP712(\"UnorderedForwarder\", \"0.0.1\") {}\n\n    /// @dev Refunds up to `msg.value` leftover ETH at the end of the call.\n    modifier refundsAttachedEth() {\n        _;\n        uint256 remainingBalance = msg.value > address(this).balance ? address(this).balance : msg.value;\n        if (remainingBalance > 0) {\n            payable(msg.sender).transfer(remainingBalance);\n        }\n    }\n\n    /// @dev Ensures that the ETH balance of `this` does not go below the\n    ///      initial ETH balance before the call (excluding ETH attached to the call).\n    modifier doesNotReduceEthBalance() {\n        uint256 initialBalance = address(this).balance - msg.value;\n        _;\n        require(initialBalance <= address(this).balance, \"FWD_ETH_LEAK\");\n    }\n\n    function verify(MetaTransaction calldata mtx, bytes calldata signature) public view returns (bytes32 mtxHash) {\n        mtxHash = _hashTypedDataV4(\n            keccak256(\n                abi.encode(\n                    _TYPEHASH,\n                    mtx.from,\n                    mtx.to,\n                    mtx.value,\n                    mtx.minGasPrice,\n                    mtx.maxGasPrice,\n                    mtx.expiresAt,\n                    mtx.nonce,\n                    keccak256(mtx.data)\n                )\n            )\n        );\n\n        // Must not be expired.\n        require(mtx.expiresAt > block.timestamp, \"FWD_EXPIRED\");\n\n        // Must be signed by the signer.\n        require(mtxHash.recover(signature) == mtx.from, \"FWD_INVALID_SIGNATURE\");\n\n        // Transaction must not have been already executed.\n        require(mtxHashToExecutedBlockNumber[mtxHash] == 0, \"FWD_REPLAYED\");\n\n        return mtxHash;\n    }\n\n    function execute(MetaTransaction calldata mtx, bytes calldata signature)\n        public\n        payable\n        nonReentrant\n        doesNotReduceEthBalance\n        refundsAttachedEth\n        returns (bytes memory)\n    {\n        return _execute(mtx, signature);\n    }\n\n    function batchExecute(MetaTransaction[] calldata mtxs, bytes[] calldata signatures)\n        public\n        payable\n        nonReentrant\n        doesNotReduceEthBalance\n        refundsAttachedEth\n        returns (bytes[] memory returnResults)\n    {\n        require(mtxs.length == signatures.length, \"FWD_MISMATCH_SIGNATURES\");\n\n        returnResults = new bytes[](mtxs.length);\n\n        for (uint256 i = 0; i < mtxs.length; ++i) {\n            returnResults[i] = _execute(mtxs[i], signatures[i]);\n        }\n    }\n\n    function _execute(MetaTransaction calldata mtx, bytes calldata signature) internal returns (bytes memory) {\n        // Must have a valid gas price.\n        require(mtx.minGasPrice <= tx.gasprice && tx.gasprice <= mtx.maxGasPrice, \"FWD_INVALID_GAS\");\n\n        // Must have enough ETH.\n        require(mtx.value <= address(this).balance, \"FWD_INVALID_VALUE\");\n\n        bytes32 mtxHash = verify(mtx, signature);\n\n        mtxHashToExecutedBlockNumber[mtxHash] = block.number;\n\n        (bool success, bytes memory returndata) = mtx.to.call{ value: mtx.value }(abi.encodePacked(mtx.data, mtx.from));\n\n        if (!success) {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(\"FWD_CALL_FAILED\");\n            }\n        }\n\n        return returndata;\n    }\n}\n"
  },
  "flair-sdk:finance/withdraw/Withdrawable": {
    "fqn": "flair-sdk:finance/withdraw/Withdrawable",
    "version": "2.14.0",
    "address": {
      "5": "0x71a6b649c8E4a69758601457E261bd43C22BF41c",
      "goerli": "0x71a6b649c8E4a69758601457E261bd43C22BF41c"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Withdrawable",
      "sourceName": "src/finance/withdraw/Withdrawable.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrWithdrawImpossible",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawModeLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyRecipient",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawRecipientLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "_mode",
              "type": "uint8"
            }
          ],
          "name": "WithdrawModeChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawModeLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawPowerRevoked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "WithdrawRecipientChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawRecipientLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "claimTokens",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "claimTokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawMode",
          "outputs": [
            {
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawModeLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawPowerRevoked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawRecipientLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610aa4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063af121f5411610050578063af121f541461015f578063dcbe353f146101a2578063de6d6d96146101cf57600080fd5b80632d00b5871461007757806349561cb9146100ca5780636057e0ec1461011b575b600080fd5b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe35474010000000000000000000000000000000000000000900460ff166040516100c191906107d2565b60405180910390f35b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe35477010000000000000000000000000000000000000000000000900460ff165b60405190151581526020016100c1565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe354760100000000000000000000000000000000000000000000900460ff1661010b565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe3547501000000000000000000000000000000000000000000900460ff1661010b565b6101aa6101e9565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c1565b6101e26101dd36600461085f565b6101f3565b005b905090565b60006101e4610205565b6101ff84848484610245565b50505050565b60007f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe35b5473ffffffffffffffffffffffffffffffffffffffff16919050565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe3805460039074010000000000000000000000000000000000000000900460ff1681811115610296576102966107a3565b036102cd576040517fd4f0dd9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815474010000000000000000000000000000000000000000900460ff1660038111156102fd576102fd6107a3565b0361035657805473ffffffffffffffffffffffffffffffffffffffff163314610351576040517e2311a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e1565b6000815474010000000000000000000000000000000000000000900460ff166003811115610386576103866107a3565b036103e15733610394610617565b73ffffffffffffffffffffffffffffffffffffffff16146103e1576040517fe3c30fea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547501000000000000000000000000000000000000000000900460ff1615610436576040517fd4f0dd9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b848110156105d2576000868683818110610455576104556108cb565b905060200201602081019061046a9190610923565b73ffffffffffffffffffffffffffffffffffffffff16036104c6576104c184848381811061049a5761049a6108cb565b855473ffffffffffffffffffffffffffffffffffffffff169260209091020135905061063f565b6105c0565b8585828181106104d8576104d86108cb565b90506020020160208101906104ed9190610923565b825473ffffffffffffffffffffffffffffffffffffffff9182169163a9059cbb9116868685818110610521576105216108cb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff909416600485015260200291909101356024830152506044016020604051808303816000875af115801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610945565b505b806105ca81610967565b915050610439565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a58585858560405161060894939291906109c6565b60405180910390a15050505050565b60007fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4610229565b804710156106ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610708576040519150601f19603f3d011682016040523d82523d6000602084013e61070d565b606091505b505090508061079e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016106a5565b505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081016004831061080d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60008083601f84011261082557600080fd5b50813567ffffffffffffffff81111561083d57600080fd5b6020830191508360208260051b850101111561085857600080fd5b9250929050565b6000806000806040858703121561087557600080fd5b843567ffffffffffffffff8082111561088d57600080fd5b61089988838901610813565b909650945060208701359150808211156108b257600080fd5b506108bf87828801610813565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461091e57600080fd5b919050565b60006020828403121561093557600080fd5b61093e826108fa565b9392505050565b60006020828403121561095757600080fd5b8151801515811461093e57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b87811015610a145773ffffffffffffffffffffffffffffffffffffffff6109ff846108fa565b168252602092830192909101906001016109d9565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851115610a4d57600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea264697066735822122080a41375d1598e637ac5a3feb7a07f9bc19cc31f90f0ccc78fb54d27270fee5d64736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063af121f5411610050578063af121f541461015f578063dcbe353f146101a2578063de6d6d96146101cf57600080fd5b80632d00b5871461007757806349561cb9146100ca5780636057e0ec1461011b575b600080fd5b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe35474010000000000000000000000000000000000000000900460ff166040516100c191906107d2565b60405180910390f35b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe35477010000000000000000000000000000000000000000000000900460ff165b60405190151581526020016100c1565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe354760100000000000000000000000000000000000000000000900460ff1661010b565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe3547501000000000000000000000000000000000000000000900460ff1661010b565b6101aa6101e9565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100c1565b6101e26101dd36600461085f565b6101f3565b005b905090565b60006101e4610205565b6101ff84848484610245565b50505050565b60007f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe35b5473ffffffffffffffffffffffffffffffffffffffff16919050565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe3805460039074010000000000000000000000000000000000000000900460ff1681811115610296576102966107a3565b036102cd576040517fd4f0dd9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001815474010000000000000000000000000000000000000000900460ff1660038111156102fd576102fd6107a3565b0361035657805473ffffffffffffffffffffffffffffffffffffffff163314610351576040517e2311a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e1565b6000815474010000000000000000000000000000000000000000900460ff166003811115610386576103866107a3565b036103e15733610394610617565b73ffffffffffffffffffffffffffffffffffffffff16146103e1576040517fe3c30fea00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547501000000000000000000000000000000000000000000900460ff1615610436576040517fd4f0dd9700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b848110156105d2576000868683818110610455576104556108cb565b905060200201602081019061046a9190610923565b73ffffffffffffffffffffffffffffffffffffffff16036104c6576104c184848381811061049a5761049a6108cb565b855473ffffffffffffffffffffffffffffffffffffffff169260209091020135905061063f565b6105c0565b8585828181106104d8576104d86108cb565b90506020020160208101906104ed9190610923565b825473ffffffffffffffffffffffffffffffffffffffff9182169163a9059cbb9116868685818110610521576105216108cb565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16815273ffffffffffffffffffffffffffffffffffffffff909416600485015260200291909101356024830152506044016020604051808303816000875af115801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be9190610945565b505b806105ca81610967565b915050610439565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a58585858560405161060894939291906109c6565b60405180910390a15050505050565b60007fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4610229565b804710156106ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610708576040519150601f19603f3d011682016040523d82523d6000602084013e61070d565b606091505b505090508061079e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016106a5565b505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b602081016004831061080d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b60008083601f84011261082557600080fd5b50813567ffffffffffffffff81111561083d57600080fd5b6020830191508360208260051b850101111561085857600080fd5b9250929050565b6000806000806040858703121561087557600080fd5b843567ffffffffffffffff8082111561088d57600080fd5b61089988838901610813565b909650945060208701359150808211156108b257600080fd5b506108bf87828801610813565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461091e57600080fd5b919050565b60006020828403121561093557600080fd5b61093e826108fa565b9392505050565b60006020828403121561095757600080fd5b8151801515811461093e57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109bf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b87811015610a145773ffffffffffffffffffffffffffffffffffffffff6109ff846108fa565b168252602092830192909101906001016109d9565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851115610a4d57600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea264697066735822122080a41375d1598e637ac5a3feb7a07f9bc19cc31f90f0ccc78fb54d27270fee5d64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/introspection/ERC165Storage.sol\";\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\nimport \"./WithdrawableStorage.sol\";\nimport \"./WithdrawableInternal.sol\";\nimport \"./IWithdrawable.sol\";\n\n/**\n * @title Withdrawable\n * @notice Allow withdrwaing any ERC20 or native tokens from the contract.\n *\n * @custom:type eip-2535-facet\n * @custom:category Finance\n * @custom:provides-interfaces IWithdrawable\n */\ncontract Withdrawable is IWithdrawable, WithdrawableInternal {\n    function withdraw(address[] calldata claimTokens, uint256[] calldata amounts) external {\n        _withdraw(claimTokens, amounts);\n    }\n\n    function withdrawRecipient() external view override returns (address) {\n        return _withdrawRecipient();\n    }\n\n    function withdrawRecipientLocked() external view override returns (bool) {\n        return _withdrawRecipientLocked();\n    }\n\n    function withdrawPowerRevoked() external view override returns (bool) {\n        return _withdrawPowerRevoked();\n    }\n\n    function withdrawMode() external view override returns (Mode) {\n        return _withdrawMode();\n    }\n\n    function withdrawModeLocked() external view override returns (bool) {\n        return _withdrawModeLocked();\n    }\n}\n"
  },
  "flair-sdk:finance/withdraw/WithdrawableOwnable": {
    "fqn": "flair-sdk:finance/withdraw/WithdrawableOwnable",
    "version": "2.14.0",
    "address": {
      "5": "0x397F9A648b9c19914A17079Abc38cB7162B272d8",
      "goerli": "0x397F9A648b9c19914A17079Abc38cB7162B272d8"
    },
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "WithdrawableOwnable",
      "sourceName": "src/finance/withdraw/WithdrawableOwnable.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrWithdrawImpossible",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawModeLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyRecipient",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawRecipientLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "_mode",
              "type": "uint8"
            }
          ],
          "name": "WithdrawModeChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawModeLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawPowerRevoked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "WithdrawRecipientChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawRecipientLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "claimTokens",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "lockWithdrawMode",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockWithdrawRecipient",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "revokeWithdrawPower",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "mode",
              "type": "uint8"
            }
          ],
          "name": "setWithdrawMode",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "setWithdrawRecipient",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50610891806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063c0bb38ff11610050578063c0bb38ff14610089578063c723955a1461009c578063da82b227146100a457600080fd5b80632c2330671461006c578063837fe14014610081575b600080fd5b61007f61007a36600461078d565b6100ac565b005b61007f61015d565b61007f6100973660046107b5565b610207565b61007f6102b0565b61007f610358565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61015a81610400565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b610205610508565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b61015a81610593565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b610205610677565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146103f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b610205610703565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe3805477010000000000000000000000000000000000000000000000900460ff1615610478576040517ff961232500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8054829082907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000008360038111156104c8576104c86107eb565b02179055507fde0b932afc455f2ef84dd8684b5b48f5ef6849dab435f13ebee6d30b0abb96b1826040516104fc919061081a565b60405180910390a15050565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe380547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff167601000000000000000000000000000000000000000000001790556040517fbbc3137b0845e12dca46906c86270ec38a67a8a1085ea85f52c15f1cb990e17b90600090a1565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe38054760100000000000000000000000000000000000000000000900460ff161561060a576040517f3f890c5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811782556040517f328214994c9eda72aea54f961861d8ae0038919eef1daa5c2219dcb12c43e66990600090a25050565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe380547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16770100000000000000000000000000000000000000000000001790556040517f674492e2ade911c1384eab01230d30e9d669ac7e6881735bdcb97e01b9272bd290600090a1565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe380547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1675010000000000000000000000000000000000000000001790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b60006020828403121561079f57600080fd5b8135600481106107ae57600080fd5b9392505050565b6000602082840312156107c757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107ae57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160048310610855577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea26469706673582212208857c3a5e7e4642ea4c2ff04ad44cb410e99796b290a49804d8cc5e4425fe3f464736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063c0bb38ff11610050578063c0bb38ff14610089578063c723955a1461009c578063da82b227146100a457600080fd5b80632c2330671461006c578063837fe14014610081575b600080fd5b61007f61007a36600461078d565b6100ac565b005b61007f61015d565b61007f6100973660046107b5565b610207565b61007f6102b0565b61007f610358565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b61015a81610400565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b610205610508565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b61015a81610593565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff163314610350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b610205610677565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146103f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610148565b610205610703565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe3805477010000000000000000000000000000000000000000000000900460ff1615610478576040517ff961232500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8054829082907fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000008360038111156104c8576104c86107eb565b02179055507fde0b932afc455f2ef84dd8684b5b48f5ef6849dab435f13ebee6d30b0abb96b1826040516104fc919061081a565b60405180910390a15050565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe380547fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff167601000000000000000000000000000000000000000000001790556040517fbbc3137b0845e12dca46906c86270ec38a67a8a1085ea85f52c15f1cb990e17b90600090a1565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe38054760100000000000000000000000000000000000000000000900460ff161561060a576040517f3f890c5c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831690811782556040517f328214994c9eda72aea54f961861d8ae0038919eef1daa5c2219dcb12c43e66990600090a25050565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe380547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16770100000000000000000000000000000000000000000000001790556040517f674492e2ade911c1384eab01230d30e9d669ac7e6881735bdcb97e01b9272bd290600090a1565b7f90911dd6b04582315fdcc835c92eb07b11f82eb9def7c511af0f2f9de3ddcfe380547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1675010000000000000000000000000000000000000000001790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b60006020828403121561079f57600080fd5b8135600481106107ae57600080fd5b9392505050565b6000602082840312156107c757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146107ae57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6020810160048310610855577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea26469706673582212208857c3a5e7e4642ea4c2ff04ad44cb410e99796b290a49804d8cc5e4425fe3f464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\nimport \"./WithdrawableInternal.sol\";\nimport \"./IWithdrawableAdmin.sol\";\n\n/**\n * @title Withdrawable - Admin - Ownable\n * @notice Allow contract owner to manage who can withdraw funds and how.\n *\n * @custom:type eip-2535-facet\n * @custom:category Finance\n * @custom:peer-dependencies IWithdrawable\n * @custom:provides-interfaces IWithdrawableAdmin\n */\ncontract WithdrawableOwnable is IWithdrawableAdmin, OwnableInternal, WithdrawableInternal {\n    function setWithdrawRecipient(address recipient) external onlyOwner {\n        _setWithdrawRecipient(recipient);\n    }\n\n    function lockWithdrawRecipient() external onlyOwner {\n        _lockWithdrawRecipient();\n    }\n\n    function revokeWithdrawPower() external onlyOwner {\n        _revokeWithdrawPower();\n    }\n\n    function setWithdrawMode(Mode mode) external onlyOwner {\n        _setWithdrawMode(mode);\n    }\n\n    function lockWithdrawMode() external onlyOwner {\n        _lockWithdrawMode();\n    }\n}\n"
  },
  "flair-sdk:access/ownable/IERC173": {
    "fqn": "flair-sdk:access/ownable/IERC173",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC173",
      "sourceName": "src/access/ownable/IERC173.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IERC173Events.sol\";\n\n/**\n * @title Contract ownership standard interface\n * @dev see https://eips.ethereum.org/EIPS/eip-173\n */\ninterface IERC173 is IERC173Events {\n    /**\n     * @notice get the ERC173 contract owner\n     * @return conrtact owner\n     */\n    function owner() external view returns (address);\n\n    /**\n     * @notice transfer contract ownership to new account\n     * @param account address of new owner\n     */\n    function transferOwnership(address account) external;\n}\n"
  },
  "flair-sdk:access/ownable/IERC173Events": {
    "fqn": "flair-sdk:access/ownable/IERC173Events",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC173Events",
      "sourceName": "src/access/ownable/IERC173Events.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @title Contract ownership standard interface (event only)\n * @dev see https://eips.ethereum.org/EIPS/eip-173\n */\ninterface IERC173Events {\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n}\n"
  },
  "flair-sdk:access/ownable/OwnableERC2771": {
    "fqn": "flair-sdk:access/ownable/OwnableERC2771",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "OwnableERC2771",
      "sourceName": "src/access/ownable/OwnableERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIERC173",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./Ownable.sol\";\nimport \"../../metatx/erc2771/ERC2771ContextInternal.sol\";\n\n/**\n * @title Ownable extension with meta-transactions support via ERC2771\n */\nabstract contract OwnableERC2771 is Ownable, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:access/ownable/OwnableInternal": {
    "fqn": "flair-sdk:access/ownable/OwnableInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "OwnableInternal",
      "sourceName": "src/access/ownable/OwnableInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\nimport \"./OwnableStorage.sol\";\nimport \"./IERC173Events.sol\";\n\nabstract contract OwnableInternal is IERC173Events, Context {\n    using OwnableStorage for OwnableStorage.Layout;\n\n    modifier onlyOwner() {\n        require(_msgSender() == _owner(), \"Ownable: sender must be owner\");\n        _;\n    }\n\n    function _owner() internal view virtual returns (address) {\n        return OwnableStorage.layout().owner;\n    }\n\n    function _transferOwnership(address account) internal virtual {\n        OwnableStorage.layout().setOwner(account);\n        emit OwnershipTransferred(_msgSender(), account);\n    }\n}\n"
  },
  "flair-sdk:access/ownable/OwnableStorage": {
    "fqn": "flair-sdk:access/ownable/OwnableStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "OwnableStorage",
      "sourceName": "src/access/ownable/OwnableStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201383d314bd3b5e1af38a81ff0224792cd5d81f702e16be24a24a63fec7af60d964736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201383d314bd3b5e1af38a81ff0224792cd5d81f702e16be24a24a63fec7af60d964736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary OwnableStorage {\n    struct Layout {\n        address owner;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.Ownable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n\n    function setOwner(Layout storage l, address owner) internal {\n        l.owner = owner;\n    }\n}\n"
  },
  "flair-sdk:access/roles/AccessControl": {
    "fqn": "flair-sdk:access/roles/AccessControl",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AccessControl",
      "sourceName": "src/access/roles/AccessControl.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "grantRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "renounceRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "revokeRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIAccessControl",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./AccessControlInternal.sol\";\nimport \"./IAccessControl.sol\";\n\nabstract contract AccessControl is AccessControlInternal, IAccessControl {\n    function versionIAccessControl() external pure virtual returns (string memory) {\n        return \"2.x\";\n    }\n\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(_getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(_getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    function renounceRole(bytes32 role, address account) public virtual override {\n        _renounceRole(role, account);\n    }\n\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _getRoleAdmin(role);\n    }\n}\n"
  },
  "flair-sdk:access/roles/AccessControlEnumerable": {
    "fqn": "flair-sdk:access/roles/AccessControlEnumerable",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AccessControlEnumerable",
      "sourceName": "src/access/roles/AccessControlEnumerable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "grantRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "renounceRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "revokeRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIAccessControl",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIAccessControlEnumerable",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControlEnumerableStorage.sol\";\nimport \"./AccessControl.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using AccessControlEnumerableStorage for AccessControlEnumerableStorage.Layout;\n\n    function versionIAccessControlEnumerable() external pure virtual returns (string memory) {\n        return \"2.x\";\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return AccessControlEnumerableStorage.layout().roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return AccessControlEnumerableStorage.layout().roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        AccessControlEnumerableStorage.layout().roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        AccessControlEnumerableStorage.layout().roleMembers[role].remove(account);\n    }\n}\n"
  },
  "flair-sdk:access/roles/AccessControlEnumerableERC2771": {
    "fqn": "flair-sdk:access/roles/AccessControlEnumerableERC2771",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AccessControlEnumerableERC2771",
      "sourceName": "src/access/roles/AccessControlEnumerableERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "grantRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "renounceRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "revokeRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIAccessControl",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIAccessControlEnumerable",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./AccessControlEnumerable.sol\";\n\nabstract contract AccessControlEnumerableERC2771 is ERC2771ContextInternal, AccessControlEnumerable {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:access/roles/AccessControlEnumerableStorage": {
    "fqn": "flair-sdk:access/roles/AccessControlEnumerableStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AccessControlEnumerableStorage",
      "sourceName": "src/access/roles/AccessControlEnumerableStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e3b4971c10b5fe286de2718c51511afded33ba776982f0547c56a20c4a6837464736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203e3b4971c10b5fe286de2718c51511afded33ba776982f0547c56a20c4a6837464736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nlibrary AccessControlEnumerableStorage {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    struct Layout {\n        mapping(bytes32 => EnumerableSet.AddressSet) roleMembers;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.AccessControlEnumerable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:access/roles/AccessControlERC2771": {
    "fqn": "flair-sdk:access/roles/AccessControlERC2771",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AccessControlERC2771",
      "sourceName": "src/access/roles/AccessControlERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "grantRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "renounceRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "revokeRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "versionIAccessControl",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./AccessControl.sol\";\n\nabstract contract AccessControlERC2771 is ERC2771ContextInternal, AccessControl {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:access/roles/AccessControlInternal": {
    "fqn": "flair-sdk:access/roles/AccessControlInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AccessControlInternal",
      "sourceName": "src/access/roles/AccessControlInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./AccessControlStorage.sol\";\nimport \"./IAccessControlEvents.sol\";\n\nabstract contract AccessControlInternal is Context, IAccessControlEvents {\n    using AccessControlStorage for AccessControlStorage.Layout;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function _hasRole(bytes32 role, address account) internal view virtual returns (bool) {\n        return AccessControlStorage.layout().roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!_hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function _getRoleAdmin(bytes32 role) internal view virtual returns (bytes32) {\n        return AccessControlStorage.layout().roles[role].adminRole;\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _renounceRole(bytes32 role, address account) internal virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = _getRoleAdmin(role);\n        AccessControlStorage.layout().roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!_hasRole(role, account)) {\n            AccessControlStorage.layout().roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (_hasRole(role, account)) {\n            AccessControlStorage.layout().roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
  },
  "flair-sdk:access/roles/AccessControlStorage": {
    "fqn": "flair-sdk:access/roles/AccessControlStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "AccessControlStorage",
      "sourceName": "src/access/roles/AccessControlStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bddec3196108aa600f2d7022e3a456c9128817122ec2ac2dddaabd01b1c852a64736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206bddec3196108aa600f2d7022e3a456c9128817122ec2ac2dddaabd01b1c852a64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary AccessControlStorage {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    struct Layout {\n        mapping(bytes32 => RoleData) roles;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.AccessControl\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:access/roles/IAccessControl": {
    "fqn": "flair-sdk:access/roles/IAccessControl",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IAccessControl",
      "sourceName": "src/access/roles/IAccessControl.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "grantRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "renounceRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "revokeRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IAccessControlEvents.sol\";\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl is IAccessControlEvents {\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
  },
  "flair-sdk:access/roles/IAccessControlEnumerable": {
    "fqn": "flair-sdk:access/roles/IAccessControlEnumerable",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IAccessControlEnumerable",
      "sourceName": "src/access/roles/IAccessControlEnumerable.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "grantRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "renounceRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "revokeRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"
  },
  "flair-sdk:access/roles/IAccessControlEvents": {
    "fqn": "flair-sdk:access/roles/IAccessControlEvents",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IAccessControlEvents",
      "sourceName": "src/access/roles/IAccessControlEvents.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32"
            }
          ],
          "name": "RoleAdminChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleGranted",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "name": "RoleRevoked",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlEvents {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n}\n"
  },
  "flair-sdk:diamond/DiamondStorage": {
    "fqn": "flair-sdk:diamond/DiamondStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "DiamondStorage",
      "sourceName": "src/diamond/DiamondStorage.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false,
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "DiamondCut",
          "type": "event"
        }
      ],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a787ebca37042bb58008798d48b98b31b7e5920aff8fc05a3667761cdc4b501364736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a787ebca37042bb58008798d48b98b31b7e5920aff8fc05a3667761cdc4b501364736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\nimport \"../diamond/IDiamondCut.sol\";\n\n// Remember to add the loupe functions from DiamondLoupeFacet to the diamond.\n// The loupe functions are required by the EIP2535 Diamonds standard\n\nerror ErrDiamondFacetAlreadyExists(address facet, bytes4 selector);\nerror ErrDiamondFacetSameFunction(address facet, bytes4 selector);\n\nlibrary DiamondStorage {\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.standard.diamond.storage\");\n\n    struct FacetAddressAndPosition {\n        address facetAddress;\n        uint96 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\n    }\n\n    struct FacetFunctionSelectors {\n        bytes4[] functionSelectors;\n        uint256 facetAddressPosition; // position of facetAddress in facetAddresses array\n    }\n\n    struct Layout {\n        // maps function selector to the facet address and\n        // the position of the selector in the facetFunctionSelectors.selectors array\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n        // maps facet addresses to function selectors\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\n        // facet addresses\n        address[] facetAddresses;\n    }\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            l.slot := position\n        }\n    }\n\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\n\n    // Internal function version of diamondCut\n    function diamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\n            if (action == IDiamondCut.FacetCutAction.Add) {\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else {\n                revert(\"LibDiamondCut: Incorrect FacetCutAction\");\n            }\n        }\n        emit DiamondCut(_diamondCut, _init, _calldata);\n        initializeDiamondCut(_init, _calldata);\n    }\n\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        // require(\n        //     _functionSelectors.length > 0,\n        //     \"LibDiamondCut: No selectors in facet to cut\"\n        // );\n        Layout storage l = layout();\n        // require(\n        //     _facetAddress != address(0),\n        //     \"LibDiamondCut: Add facet can't be address(0)\"\n        // );\n        uint96 selectorPosition = uint96(l.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(l, _facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = l.selectorToFacetAndPosition[selector].facetAddress;\n\n            if (oldFacetAddress != address(0)) {\n                revert ErrDiamondFacetAlreadyExists(oldFacetAddress, selector);\n            }\n\n            addFunction(l, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        // require(\n        //     _functionSelectors.length > 0,\n        //     \"LibDiamondCut: No selectors in facet to cut\"\n        // );\n        Layout storage l = layout();\n        // require(\n        //     _facetAddress != address(0),\n        //     \"LibDiamondCut: Add facet can't be address(0)\"\n        // );\n        uint96 selectorPosition = uint96(l.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            addFacet(l, _facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = l.selectorToFacetAndPosition[selector].facetAddress;\n\n            if (oldFacetAddress == _facetAddress) {\n                revert ErrDiamondFacetSameFunction(oldFacetAddress, selector);\n            }\n\n            removeFunction(l, oldFacetAddress, selector);\n            addFunction(l, selector, selectorPosition, _facetAddress);\n            selectorPosition++;\n        }\n    }\n\n    function removeFunctions(address, bytes4[] memory _functionSelectors) internal {\n        // require(\n        //     _functionSelectors.length > 0,\n        //     \"LibDiamondCut: No selectors in facet to cut\"\n        // );\n        Layout storage l = layout();\n        // if function does not exist then do nothing and return\n        // require(\n        //     _facetAddress == address(0),\n        //     \"LibDiamondCut: Remove facet address must be address(0)\"\n        // );\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = l.selectorToFacetAndPosition[selector].facetAddress;\n            removeFunction(l, oldFacetAddress, selector);\n        }\n    }\n\n    function addFacet(Layout storage l, address _facetAddress) internal {\n        enforceHasContractCode(_facetAddress, \"LibDiamondCut: New facet has no code\");\n        l.facetFunctionSelectors[_facetAddress].facetAddressPosition = l.facetAddresses.length;\n        l.facetAddresses.push(_facetAddress);\n    }\n\n    function addFunction(\n        Layout storage l,\n        bytes4 _selector,\n        uint96 _selectorPosition,\n        address _facetAddress\n    ) internal {\n        l.selectorToFacetAndPosition[_selector].functionSelectorPosition = _selectorPosition;\n        l.facetFunctionSelectors[_facetAddress].functionSelectors.push(_selector);\n        l.selectorToFacetAndPosition[_selector].facetAddress = _facetAddress;\n    }\n\n    function removeFunction(\n        Layout storage l,\n        address _facetAddress,\n        bytes4 _selector\n    ) internal {\n        // require(\n        //     _facetAddress != address(0),\n        //     \"LibDiamondCut: Can't remove function that doesn't exist\"\n        // );\n        // an immutable function is a function defined directly in a diamond\n        // require(\n        //     _facetAddress != address(this),\n        //     \"LibDiamondCut: Can't remove immutable function\"\n        // );\n        // replace selector with last selector, then delete last selector\n        uint256 selectorPosition = l.selectorToFacetAndPosition[_selector].functionSelectorPosition;\n        uint256 lastSelectorPosition = l.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\n        // if not the same then replace _selector with lastSelector\n        if (selectorPosition != lastSelectorPosition) {\n            bytes4 lastSelector = l.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\n            l.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\n            l.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint96(selectorPosition);\n        }\n        // delete the last selector\n        l.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\n        delete l.selectorToFacetAndPosition[_selector];\n\n        // if no more selectors for facet address then delete the facet address\n        if (lastSelectorPosition == 0) {\n            // replace facet address with last facet address and delete last facet address\n            uint256 lastFacetAddressPosition = l.facetAddresses.length - 1;\n            uint256 facetAddressPosition = l.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n            if (facetAddressPosition != lastFacetAddressPosition) {\n                address lastFacetAddress = l.facetAddresses[lastFacetAddressPosition];\n                l.facetAddresses[facetAddressPosition] = lastFacetAddress;\n                l.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = facetAddressPosition;\n            }\n            l.facetAddresses.pop();\n            delete l.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n        }\n    }\n\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\n        if (_init == address(0)) {\n            require(_calldata.length == 0, \"LibDiamondCut: _init is address(0) but_calldata is not empty\");\n        } else {\n            require(_calldata.length > 0, \"LibDiamondCut: _calldata is empty but _init is not address(0)\");\n            if (_init != address(this)) {\n                enforceHasContractCode(_init, \"LibDiamondCut: _init address has no code\");\n            }\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\n            if (!success) {\n                if (error.length > 0) {\n                    // bubble up the error\n                    revert(string(error));\n                } else {\n                    revert(\"LibDiamondCut: _init function reverted\");\n                }\n            }\n        }\n    }\n\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\n        uint256 contractSize;\n        assembly {\n            contractSize := extcodesize(_contract)\n        }\n        require(contractSize > 0, _errorMessage);\n    }\n}\n"
  },
  "flair-sdk:diamond/IDiamondCut": {
    "fqn": "flair-sdk:diamond/IDiamondCut",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IDiamondCut",
      "sourceName": "src/diamond/IDiamondCut.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "indexed": false,
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "DiamondCut",
          "type": "event"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "enum IDiamondCut.FacetCutAction",
                  "name": "action",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondCut.FacetCut[]",
              "name": "_diamondCut",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "_init",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_calldata",
              "type": "bytes"
            }
          ],
          "name": "diamondCut",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\ninterface IDiamondCut {\n    enum FacetCutAction {\n        Add,\n        Replace,\n        Remove\n    }\n    // Add=0, Replace=1, Remove=2\n\n    struct FacetCut {\n        address facetAddress;\n        FacetCutAction action;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Add/replace/remove any number of functions and optionally execute\n    ///         a function with delegatecall\n    /// @param _diamondCut Contains the facet addresses and function selectors\n    /// @param _init The address of the contract or facet to execute _calldata\n    /// @param _calldata A function call, including function selector and arguments\n    ///                  _calldata is executed with delegatecall on _init\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external;\n\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\n}\n"
  },
  "flair-sdk:diamond/IDiamondLoupe": {
    "fqn": "flair-sdk:diamond/IDiamondLoupe",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IDiamondLoupe",
      "sourceName": "src/diamond/IDiamondLoupe.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_functionSelector",
              "type": "bytes4"
            }
          ],
          "name": "facetAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "facetAddress_",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facetAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "facetAddresses_",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_facet",
              "type": "address"
            }
          ],
          "name": "facetFunctionSelectors",
          "outputs": [
            {
              "internalType": "bytes4[]",
              "name": "facetFunctionSelectors_",
              "type": "bytes4[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "facets",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "facetAddress",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "functionSelectors",
                  "type": "bytes4[]"
                }
              ],
              "internalType": "struct IDiamondLoupe.Facet[]",
              "name": "facets_",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamonds: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\n// A loupe is a small magnifying glass used to look at diamonds.\n// These functions look at diamonds\ninterface IDiamondLoupe {\n    /// These functions are expected to be called frequently\n    /// by tools.\n\n    struct Facet {\n        address facetAddress;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Gets all facet addresses and their four byte function selectors.\n    /// @return facets_ Facet\n    function facets() external view returns (Facet[] memory facets_);\n\n    /// @notice Gets all the function selectors supported by a specific facet.\n    /// @param _facet The facet address.\n    /// @return facetFunctionSelectors_\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\n\n    /// @notice Get all the facet addresses used by a diamond.\n    /// @return facetAddresses_\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\n\n    /// @notice Gets the facet that supports the given selector.\n    /// @dev If facet is not found return address(0).\n    /// @param _functionSelector The function selector.\n    /// @return facetAddress_ The facet address.\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\n}\n"
  },
  "flair-sdk:factory/Clones": {
    "fqn": "flair-sdk:factory/Clones",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "Clones",
      "sourceName": "src/factory/Clones.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017a39707a904b2238b0a02858fae30bd6c9c9ee9894bb644374e54e0b608ca1764736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017a39707a904b2238b0a02858fae30bd6c9c9ee9894bb644374e54e0b608ca1764736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"
  },
  "flair-sdk:factory/MinimalProxy": {
    "fqn": "flair-sdk:factory/MinimalProxy",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "MinimalProxy",
      "sourceName": "src/factory/MinimalProxy.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_impl",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "bytecode": "0x608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea2646970667358221220aab8be08fa0bce1d9b1dff013bf6f0d12eb11a17975f75de080d165140f5c35c64736f6c634300080f0033",
      "deployedBytecode": "0x608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea2646970667358221220aab8be08fa0bce1d9b1dff013bf6f0d12eb11a17975f75de080d165140f5c35c64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/utils/StorageSlot.sol\";\n\ncontract MinimalProxy is Proxy {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    constructor(address _impl) payable {\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = _impl;\n    }\n\n    function _implementation() internal view override returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n}\n"
  },
  "flair-sdk:finance/royalty/IRoyalty": {
    "fqn": "flair-sdk:finance/royalty/IRoyalty",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IRoyalty",
      "sourceName": "src/finance/royalty/IRoyalty.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "DefaultRoyaltySet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "TokenRoyaltyRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "TokenRoyaltySet",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "defaultRoyalty",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyalty",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "getFeeBps",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "getFeeRecipients",
          "outputs": [
            {
              "internalType": "address payable[]",
              "name": "",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getFees",
          "outputs": [
            {
              "internalType": "address payable[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "getRaribleV2Royalties",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "value",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IRaribleV2.Part[]",
              "name": "",
              "type": "tuple[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getTokenRoyaltiesCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "name": "getTokenRoyaltyByIndex",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyaltyConfig",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"@manifoldxyz/royalty-registry-solidity/contracts/specs/IEIP2981.sol\";\nimport \"@manifoldxyz/royalty-registry-solidity/contracts/specs/IRarible.sol\";\nimport \"@manifoldxyz/royalty-registry-solidity/contracts/specs/IFoundation.sol\";\n\nimport \"./IRoyaltyInternal.sol\";\n\ninterface IRoyalty is IEIP2981, IRaribleV1, IRaribleV2, IFoundation, IRoyaltyInternal {\n    /**\n     * @dev Default royalty for all tokens without a specific royalty.\n     */\n    function defaultRoyalty() external view returns (TokenRoyalty memory);\n\n    /**\n     * @dev Get the number of token specific overrides.  Used to enumerate over all configurations\n     */\n    function getTokenRoyaltiesCount() external view returns (uint256);\n\n    /**\n     * @dev Get a token royalty configuration by index.  Use in conjunction with getTokenRoyaltiesCount to get all per token configurations\n     */\n    function getTokenRoyaltyByIndex(uint256 index) external view returns (TokenRoyaltyConfig memory);\n}\n"
  },
  "flair-sdk:finance/royalty/IRoyaltyAdmin": {
    "fqn": "flair-sdk:finance/royalty/IRoyaltyAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IRoyaltyAdmin",
      "sourceName": "src/finance/royalty/IRoyaltyAdmin.sol",
      "abi": [
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyalty",
              "name": "royalty",
              "type": "tuple"
            }
          ],
          "name": "setDefaultRoyalty",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "bps",
                  "type": "uint16"
                }
              ],
              "internalType": "struct IRoyaltyInternal.TokenRoyaltyConfig[]",
              "name": "royalties",
              "type": "tuple[]"
            }
          ],
          "name": "setTokenRoyalties",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"./IRoyaltyInternal.sol\";\n\ninterface IRoyaltyAdmin {\n    /**\n     * @dev Set per token royalties.  Passing a recipient of address(0) will delete any existing configuration\n     */\n    function setTokenRoyalties(IRoyaltyInternal.TokenRoyaltyConfig[] calldata royalties) external;\n\n    /**\n     * @dev Set a default royalty configuration.  Will be used if no token specific configuration is set\n     */\n    function setDefaultRoyalty(IRoyaltyInternal.TokenRoyalty calldata royalty) external;\n}\n"
  },
  "flair-sdk:finance/royalty/IRoyaltyInternal": {
    "fqn": "flair-sdk:finance/royalty/IRoyaltyInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IRoyaltyInternal",
      "sourceName": "src/finance/royalty/IRoyaltyInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "DefaultRoyaltySet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "TokenRoyaltyRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "TokenRoyaltySet",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IRoyaltyInternal {\n    event TokenRoyaltyRemoved(uint256 tokenId);\n    event TokenRoyaltySet(uint256 tokenId, address recipient, uint16 bps);\n    event DefaultRoyaltySet(address recipient, uint16 bps);\n\n    struct TokenRoyalty {\n        address recipient;\n        uint16 bps;\n    }\n\n    struct TokenRoyaltyConfig {\n        uint256 tokenId;\n        address recipient;\n        uint16 bps;\n    }\n}\n"
  },
  "flair-sdk:finance/royalty/RoyaltyInternal": {
    "fqn": "flair-sdk:finance/royalty/RoyaltyInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "RoyaltyInternal",
      "sourceName": "src/finance/royalty/RoyaltyInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "DefaultRoyaltySet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "TokenRoyaltyRemoved",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint16",
              "name": "bps",
              "type": "uint16"
            }
          ],
          "name": "TokenRoyaltySet",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@manifoldxyz/royalty-registry-solidity/contracts/overrides/IRoyaltyOverride.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./IRoyaltyInternal.sol\";\nimport \"./RoyaltyStorage.sol\";\n\n/**\n * @title Royalty standard functionality base on EIP-2981 (derived from Manifold.xyz contracts to adopt Diamond architecture)\n */\nabstract contract RoyaltyInternal is IRoyaltyInternal {\n    using RoyaltyStorage for RoyaltyStorage.Layout;\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    /**\n     * @dev Sets token royalties. When you override this in the implementation contract\n     * ensure that you access restrict it to the contract owner or admin\n     */\n    function _setTokenRoyalties(TokenRoyaltyConfig[] memory royaltyConfigs) internal virtual {\n        RoyaltyStorage.Layout storage l = RoyaltyStorage.layout();\n\n        for (uint256 i = 0; i < royaltyConfigs.length; i++) {\n            TokenRoyaltyConfig memory royaltyConfig = royaltyConfigs[i];\n\n            require(royaltyConfig.bps < 10000, \"Invalid bps\");\n\n            if (royaltyConfig.recipient == address(0)) {\n                delete l.tokenRoyalties[royaltyConfig.tokenId];\n                l.tokensWithRoyalties.remove(royaltyConfig.tokenId);\n\n                emit TokenRoyaltyRemoved(royaltyConfig.tokenId);\n            } else {\n                l.tokenRoyalties[royaltyConfig.tokenId] = TokenRoyalty(royaltyConfig.recipient, royaltyConfig.bps);\n                l.tokensWithRoyalties.add(royaltyConfig.tokenId);\n\n                emit TokenRoyaltySet(royaltyConfig.tokenId, royaltyConfig.recipient, royaltyConfig.bps);\n            }\n        }\n    }\n\n    /**\n     * @dev Sets default royalty. When you override this in the implementation contract\n     * ensure that you access restrict it to the contract owner or admin\n     */\n    function _setDefaultRoyalty(TokenRoyalty memory royalty) internal virtual {\n        require(royalty.bps < 10000, \"Invalid bps\");\n\n        RoyaltyStorage.layout().defaultRoyalty = TokenRoyalty(royalty.recipient, royalty.bps);\n\n        emit DefaultRoyaltySet(royalty.recipient, royalty.bps);\n    }\n\n    /**\n     * @dev See {IEIP2981RoyaltyOverride-getTokenRoyaltiesCount}.\n     */\n    function _getTokenRoyaltiesCount() internal view virtual returns (uint256) {\n        return RoyaltyStorage.layout().tokensWithRoyalties.length();\n    }\n\n    /**\n     * @dev See {IEIP2981RoyaltyOverride-getTokenRoyaltyByIndex}.\n     */\n    function _getTokenRoyaltyByIndex(uint256 index) internal view virtual returns (TokenRoyaltyConfig memory) {\n        RoyaltyStorage.Layout storage l = RoyaltyStorage.layout();\n\n        uint256 tokenId = l.tokensWithRoyalties.at(index);\n        TokenRoyalty memory royalty = l.tokenRoyalties[tokenId];\n\n        return TokenRoyaltyConfig(tokenId, royalty.recipient, royalty.bps);\n    }\n\n    /**\n     * @dev See {IEIP2981RoyaltyOverride-royaltyInfo}.\n     */\n    function _royaltyInfo(uint256 tokenId, uint256 value) internal view virtual returns (address, uint256) {\n        RoyaltyStorage.Layout storage l = RoyaltyStorage.layout();\n\n        if (l.tokenRoyalties[tokenId].recipient != address(0)) {\n            return (l.tokenRoyalties[tokenId].recipient, (value * l.tokenRoyalties[tokenId].bps) / 10000);\n        }\n\n        if (l.defaultRoyalty.recipient != address(0) && l.defaultRoyalty.bps != 0) {\n            return (l.defaultRoyalty.recipient, (value * l.defaultRoyalty.bps) / 10000);\n        }\n\n        return (address(0), 0);\n    }\n}\n"
  },
  "flair-sdk:finance/royalty/RoyaltyStorage": {
    "fqn": "flair-sdk:finance/royalty/RoyaltyStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "RoyaltyStorage",
      "sourceName": "src/finance/royalty/RoyaltyStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edc8a991779abb65de4e557ccd864e72ebd7f2541bb275975c728073446f0ee864736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edc8a991779abb65de4e557ccd864e72ebd7f2541bb275975c728073446f0ee864736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\n\nimport \"./IRoyaltyInternal.sol\";\nimport \"./IRoyalty.sol\";\n\nlibrary RoyaltyStorage {\n    using EnumerableSet for EnumerableSet.UintSet;\n\n    struct Layout {\n        IRoyaltyInternal.TokenRoyalty defaultRoyalty;\n        mapping(uint256 => IRoyaltyInternal.TokenRoyalty) tokenRoyalties;\n        EnumerableSet.UintSet tokensWithRoyalties;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.Royalty\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:finance/sales/ITieredSales": {
    "fqn": "flair-sdk:finance/sales/ITieredSales",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ITieredSales",
      "sourceName": "src/finance/sales/ITieredSales.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            }
          ],
          "name": "maxMintableForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "mintByTier",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            }
          ],
          "name": "onTierAllowlist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "remainingForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "reservedMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tiers",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalReserved",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "verifySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "walletMintedByTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ITieredSalesInternal.sol\";\n\ninterface ITieredSales is ITieredSalesInternal {\n    function onTierAllowlist(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof\n    ) external view returns (bool);\n\n    function verifySignature(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes calldata signature,\n        uint256 validUntil\n    ) external view returns (bool);\n\n    function maxMintableForTier(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance\n    ) external view returns (uint256);\n\n    function mintByTier(\n        uint256 tierId,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof,\n        bytes calldata signature,\n        uint256 validUntil\n    ) external payable;\n\n    function remainingForTier(uint256 tierId) external view returns (uint256);\n\n    function walletMintedByTier(uint256 tierId, address wallet) external view returns (uint256);\n\n    function tierMints(uint256 tierId) external view returns (uint256);\n\n    function totalReserved() external view returns (uint256);\n\n    function reservedMints() external view returns (uint256);\n\n    function tiers(uint256 tierId) external view returns (Tier memory);\n}\n"
  },
  "flair-sdk:finance/sales/ITieredSalesAdmin": {
    "fqn": "flair-sdk:finance/sales/ITieredSalesAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ITieredSalesAdmin",
      "sourceName": "src/finance/sales/ITieredSalesAdmin.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "name": "configureTiering",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier[]",
              "name": "",
              "type": "tuple[]"
            }
          ],
          "name": "configureTiering",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ITieredSalesInternal.sol\";\n\ninterface ITieredSalesAdmin {\n    function configureTiering(uint256, ITieredSalesInternal.Tier calldata) external;\n\n    function configureTiering(uint256[] calldata, ITieredSalesInternal.Tier[] calldata) external;\n}\n"
  },
  "flair-sdk:finance/sales/ITieredSalesInternal": {
    "fqn": "flair-sdk:finance/sales/ITieredSalesInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ITieredSalesInternal",
      "sourceName": "src/finance/sales/ITieredSalesInternal.sol",
      "abi": [],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface ITieredSalesInternal {\n    struct Tier {\n        uint256 start;\n        uint256 end;\n        address currency;\n        uint256 price;\n        uint256 maxPerWallet;\n        bytes32 merkleRoot;\n        uint256 reserved;\n        uint256 maxAllocation;\n        address signer;\n    }\n}\n"
  },
  "flair-sdk:finance/sales/TieredSales": {
    "fqn": "flair-sdk:finance/sales/TieredSales",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "TieredSales",
      "sourceName": "src/finance/sales/TieredSales.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            }
          ],
          "name": "maxMintableForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxMintable",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "mintByTier",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            }
          ],
          "name": "onTierAllowlist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "remainingForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "reservedMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tiers",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalReserved",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "verifySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "walletMintedByTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ITieredSales.sol\";\nimport \"./TieredSalesInternal.sol\";\n\n/**\n * @title Abstract sales mechanism for any asset (e.g NFTs) with multiple tiered pricing, allowlist and allocation plans.\n */\nabstract contract TieredSales is ITieredSales, TieredSalesInternal {\n    function onTierAllowlist(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof\n    ) public view virtual returns (bool) {\n        return super._onTierAllowlist(tierId, minter, maxAllowance, allowlistProof);\n    }\n\n    function verifySignature(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes calldata signature,\n        uint256 validUntil\n    ) public view virtual returns (bool) {\n        return\n            super._verifySignature(\n                TieredSalesStorage.layout().tiers[tierId].signer,\n                tierId,\n                minter,\n                maxAllowance,\n                signature,\n                validUntil\n            );\n    }\n\n    function maxMintableForTier(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance\n    ) public view virtual returns (uint256 maxMintable) {\n        return super._maxMintableForTier(tierId, minter, maxAllowance);\n    }\n\n    function remainingForTier(uint256 tierId) public view virtual returns (uint256) {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        uint256 availableSupply = _availableSupplyForTier(tierId);\n        uint256 availableAllocation = l.tiers[tierId].maxAllocation - l.tierMints[tierId];\n\n        if (availableSupply < availableAllocation) {\n            return availableSupply;\n        } else {\n            return availableAllocation;\n        }\n    }\n\n    function walletMintedByTier(uint256 tierId, address wallet) public view virtual returns (uint256) {\n        return TieredSalesStorage.layout().walletMinted[tierId][wallet];\n    }\n\n    function tierMints(uint256 tierId) public view virtual returns (uint256) {\n        return TieredSalesStorage.layout().tierMints[tierId];\n    }\n\n    function totalReserved() external view virtual returns (uint256) {\n        return TieredSalesStorage.layout().totalReserved;\n    }\n\n    function reservedMints() external view virtual returns (uint256) {\n        return TieredSalesStorage.layout().reservedMints;\n    }\n\n    function tiers(uint256 tierId) external view virtual returns (Tier memory) {\n        return TieredSalesStorage.layout().tiers[tierId];\n    }\n}\n"
  },
  "flair-sdk:finance/sales/TieredSalesERC2771": {
    "fqn": "flair-sdk:finance/sales/TieredSalesERC2771",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "TieredSalesERC2771",
      "sourceName": "src/finance/sales/TieredSalesERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            }
          ],
          "name": "maxMintableForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "maxMintable",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "mintByTier",
          "outputs": [],
          "stateMutability": "payable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "allowlistProof",
              "type": "bytes32[]"
            }
          ],
          "name": "onTierAllowlist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "remainingForTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "reservedMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierMints",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tiers",
          "outputs": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "start",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "currency",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerWallet",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "reserved",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                }
              ],
              "internalType": "struct ITieredSalesInternal.Tier",
              "name": "",
              "type": "tuple"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalReserved",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "minter",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAllowance",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "name": "verifySignature",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "wallet",
              "type": "address"
            }
          ],
          "name": "walletMintedByTier",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../metatx/erc2771/ERC2771ContextInternal.sol\";\nimport \"./TieredSales.sol\";\n\n/**\n * @title Tiered Sales facet with meta-transactions support via ERC2771\n */\nabstract contract TieredSalesERC2771 is TieredSales, ERC2771ContextInternal {\n    function _msgSender() internal view override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:finance/sales/TieredSalesInternal": {
    "fqn": "flair-sdk:finance/sales/TieredSalesInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "TieredSalesInternal",
      "sourceName": "src/finance/sales/TieredSalesInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\nimport \"./ITieredSalesInternal.sol\";\nimport \"./TieredSalesStorage.sol\";\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\n/**\n * @title Sales mechanism for NFTs with multiple tiered pricing, allowlist and allocation plans\n */\nabstract contract TieredSalesInternal is ITieredSalesInternal, Context, OwnableInternal {\n    using ECDSA for bytes32;\n    using TieredSalesStorage for TieredSalesStorage.Layout;\n\n    function _configureTiering(uint256 tierId, Tier calldata tier) internal virtual {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        require(tier.maxAllocation >= l.tierMints[tierId], \"LOWER_THAN_MINTED\");\n\n        if (l.tiers[tierId].reserved > 0) {\n            require(tier.reserved >= l.tierMints[tierId], \"LOW_RESERVE_AMOUNT\");\n        }\n\n        if (l.tierMints[tierId] > 0) {\n            require(tier.maxPerWallet >= l.tiers[tierId].maxPerWallet, \"LOW_MAX_PER_WALLET\");\n        }\n\n        l.totalReserved -= l.tiers[tierId].reserved;\n        l.tiers[tierId] = tier;\n        l.totalReserved += tier.reserved;\n    }\n\n    function _configureTiering(uint256[] calldata _tierIds, Tier[] calldata _tiers) internal virtual {\n        for (uint256 i = 0; i < _tierIds.length; i++) {\n            _configureTiering(_tierIds[i], _tiers[i]);\n        }\n    }\n\n    function _onTierAllowlist(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof\n    ) internal view virtual returns (bool) {\n        return\n            MerkleProof.verify(\n                allowlistProof,\n                TieredSalesStorage.layout().tiers[tierId].merkleRoot,\n                _generateMerkleLeaf(minter, maxAllowance)\n            );\n    }\n\n    function _verifySignature(\n        address signer,\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        bytes calldata signature,\n        uint256 validUntil\n    ) internal view virtual returns (bool) {\n        if (validUntil < block.timestamp) {\n            return false;\n        }\n\n        address recoveredSignerAddr = _typeHashTierTicket(tierId, minter, maxAllowance, validUntil).recover(signature);\n\n        return recoveredSignerAddr == signer;\n    }\n\n    function _maxMintableForTier(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance\n    ) internal view virtual returns (uint256 maxMintable) {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        require(l.tiers[tierId].maxPerWallet > 0, \"NOT_EXISTS\");\n        require(block.timestamp >= l.tiers[tierId].start, \"NOT_STARTED\");\n        require(block.timestamp <= l.tiers[tierId].end, \"ALREADY_ENDED\");\n\n        maxMintable = l.tiers[tierId].maxPerWallet - l.walletMinted[tierId][minter];\n\n        require(l.walletMinted[tierId][minter] < maxAllowance, \"MAXED_ALLOWANCE\");\n\n        uint256 remainingAllowance = maxAllowance - l.walletMinted[tierId][minter];\n\n        if (maxMintable > remainingAllowance) {\n            maxMintable = remainingAllowance;\n        }\n    }\n\n    function _availableSupplyForTier(uint256 tierId) internal view virtual returns (uint256 remaining) {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        // Substract all the remaining reserved spots from the total remaining supply...\n        remaining = _remainingSupply(tierId) - (l.totalReserved - l.reservedMints);\n\n        // If this tier has reserved spots, add remaining spots back to result...\n        if (l.tiers[tierId].reserved > 0) {\n            remaining += (l.tiers[tierId].reserved - l.tierMints[tierId]);\n        }\n    }\n\n    function _executeSale(\n        uint256 tierId,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof,\n        bytes calldata signature,\n        uint256 validUntil\n    ) internal virtual {\n        _validateTier(tierId, _msgSender(), count, maxAllowance, allowlistProof, signature, validUntil);\n\n        {\n            TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n            if (l.tiers[tierId].currency == address(0)) {\n                require(l.tiers[tierId].price * count <= msg.value, \"INSUFFICIENT_AMOUNT\");\n            } else {\n                IERC20(l.tiers[tierId].currency).transferFrom(\n                    _msgSender(),\n                    address(this),\n                    l.tiers[tierId].price * count\n                );\n            }\n\n            l.walletMinted[tierId][_msgSender()] += count;\n            l.tierMints[tierId] += count;\n\n            if (l.tiers[tierId].reserved > 0) {\n                l.reservedMints += count;\n            }\n        }\n    }\n\n    function _validateTier(\n        uint256 tierId,\n        address minter,\n        uint256 count,\n        uint256 maxAllowance,\n        bytes32[] calldata allowlistProof,\n        bytes calldata signature,\n        uint256 validUntil\n    ) internal view virtual {\n        TieredSalesStorage.Layout storage l = TieredSalesStorage.layout();\n\n        uint256 maxMintable = _maxMintableForTier(tierId, minter, maxAllowance);\n\n        require(count <= maxMintable, \"EXCEEDS_MAX\");\n        require(count <= _availableSupplyForTier(tierId), \"EXCEEDS_SUPPLY\");\n        require(count + l.tierMints[tierId] <= l.tiers[tierId].maxAllocation, \"EXCEEDS_ALLOCATION\");\n\n        if (l.tiers[tierId].merkleRoot != bytes32(0)) {\n            require(_onTierAllowlist(tierId, minter, maxAllowance, allowlistProof), \"NOT_ALLOWLISTED\");\n        }\n\n        if (l.tiers[tierId].signer != address(0)) {\n            require(\n                _verifySignature(l.tiers[tierId].signer, tierId, minter, maxAllowance, signature, validUntil),\n                \"INVALID_SIGNATURE\"\n            );\n        }\n    }\n\n    function _remainingSupply(\n        uint256 /*tierId*/\n    ) internal view virtual returns (uint256) {\n        // By default assume supply is unlimited (that means reserving allocation for tiers is irrelevant)\n        return type(uint256).max;\n    }\n\n    /* PRIVATE */\n\n    function _generateMerkleLeaf(address account, uint256 maxAllowance) private pure returns (bytes32) {\n        return keccak256(abi.encodePacked(account, maxAllowance));\n    }\n\n    function _typeHashTierTicket(\n        uint256 tierId,\n        address minter,\n        uint256 maxAllowance,\n        uint256 validUntil\n    ) internal view returns (bytes32) {\n        /* Per EIP 712. */\n        bytes32 structHash = keccak256(\n            abi.encode(TieredSalesStorage.TIER_TICKET_TYPEHASH, tierId, minter, maxAllowance, validUntil)\n        );\n\n        return ECDSA.toTypedDataHash(_tieredSalesDomainSeparator(), structHash);\n    }\n\n    /**\n     * @notice return the EIP-712 domain separator unique to contract and chain\n     * @return domainSeparator domain separator\n     */\n    function _tieredSalesDomainSeparator() internal view returns (bytes32 domainSeparator) {\n        domainSeparator = TieredSalesStorage.layout().domainSeparators[_chainId()];\n\n        if (domainSeparator == 0x00) {\n            domainSeparator = _calculateDomainSeparator();\n        }\n    }\n\n    function _calculateDomainSeparator() private view returns (bytes32 domainSeparator) {\n        // no need for assembly, running very rarely\n        domainSeparator = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(\"TieredSales\")), // Name\n                keccak256(bytes(\"2.x\")), // Version\n                _chainId(),\n                address(this)\n            )\n        );\n    }\n\n    function _chainId() private view returns (uint256 chainId) {\n        assembly {\n            chainId := chainid()\n        }\n    }\n}\n"
  },
  "flair-sdk:finance/sales/TieredSalesStorage": {
    "fqn": "flair-sdk:finance/sales/TieredSalesStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "TieredSalesStorage",
      "sourceName": "src/finance/sales/TieredSalesStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202700712add55a15acd4741ee7c4c45805b62e3cdb796b5454e3a69cc91662a2e64736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202700712add55a15acd4741ee7c4c45805b62e3cdb796b5454e3a69cc91662a2e64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ITieredSales.sol\";\n\nlibrary TieredSalesStorage {\n    struct Layout {\n        mapping(uint256 => bytes32) domainSeparators;\n        uint256 totalReserved;\n        uint256 reservedMints;\n        mapping(uint256 => ITieredSales.Tier) tiers;\n        mapping(uint256 => uint256) tierMints;\n        mapping(uint256 => mapping(address => uint256)) walletMinted;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.TieredSales\");\n\n    /* Typehash for EIP-712 */\n    bytes32 internal constant TIER_TICKET_TYPEHASH =\n        keccak256(\"TierTicket(uint256 tierId,address minter,uint256 maxAllowance,uint256 validUntil)\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:finance/withdraw/IWithdrawable": {
    "fqn": "flair-sdk:finance/withdraw/IWithdrawable",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IWithdrawable",
      "sourceName": "src/finance/withdraw/IWithdrawable.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrWithdrawImpossible",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawModeLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyRecipient",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawRecipientLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "_mode",
              "type": "uint8"
            }
          ],
          "name": "WithdrawModeChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawModeLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawPowerRevoked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "WithdrawRecipientChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawRecipientLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "claimTokens",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "claimTokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "withdraw",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawMode",
          "outputs": [
            {
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawModeLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawPowerRevoked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawRecipient",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "withdrawRecipientLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"./IWithdrawableInternal.sol\";\n\ninterface IWithdrawable is IWithdrawableInternal {\n    function withdraw(address[] calldata claimTokens, uint256[] calldata amounts) external;\n\n    function withdrawRecipient() external view returns (address);\n\n    function withdrawRecipientLocked() external view returns (bool);\n\n    function withdrawPowerRevoked() external view returns (bool);\n\n    function withdrawMode() external view returns (Mode);\n\n    function withdrawModeLocked() external view returns (bool);\n}\n"
  },
  "flair-sdk:finance/withdraw/IWithdrawableAdmin": {
    "fqn": "flair-sdk:finance/withdraw/IWithdrawableAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IWithdrawableAdmin",
      "sourceName": "src/finance/withdraw/IWithdrawableAdmin.sol",
      "abi": [
        {
          "inputs": [],
          "name": "lockWithdrawMode",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockWithdrawRecipient",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "revokeWithdrawPower",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "_mode",
              "type": "uint8"
            }
          ],
          "name": "setWithdrawMode",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "name": "setWithdrawRecipient",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IWithdrawable.sol\";\n\ninterface IWithdrawableAdmin {\n    function setWithdrawRecipient(address _recipient) external;\n\n    function lockWithdrawRecipient() external;\n\n    function revokeWithdrawPower() external;\n\n    function setWithdrawMode(IWithdrawable.Mode _mode) external;\n\n    function lockWithdrawMode() external;\n}\n"
  },
  "flair-sdk:finance/withdraw/IWithdrawableInternal": {
    "fqn": "flair-sdk:finance/withdraw/IWithdrawableInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IWithdrawableInternal",
      "sourceName": "src/finance/withdraw/IWithdrawableInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrWithdrawImpossible",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawModeLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyRecipient",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawRecipientLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "_mode",
              "type": "uint8"
            }
          ],
          "name": "WithdrawModeChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawModeLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawPowerRevoked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "WithdrawRecipientChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawRecipientLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "claimTokens",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\ninterface IWithdrawableInternal {\n    enum Mode {\n        OWNER,\n        RECIPIENT,\n        ANYONE,\n        NOBODY\n    }\n\n    error ErrWithdrawOnlyRecipient();\n    error ErrWithdrawOnlyOwner();\n    error ErrWithdrawImpossible();\n    error ErrWithdrawRecipientLocked();\n    error ErrWithdrawModeLocked();\n\n    event WithdrawRecipientChanged(address indexed recipient);\n    event WithdrawRecipientLocked();\n    event WithdrawModeChanged(Mode _mode);\n    event WithdrawModeLocked();\n    event Withdrawn(address[] claimTokens, uint256[] amounts);\n    event WithdrawPowerRevoked();\n}\n"
  },
  "flair-sdk:finance/withdraw/WithdrawableInternal": {
    "fqn": "flair-sdk:finance/withdraw/WithdrawableInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "WithdrawableInternal",
      "sourceName": "src/finance/withdraw/WithdrawableInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrWithdrawImpossible",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawModeLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawOnlyRecipient",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrWithdrawRecipientLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum IWithdrawableInternal.Mode",
              "name": "_mode",
              "type": "uint8"
            }
          ],
          "name": "WithdrawModeChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawModeLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawPowerRevoked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "name": "WithdrawRecipientChanged",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "WithdrawRecipientLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address[]",
              "name": "claimTokens",
              "type": "address[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "Withdrawn",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nimport \"../../access/ownable/OwnableInternal.sol\";\n\nimport \"./WithdrawableStorage.sol\";\nimport \"./IWithdrawableInternal.sol\";\n\n/**\n * @title Functionality to withdraw ERC20 or natives tokens from the contract via various modes\n */\nabstract contract WithdrawableInternal is IWithdrawableInternal, OwnableInternal {\n    using WithdrawableStorage for WithdrawableStorage.Layout;\n\n    using Address for address payable;\n\n    function _withdrawRecipient() internal view virtual returns (address) {\n        return WithdrawableStorage.layout().recipient;\n    }\n\n    function _withdrawRecipientLocked() internal view virtual returns (bool) {\n        return WithdrawableStorage.layout().recipientLocked;\n    }\n\n    function _withdrawPowerRevoked() internal view virtual returns (bool) {\n        return WithdrawableStorage.layout().powerRevoked;\n    }\n\n    function _withdrawMode() internal view virtual returns (Mode) {\n        return WithdrawableStorage.layout().mode;\n    }\n\n    function _withdrawModeLocked() internal view virtual returns (bool) {\n        return WithdrawableStorage.layout().modeLocked;\n    }\n\n    function _setWithdrawRecipient(address recipient) internal virtual {\n        WithdrawableStorage.Layout storage l = WithdrawableStorage.layout();\n\n        if (l.recipientLocked) {\n            revert ErrWithdrawRecipientLocked();\n        }\n\n        l.recipient = recipient;\n\n        emit WithdrawRecipientChanged(recipient);\n    }\n\n    function _lockWithdrawRecipient() internal virtual {\n        WithdrawableStorage.layout().recipientLocked = true;\n\n        emit WithdrawRecipientLocked();\n    }\n\n    function _revokeWithdrawPower() internal virtual {\n        WithdrawableStorage.layout().powerRevoked = true;\n\n        emit WithdrawPowerRevoked();\n    }\n\n    function _setWithdrawMode(Mode _mode) internal virtual {\n        WithdrawableStorage.Layout storage l = WithdrawableStorage.layout();\n\n        if (l.modeLocked) {\n            revert ErrWithdrawModeLocked();\n        }\n\n        l.mode = _mode;\n\n        emit WithdrawModeChanged(_mode);\n    }\n\n    function _lockWithdrawMode() internal virtual {\n        WithdrawableStorage.layout().modeLocked = true;\n\n        emit WithdrawModeLocked();\n    }\n\n    function _withdraw(address[] calldata claimTokens, uint256[] calldata amounts) internal virtual {\n        WithdrawableStorage.Layout storage l = WithdrawableStorage.layout();\n\n        /**\n         * We are using msg.sender for smaller attack surface when evaluating\n         * the sender of the function call. If in future we want to handle \"withdraw\"\n         * functionality via meta transactions, we should consider using `_msgSender`\n         */\n\n        if (l.mode == Mode.NOBODY) {\n            revert ErrWithdrawImpossible();\n        } else if (l.mode == Mode.RECIPIENT) {\n            if (l.recipient != msg.sender) {\n                revert ErrWithdrawOnlyRecipient();\n            }\n        } else if (l.mode == Mode.OWNER) {\n            if (_owner() != msg.sender) {\n                revert ErrWithdrawOnlyOwner();\n            }\n        }\n\n        if (l.powerRevoked) {\n            revert ErrWithdrawImpossible();\n        }\n\n        for (uint256 i = 0; i < claimTokens.length; i++) {\n            if (claimTokens[i] == address(0)) {\n                payable(l.recipient).sendValue(amounts[i]);\n            } else {\n                IERC20(claimTokens[i]).transfer(address(l.recipient), amounts[i]);\n            }\n        }\n\n        emit Withdrawn(claimTokens, amounts);\n    }\n}\n"
  },
  "flair-sdk:finance/withdraw/WithdrawableStorage": {
    "fqn": "flair-sdk:finance/withdraw/WithdrawableStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "WithdrawableStorage",
      "sourceName": "src/finance/withdraw/WithdrawableStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd82a44bcfcc069e12ed925d6ce70db48db31e261290f95d75194271004ce0064736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fdd82a44bcfcc069e12ed925d6ce70db48db31e261290f95d75194271004ce0064736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IWithdrawableInternal.sol\";\n\nlibrary WithdrawableStorage {\n    struct Layout {\n        address recipient;\n        IWithdrawableInternal.Mode mode;\n        bool powerRevoked;\n        bool recipientLocked;\n        bool modeLocked;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.Withdrawable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:introspection/ERC165Storage": {
    "fqn": "flair-sdk:introspection/ERC165Storage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC165Storage",
      "sourceName": "src/introspection/ERC165Storage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc2a30ce5e8163b4a673d64de609aeea11f25bf0518a694a2c95e56a98e1346964736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc2a30ce5e8163b4a673d64de609aeea11f25bf0518a694a2c95e56a98e1346964736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC165Storage {\n    struct Layout {\n        mapping(bytes4 => bool) supportedInterfaces;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.ERC165\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n\n    function isSupportedInterface(Layout storage l, bytes4 interfaceId) internal view returns (bool) {\n        return l.supportedInterfaces[interfaceId];\n    }\n\n    function setSupportedInterface(\n        Layout storage l,\n        bytes4 interfaceId,\n        bool status\n    ) internal {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interface id\");\n        l.supportedInterfaces[interfaceId] = status;\n    }\n}\n"
  },
  "flair-sdk:introspection/IERC165Admin": {
    "fqn": "flair-sdk:introspection/IERC165Admin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC165Admin",
      "sourceName": "src/introspection/IERC165Admin.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes4[]",
              "name": "interfaceIds",
              "type": "bytes4[]"
            },
            {
              "internalType": "bytes4[]",
              "name": "interfaceIdsToRemove",
              "type": "bytes4[]"
            }
          ],
          "name": "setERC165",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC165Admin {\n    function setERC165(bytes4[] calldata interfaceIds, bytes4[] calldata interfaceIdsToRemove) external;\n}\n"
  },
  "flair-sdk:legal/license/a16z/ICantBeEvil": {
    "fqn": "flair-sdk:legal/license/a16z/ICantBeEvil",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ICantBeEvil",
      "sourceName": "src/legal/license/a16z/ICantBeEvil.sol",
      "abi": [
        {
          "inputs": [],
          "name": "getLicenseName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLicenseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\n// Adopted from \"@a16z/contracts/licenses/CantBeEvil.sol\"\ninterface ICantBeEvil {\n    function getLicenseURI() external view returns (string memory);\n\n    function getLicenseName() external view returns (string memory);\n}\n"
  },
  "flair-sdk:legal/license/ILicense": {
    "fqn": "flair-sdk:legal/license/ILicense",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ILicense",
      "sourceName": "src/legal/license/ILicense.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrLicenseLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseURI",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseName",
              "type": "string"
            }
          ],
          "name": "CustomLicenseSet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "LicenseLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "licenseVersion",
              "type": "uint8"
            }
          ],
          "name": "LicenseVersionSet",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "customLicenseName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "customLicenseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLicenseName",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "getLicenseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "licenseVersion",
          "outputs": [
            {
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\nimport \"./a16z/ICantBeEvil.sol\";\nimport \"./ILicenseInternal.sol\";\n\ninterface ILicense is ILicenseInternal, ICantBeEvil {\n    function licenseVersion() external view returns (ILicenseInternal.LicenseVersion);\n\n    function customLicenseURI() external view returns (string memory);\n\n    function customLicenseName() external view returns (string memory);\n}\n"
  },
  "flair-sdk:legal/license/ILicenseAdmin": {
    "fqn": "flair-sdk:legal/license/ILicenseAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ILicenseAdmin",
      "sourceName": "src/legal/license/ILicenseAdmin.sol",
      "abi": [
        {
          "inputs": [],
          "name": "licenseVersionLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockLicenseVersion",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "licenseVersion",
              "type": "uint8"
            }
          ],
          "name": "setLicenseVersion",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ILicenseInternal.sol\";\n\ninterface ILicenseAdmin {\n    function setLicenseVersion(ILicenseInternal.LicenseVersion licenseVersion) external;\n\n    function lockLicenseVersion() external;\n\n    function licenseVersionLocked() external view returns (bool);\n}\n"
  },
  "flair-sdk:legal/license/ILicenseInternal": {
    "fqn": "flair-sdk:legal/license/ILicenseInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ILicenseInternal",
      "sourceName": "src/legal/license/ILicenseInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrLicenseLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseURI",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseName",
              "type": "string"
            }
          ],
          "name": "CustomLicenseSet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "LicenseLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "licenseVersion",
              "type": "uint8"
            }
          ],
          "name": "LicenseVersionSet",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: AGPL-3.0\n\npragma solidity ^0.8.15;\n\ninterface ILicenseInternal {\n    enum LicenseVersion {\n        CBE_CC0,\n        CBE_ECR,\n        CBE_NECR,\n        CBE_NECR_HS,\n        CBE_PR,\n        CBE_PR_HS,\n        CUSTOM,\n        UNLICENSED\n    }\n\n    error ErrLicenseLocked();\n\n    event CustomLicenseSet(string customLicenseURI, string customLicenseName);\n    event LicenseVersionSet(LicenseVersion licenseVersion);\n    event LicenseLocked();\n}\n"
  },
  "flair-sdk:legal/license/LicenseInternal": {
    "fqn": "flair-sdk:legal/license/LicenseInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "LicenseInternal",
      "sourceName": "src/legal/license/LicenseInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrLicenseLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseURI",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "customLicenseName",
              "type": "string"
            }
          ],
          "name": "CustomLicenseSet",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [],
          "name": "LicenseLocked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "enum ILicenseInternal.LicenseVersion",
              "name": "licenseVersion",
              "type": "uint8"
            }
          ],
          "name": "LicenseVersionSet",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\nimport \"./LicenseStorage.sol\";\nimport \"./ILicenseInternal.sol\";\n\n/**\n * @title Functionality to expose license name and URI for the assets of the contract.\n */\nabstract contract LicenseInternal is ILicenseInternal {\n    using Strings for uint256;\n    using LicenseStorage for LicenseStorage.Layout;\n\n    string internal constant A16Z_BASE_LICENSE_URI = \"ar://_D9kN1WrNWbCq55BSAGRbTB4bS3v8QAPTYmBThSbX3A/\";\n\n    function _licenseVersion() internal view virtual returns (ILicenseInternal.LicenseVersion) {\n        return LicenseStorage.layout().licenseVersion;\n    }\n\n    function _getLicenseURI() internal view virtual returns (string memory) {\n        LicenseStorage.Layout storage l = LicenseStorage.layout();\n\n        if (l.licenseVersion == LicenseVersion.CUSTOM) {\n            return l.customLicenseURI;\n        }\n        if (l.licenseVersion == LicenseVersion.UNLICENSED) {\n            return \"\";\n        }\n\n        return string.concat(A16Z_BASE_LICENSE_URI, uint256(l.licenseVersion).toString());\n    }\n\n    function _getLicenseName() internal view virtual returns (string memory) {\n        LicenseStorage.Layout storage l = LicenseStorage.layout();\n\n        if (l.licenseVersion == LicenseVersion.CUSTOM) {\n            return l.customLicenseName;\n        }\n\n        if (l.licenseVersion == LicenseVersion.UNLICENSED) {\n            return \"\";\n        }\n\n        if (LicenseVersion.CBE_CC0 == l.licenseVersion) return \"CBE_CC0\";\n        if (LicenseVersion.CBE_ECR == l.licenseVersion) return \"CBE_ECR\";\n        if (LicenseVersion.CBE_NECR == l.licenseVersion) return \"CBE_NECR\";\n        if (LicenseVersion.CBE_NECR_HS == l.licenseVersion) return \"CBE_NECR_HS\";\n        if (LicenseVersion.CBE_PR == l.licenseVersion) return \"CBE_PR\";\n        else return \"CBE_PR_HS\";\n    }\n\n    function _setCustomLicense(string calldata _customLicenseName, string calldata _customLicenseURI) internal virtual {\n        LicenseStorage.Layout storage l = LicenseStorage.layout();\n\n        if (l.licenseVersionLocked) {\n            revert ErrLicenseLocked();\n        }\n\n        l.licenseVersion = LicenseVersion.CUSTOM;\n        l.customLicenseName = _customLicenseName;\n        l.customLicenseURI = _customLicenseURI;\n\n        emit CustomLicenseSet(_customLicenseName, _customLicenseURI);\n    }\n\n    function _setLicenseVersion(LicenseVersion _newVersion) internal virtual {\n        LicenseStorage.Layout storage l = LicenseStorage.layout();\n\n        if (l.licenseVersionLocked) {\n            revert ErrLicenseLocked();\n        }\n\n        l.licenseVersion = _newVersion;\n\n        emit LicenseVersionSet(_newVersion);\n    }\n\n    function _lockLicenseVersion() internal virtual {\n        LicenseStorage.layout().licenseVersionLocked = true;\n\n        emit LicenseLocked();\n    }\n}\n"
  },
  "flair-sdk:legal/license/LicenseStorage": {
    "fqn": "flair-sdk:legal/license/LicenseStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "LicenseStorage",
      "sourceName": "src/legal/license/LicenseStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016795ffa27dda34639a4402a47ed73650e182173150b6dfbdf223dba6cf0ac9564736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016795ffa27dda34639a4402a47ed73650e182173150b6dfbdf223dba6cf0ac9564736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ILicenseInternal.sol\";\n\nlibrary LicenseStorage {\n    struct Layout {\n        ILicenseInternal.LicenseVersion licenseVersion;\n        string customLicenseURI;\n        string customLicenseName;\n        bool licenseVersionLocked;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.License\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:metatx/erc2771/ERC2771ContextInternal": {
    "fqn": "flair-sdk:metatx/erc2771/ERC2771ContextInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC2771ContextInternal",
      "sourceName": "src/metatx/erc2771/ERC2771ContextInternal.sol",
      "abi": [],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\nimport \"./ERC2771ContextStorage.sol\";\n\nabstract contract ERC2771ContextInternal is Context {\n    function _isTrustedForwarder(address operator) internal view returns (bool) {\n        return ERC2771ContextStorage.layout().trustedForwarder == operator;\n    }\n\n    function _msgSender() internal view virtual override returns (address sender) {\n        if (_isTrustedForwarder(msg.sender)) {\n            // The assembly code is more direct than the Solidity version using `abi.decode`.\n            /// @solidity memory-safe-assembly\n            assembly {\n                sender := shr(96, calldataload(sub(calldatasize(), 20)))\n            }\n        } else {\n            return super._msgSender();\n        }\n    }\n\n    function _msgData() internal view virtual override returns (bytes calldata) {\n        if (_isTrustedForwarder(msg.sender)) {\n            return msg.data[:msg.data.length - 20];\n        } else {\n            return super._msgData();\n        }\n    }\n}\n"
  },
  "flair-sdk:metatx/erc2771/ERC2771ContextStorage": {
    "fqn": "flair-sdk:metatx/erc2771/ERC2771ContextStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC2771ContextStorage",
      "sourceName": "src/metatx/erc2771/ERC2771ContextStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f31f70934eb8cbcc601cb15be9b7f33cc6481227a2d9df3ee6b70cc0740cc11764736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f31f70934eb8cbcc601cb15be9b7f33cc6481227a2d9df3ee6b70cc0740cc11764736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC2771ContextStorage {\n    struct Layout {\n        address trustedForwarder;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.ERC2771Context\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:metatx/erc2771/IERC2771Context": {
    "fqn": "flair-sdk:metatx/erc2771/IERC2771Context",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC2771Context",
      "sourceName": "src/metatx/erc2771/IERC2771Context.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC2771Context {\n    function isTrustedForwarder(address forwarder) external view returns (bool);\n}\n"
  },
  "flair-sdk:metatx/erc2771/IERC2771ContextAdmin": {
    "fqn": "flair-sdk:metatx/erc2771/IERC2771ContextAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC2771ContextAdmin",
      "sourceName": "src/metatx/erc2771/IERC2771ContextAdmin.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "trustedForwarder",
              "type": "address"
            }
          ],
          "name": "setTrustedForwarder",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC2771ContextAdmin {\n    function setTrustedForwarder(address trustedForwarder) external;\n}\n"
  },
  "flair-sdk:security/ReentrancyGuard": {
    "fqn": "flair-sdk:security/ReentrancyGuard",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ReentrancyGuard",
      "sourceName": "src/security/ReentrancyGuard.sol",
      "abi": [],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport { ReentrancyGuardStorage } from \"./ReentrancyGuardStorage.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    using ReentrancyGuardStorage for ReentrancyGuardStorage.Layout;\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(ReentrancyGuardStorage.layout()._status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        ReentrancyGuardStorage.layout()._status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        ReentrancyGuardStorage.layout()._status = _NOT_ENTERED;\n    }\n}\n"
  },
  "flair-sdk:security/ReentrancyGuardStorage": {
    "fqn": "flair-sdk:security/ReentrancyGuardStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ReentrancyGuardStorage",
      "sourceName": "src/security/ReentrancyGuardStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205aaf6b391a353c775146a075a16fb127ad6c79d3d8bf4115aa7335a9d46729af64736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205aaf6b391a353c775146a075a16fb127ad6c79d3d8bf4115aa7335a9d46729af64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ReentrancyGuardStorage {\n    struct Layout {\n        uint256 _status;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ReentrancyGuard\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/common/burnable/BurnableStorage": {
    "fqn": "flair-sdk:token/common/burnable/BurnableStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "BurnableStorage",
      "sourceName": "src/token/common/burnable/BurnableStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ce518a3e134dd80da190e2590828610fc8ca93e1a507c8396d95eff20bf04ad564736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ce518a3e134dd80da190e2590828610fc8ca93e1a507c8396d95eff20bf04ad564736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary BurnableStorage {\n    struct Layout {\n        uint256 pausedUntil;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.Burnable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/common/burnable/IBurnableAdmin": {
    "fqn": "flair-sdk:token/common/burnable/IBurnableAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IBurnableAdmin",
      "sourceName": "src/token/common/burnable/IBurnableAdmin.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newTimestamp",
              "type": "uint256"
            }
          ],
          "name": "setBurnablePausedUntil",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IBurnableAdmin {\n    function setBurnablePausedUntil(uint256 newTimestamp) external;\n}\n"
  },
  "flair-sdk:token/common/metadata/IMetadata": {
    "fqn": "flair-sdk:token/common/metadata/IMetadata",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IMetadata",
      "sourceName": "src/token/common/metadata/IMetadata.sol",
      "abi": [
        {
          "inputs": [],
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "baseURILocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fallbackURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "fallbackURILocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lastLockedTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "uriSuffix",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "uriSuffixLocked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IMetadata {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function baseURI() external view returns (string memory);\n\n    function baseURILocked() external view returns (bool);\n\n    function uriSuffix() external view returns (string memory);\n\n    function uriSuffixLocked() external view returns (bool);\n\n    function fallbackURI() external view returns (string memory);\n\n    function fallbackURILocked() external view returns (bool);\n\n    function lastLockedTokenId() external view returns (uint256);\n}\n"
  },
  "flair-sdk:token/common/metadata/IMetadataAdmin": {
    "fqn": "flair-sdk:token/common/metadata/IMetadataAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IMetadataAdmin",
      "sourceName": "src/token/common/metadata/IMetadataAdmin.sol",
      "abi": [
        {
          "inputs": [],
          "name": "lockBaseURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockFallbackURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockNameAndSymbol",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "lockURISuffix",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "lockURIUntil",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newBaseURI",
              "type": "string"
            }
          ],
          "name": "setBaseURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newFallbackURI",
              "type": "string"
            }
          ],
          "name": "setFallbackURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "name": "setName",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            }
          ],
          "name": "setSymbol",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "newTokenURI",
              "type": "string"
            }
          ],
          "name": "setURI",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "string[]",
              "name": "newTokenURIs",
              "type": "string[]"
            }
          ],
          "name": "setURIBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newURIPrefix",
              "type": "string"
            }
          ],
          "name": "setURISuffix",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IMetadataAdmin {\n    function setName(string calldata name) external;\n\n    function setSymbol(string calldata symbol) external;\n\n    function lockNameAndSymbol() external;\n\n    function setBaseURI(string calldata newBaseURI) external;\n\n    function setFallbackURI(string calldata newFallbackURI) external;\n\n    function setURISuffix(string calldata newURIPrefix) external;\n\n    function setURI(uint256 tokenId, string calldata newTokenURI) external;\n\n    function setURIBatch(uint256[] calldata tokenIds, string[] calldata newTokenURIs) external;\n\n    function lockBaseURI() external;\n\n    function lockFallbackURI() external;\n\n    function lockURISuffix() external;\n\n    function lockURIUntil(uint256 tokenId) external;\n}\n"
  },
  "flair-sdk:token/common/metadata/IMetadataInternal": {
    "fqn": "flair-sdk:token/common/metadata/IMetadataInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IMetadataInternal",
      "sourceName": "src/token/common/metadata/IMetadataInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IMetadataInternal {\n    event URI(string value, uint256 indexed tokenId);\n}\n"
  },
  "flair-sdk:token/common/metadata/MetadataAdminInternal": {
    "fqn": "flair-sdk:token/common/metadata/MetadataAdminInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "MetadataAdminInternal",
      "sourceName": "src/token/common/metadata/MetadataAdminInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "value",
              "type": "string"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "URI",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IMetadataInternal.sol\";\nimport \"./MetadataStorage.sol\";\n\nabstract contract MetadataAdminInternal is IMetadataInternal {\n    function _setName(string calldata name) internal {\n        require(!MetadataStorage.layout().nameAndSymbolLocked, \"Metadata: name is locked\");\n        MetadataStorage.layout().name = name;\n    }\n\n    function _setSymbol(string calldata symbol) internal {\n        require(!MetadataStorage.layout().nameAndSymbolLocked, \"Metadata: symbol is locked\");\n        MetadataStorage.layout().symbol = symbol;\n    }\n\n    function _lockNameAndSymbol() internal {\n        MetadataStorage.layout().nameAndSymbolLocked = true;\n    }\n\n    function _setBaseURI(string memory baseURI) internal virtual {\n        require(!MetadataStorage.layout().baseURILocked, \"Metadata: baseURI locked\");\n        MetadataStorage.layout().baseURI = baseURI;\n    }\n\n    function _setFallbackURI(string memory baseURI) internal virtual {\n        require(!MetadataStorage.layout().fallbackURILocked, \"Metadata: fallbackURI locked\");\n        MetadataStorage.layout().baseURI = baseURI;\n    }\n\n    function _setURI(uint256 tokenId, string memory tokenURI) internal virtual {\n        require(tokenId <= MetadataStorage.layout().lastLockedTokenId, \"Metadata: tokenURI locked\");\n        MetadataStorage.layout().tokenURIs[tokenId] = tokenURI;\n        emit URI(tokenURI, tokenId);\n    }\n\n    function _setURISuffix(string memory uriSuffix) internal virtual {\n        require(!MetadataStorage.layout().uriSuffixLocked, \"Metadata: uriSuffix locked\");\n        MetadataStorage.layout().uriSuffix = uriSuffix;\n    }\n\n    function _lockBaseURI() internal virtual {\n        MetadataStorage.layout().baseURILocked = true;\n    }\n\n    function _lockFallbackURI() internal virtual {\n        MetadataStorage.layout().fallbackURILocked = true;\n    }\n\n    function _lockURIUntil(uint256 tokenId) internal virtual {\n        MetadataStorage.layout().lastLockedTokenId = tokenId;\n    }\n\n    function _lockURISuffix() internal virtual {\n        MetadataStorage.layout().uriSuffixLocked = true;\n    }\n}\n"
  },
  "flair-sdk:token/common/metadata/MetadataStorage": {
    "fqn": "flair-sdk:token/common/metadata/MetadataStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "MetadataStorage",
      "sourceName": "src/token/common/metadata/MetadataStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206534a0522ae124f0c2f23c21c7338b3e958128d5afc2ed61403e8ca897fb34d864736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206534a0522ae124f0c2f23c21c7338b3e958128d5afc2ed61403e8ca897fb34d864736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary MetadataStorage {\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.Metadata\");\n\n    struct Layout {\n        string name;\n        string symbol;\n        bool nameAndSymbolLocked;\n        string baseURI;\n        bool baseURILocked;\n        string fallbackURI;\n        bool fallbackURILocked;\n        string uriSuffix;\n        bool uriSuffixLocked;\n        uint256 lastLockedTokenId;\n        mapping(uint256 => string) tokenURIs;\n    }\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/base/ERC1155Base": {
    "fqn": "flair-sdk:token/ERC1155/base/ERC1155Base",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155Base",
      "sourceName": "src/token/ERC1155/base/ERC1155Base.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b50611785806100206000396000f3fe608060405234801561001057600080fd5b50600436106100715760003560e01c8063a22cb46511610050578063a22cb465146100d1578063e985e9c5146100e4578063f242432a1461014f57600080fd5b8062fdd58e146100765780632eb2c2d61461009c5780634e1273f4146100b1575b600080fd5b61008961008436600461105f565b610162565b6040519081526020015b60405180910390f35b6100af6100aa36600461117a565b610175565b005b6100c46100bf36600461127e565b61025e565b6040516100939190611384565b6100af6100df366004611397565b610485565b61013f6100f23660046113d3565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6040519015158152602001610093565b6100af61015d366004611406565b6105af565b600061016e8383610695565b9392505050565b336001600160a01b0386168114806101d157506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6102485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61025681878787878761075a565b505050505050565b606081518351146102d75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161023f565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff81111561031657610316611089565b60405190808252806020026020018201604052801561033f578160200160208202803683370190505b50905060005b855181101561047c5760006001600160a01b031686828151811061036b5761036b6114ac565b60200260200101516001600160a01b0316036103ef5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f2061646472657373000000000000000000000000000000606482015260840161023f565b826000868381518110610404576104046114ac565b60200260200101518152602001908152602001600020600087838151811061042e5761042e6114ac565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610469576104696114ac565b6020908102919091010152600101610345565b50949350505050565b336001600160a01b03831681036105045760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161023f565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b336001600160a01b03871681148061060b57506001600160a01b0380881660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b61067d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161023f565b61068c81888888888888610776565b50505050505050565b60006001600160a01b0383166107135760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f2061646472657373000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b6107688686868686866107c9565b610256868686868686610a75565b61078587878787878787610c79565b61068c878787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e9d92505050565b6001600160a01b0384166108455760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023f565b81518351146108bc5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015610a145760008582815181106108fd576108fd6114ac565b60200260200101519050600085838151811061091b5761091b6114ac565b602090810291909101810151600084815286835260408082206001600160a01b038e1683529093529190912054909150818110156109c15760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290610a079084906114db565b909155506108e092505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a6492919061151a565b60405180910390a450505050505050565b6001600160a01b0384163b15610256576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190610ad29089908990889088908890600401611595565b6020604051808303816000875af1925050508015610b0d575060408051601f3d908101601f19168201909252610b0a918101906115f3565b60015b610bc257610b19611635565b806308c379a003610b525750610b2d611651565b80610b385750610b54565b8060405162461bcd60e51b815260040161023f91906116f9565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161023f565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461068c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023f565b6001600160a01b038516610cf55760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023f565b610d49878787610d0488610ff8565b610d0d88610ff8565b87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061025692505050565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038b1685529091529091205484811015610e025760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000868152602083815260408083206001600160a01b038c81168552925280832093889003909355881681529081208054869290610e419084906114db565b909155505060408051868152602081018690526001600160a01b03808916928a821692918c16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050565b6001600160a01b0384163b15610256576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e6190610efa908990899088908890889060040161170c565b6020604051808303816000875af1925050508015610f35575060408051601f3d908101601f19168201909252610f32918101906115f3565b60015b610f4157610b19611635565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461068c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611032576110326114ac565b602090810291909101015292915050565b80356001600160a01b038116811461105a57600080fd5b919050565b6000806040838503121561107257600080fd5b61107b83611043565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156110de576110de611089565b6040525050565b600067ffffffffffffffff8211156110ff576110ff611089565b5060051b60200190565b600082601f83011261111a57600080fd5b81356020611127826110e5565b60405161113482826110b8565b83815260059390931b850182019282810191508684111561115457600080fd5b8286015b8481101561116f5780358352918301918301611158565b509695505050505050565b600080600080600060a0868803121561119257600080fd5b61119b86611043565b945060206111aa818801611043565b9450604087013567ffffffffffffffff808211156111c757600080fd5b6111d38a838b01611109565b955060608901359150808211156111e957600080fd5b6111f58a838b01611109565b9450608089013591508082111561120b57600080fd5b818901915089601f83011261121f57600080fd5b81358181111561123157611231611089565b604051915061124984601f19601f84011601836110b8565b8082528a8482850101111561125d57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b6000806040838503121561129157600080fd5b823567ffffffffffffffff808211156112a957600080fd5b818501915085601f8301126112bd57600080fd5b813560206112ca826110e5565b6040516112d782826110b8565b83815260059390931b85018201928281019150898411156112f757600080fd5b948201945b8386101561131c5761130d86611043565b825294820194908201906112fc565b9650508601359250508082111561133257600080fd5b5061133f85828601611109565b9150509250929050565b600081518084526020808501945080840160005b838110156113795781518752958201959082019060010161135d565b509495945050505050565b60208152600061016e6020830184611349565b600080604083850312156113aa57600080fd5b6113b383611043565b9150602083013580151581146113c857600080fd5b809150509250929050565b600080604083850312156113e657600080fd5b6113ef83611043565b91506113fd60208401611043565b90509250929050565b60008060008060008060a0878903121561141f57600080fd5b61142887611043565b955061143660208801611043565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561146157600080fd5b818901915089601f83011261147557600080fd5b81358181111561148457600080fd5b8a602082850101111561149657600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115611515577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60408152600061152d6040830185611349565b828103602084015261153f8185611349565b95945050505050565b6000815180845260005b8181101561156e57602081850181015186830182015201611552565b81811115611580576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526115c160a0830186611349565b82810360608401526115d38186611349565b905082810360808401526115e78185611548565b98975050505050505050565b60006020828403121561160557600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461016e57600080fd5b600060033d111561164e5760046000803e5060005160e01c5b90565b600060443d101561165f5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156116ad57505050505090565b82850191508151818111156116c55750505050505090565b843d87010160208285010111156116df5750505050505090565b6116ee602082860101876110b8565b509095945050505050565b60208152600061016e6020830184611548565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261174460a0830184611548565b97965050505050505056fea26469706673582212206fb63a09a36961d76d32fdd56146927d6099b10c07031aa0fb836810d14e40c764736f6c634300080f0033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100715760003560e01c8063a22cb46511610050578063a22cb465146100d1578063e985e9c5146100e4578063f242432a1461014f57600080fd5b8062fdd58e146100765780632eb2c2d61461009c5780634e1273f4146100b1575b600080fd5b61008961008436600461105f565b610162565b6040519081526020015b60405180910390f35b6100af6100aa36600461117a565b610175565b005b6100c46100bf36600461127e565b61025e565b6040516100939190611384565b6100af6100df366004611397565b610485565b61013f6100f23660046113d3565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6040519015158152602001610093565b6100af61015d366004611406565b6105af565b600061016e8383610695565b9392505050565b336001600160a01b0386168114806101d157506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6102485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61025681878787878761075a565b505050505050565b606081518351146102d75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161023f565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff81111561031657610316611089565b60405190808252806020026020018201604052801561033f578160200160208202803683370190505b50905060005b855181101561047c5760006001600160a01b031686828151811061036b5761036b6114ac565b60200260200101516001600160a01b0316036103ef5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f2061646472657373000000000000000000000000000000606482015260840161023f565b826000868381518110610404576104046114ac565b60200260200101518152602001908152602001600020600087838151811061042e5761042e6114ac565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610469576104696114ac565b6020908102919091010152600101610345565b50949350505050565b336001600160a01b03831681036105045760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161023f565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209488168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b336001600160a01b03871681148061060b57506001600160a01b0380881660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b61067d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161023f565b61068c81888888888888610776565b50505050505050565b60006001600160a01b0383166107135760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f2061646472657373000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b6107688686868686866107c9565b610256868686868686610a75565b61078587878787878787610c79565b61068c878787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e9d92505050565b6001600160a01b0384166108455760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023f565b81518351146108bc5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b8451811015610a145760008582815181106108fd576108fd6114ac565b60200260200101519050600085838151811061091b5761091b6114ac565b602090810291909101810151600084815286835260408082206001600160a01b038e1683529093529190912054909150818110156109c15760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a168152908120805460019590950194839290610a079084906114db565b909155506108e092505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a6492919061151a565b60405180910390a450505050505050565b6001600160a01b0384163b15610256576040517fbc197c810000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063bc197c8190610ad29089908990889088908890600401611595565b6020604051808303816000875af1925050508015610b0d575060408051601f3d908101601f19168201909252610b0a918101906115f3565b60015b610bc257610b19611635565b806308c379a003610b525750610b2d611651565b80610b385750610b54565b8060405162461bcd60e51b815260040161023f91906116f9565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161023f565b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c81000000000000000000000000000000000000000000000000000000001461068c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023f565b6001600160a01b038516610cf55760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161023f565b610d49878787610d0488610ff8565b610d0d88610ff8565b87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061025692505050565b60008481527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038b1685529091529091205484811015610e025760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000868152602083815260408083206001600160a01b038c81168552925280832093889003909355881681529081208054869290610e419084906114db565b909155505060408051868152602081018690526001600160a01b03808916928a821692918c16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050565b6001600160a01b0384163b15610256576040517ff23a6e610000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063f23a6e6190610efa908990899088908890889060040161170c565b6020604051808303816000875af1925050508015610f35575060408051601f3d908101601f19168201909252610f32918101906115f3565b60015b610f4157610b19611635565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e61000000000000000000000000000000000000000000000000000000001461068c5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a6563746560448201527f6420746f6b656e73000000000000000000000000000000000000000000000000606482015260840161023f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611032576110326114ac565b602090810291909101015292915050565b80356001600160a01b038116811461105a57600080fd5b919050565b6000806040838503121561107257600080fd5b61107b83611043565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156110de576110de611089565b6040525050565b600067ffffffffffffffff8211156110ff576110ff611089565b5060051b60200190565b600082601f83011261111a57600080fd5b81356020611127826110e5565b60405161113482826110b8565b83815260059390931b850182019282810191508684111561115457600080fd5b8286015b8481101561116f5780358352918301918301611158565b509695505050505050565b600080600080600060a0868803121561119257600080fd5b61119b86611043565b945060206111aa818801611043565b9450604087013567ffffffffffffffff808211156111c757600080fd5b6111d38a838b01611109565b955060608901359150808211156111e957600080fd5b6111f58a838b01611109565b9450608089013591508082111561120b57600080fd5b818901915089601f83011261121f57600080fd5b81358181111561123157611231611089565b604051915061124984601f19601f84011601836110b8565b8082528a8482850101111561125d57600080fd5b80848401858401376000848284010152508093505050509295509295909350565b6000806040838503121561129157600080fd5b823567ffffffffffffffff808211156112a957600080fd5b818501915085601f8301126112bd57600080fd5b813560206112ca826110e5565b6040516112d782826110b8565b83815260059390931b85018201928281019150898411156112f757600080fd5b948201945b8386101561131c5761130d86611043565b825294820194908201906112fc565b9650508601359250508082111561133257600080fd5b5061133f85828601611109565b9150509250929050565b600081518084526020808501945080840160005b838110156113795781518752958201959082019060010161135d565b509495945050505050565b60208152600061016e6020830184611349565b600080604083850312156113aa57600080fd5b6113b383611043565b9150602083013580151581146113c857600080fd5b809150509250929050565b600080604083850312156113e657600080fd5b6113ef83611043565b91506113fd60208401611043565b90509250929050565b60008060008060008060a0878903121561141f57600080fd5b61142887611043565b955061143660208801611043565b94506040870135935060608701359250608087013567ffffffffffffffff8082111561146157600080fd5b818901915089601f83011261147557600080fd5b81358181111561148457600080fd5b8a602082850101111561149657600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115611515577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b60408152600061152d6040830185611349565b828103602084015261153f8185611349565b95945050505050565b6000815180845260005b8181101561156e57602081850181015186830182015201611552565b81811115611580576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526115c160a0830186611349565b82810360608401526115d38186611349565b905082810360808401526115e78185611548565b98975050505050505050565b60006020828403121561160557600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461016e57600080fd5b600060033d111561164e5760046000803e5060005160e01c5b90565b600060443d101561165f5790565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc803d016004833e81513d67ffffffffffffffff81602484011181841117156116ad57505050505090565b82850191508151818111156116c55750505050505090565b843d87010160208285010111156116df5750505050505090565b6116ee602082860101876110b8565b509095945050505050565b60208152600061016e6020830184611548565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261174460a0830184611548565b97965050505050505056fea26469706673582212206fb63a09a36961d76d32fdd56146927d6099b10c07031aa0fb836810d14e40c764736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../IERC1155.sol\";\nimport \"../IERC1155Receiver.sol\";\nimport \"./ERC1155BaseInternal.sol\";\n\n/**\n * @title Base ERC1155 contract\n * @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\n */\ncontract ERC1155Base is IERC1155, ERC1155BaseInternal {\n    /**\n     * @inheritdoc IERC1155\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balanceOf(account, id);\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        unchecked {\n            for (uint256 i; i < accounts.length; i++) {\n                require(accounts[i] != address(0), \"ERC1155: batch balance query for the zero address\");\n                batchBalances[i] = balances[ids[i]][accounts[i]];\n            }\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return ERC1155BaseStorage.layout().operatorApprovals[account][operator];\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function setApprovalForAll(address operator, bool status) public virtual {\n        address sender = _msgSender();\n        require(sender != operator, \"ERC1155: setting approval status for self\");\n        ERC1155BaseStorage.layout().operatorApprovals[sender][operator] = status;\n        emit ApprovalForAll(sender, operator, status);\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual {\n        address sender = _msgSender();\n        require(from == sender || isApprovedForAll(from, sender), \"ERC1155: caller is not owner nor approved\");\n        _safeTransfer(sender, from, to, id, amount, data);\n    }\n\n    /**\n     * @inheritdoc IERC1155\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        require(from == sender || isApprovedForAll(from, sender), \"ERC1155: caller is not owner nor approved\");\n        _safeTransferBatch(sender, from, to, ids, amounts, data);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/base/ERC1155BaseERC2771": {
    "fqn": "flair-sdk:token/ERC1155/base/ERC1155BaseERC2771",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155BaseERC2771",
      "sourceName": "src/token/ERC1155/base/ERC1155BaseERC2771.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../metatx/erc2771/ERC2771ContextInternal.sol\";\n\nimport \"./ERC1155Base.sol\";\n\n/**\n * @title Base ERC1155 contract with meta-transactions support (via ERC2771).\n */\nabstract contract ERC1155BaseERC2771 is ERC1155Base, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/base/ERC1155BaseInternal": {
    "fqn": "flair-sdk:token/ERC1155/base/ERC1155BaseInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155BaseInternal",
      "sourceName": "src/token/ERC1155/base/ERC1155BaseInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\nimport \"../IERC1155Events.sol\";\nimport \"../IERC1155Receiver.sol\";\nimport \"./ERC1155BaseStorage.sol\";\n\n/**\n * @title Base ERC1155 internal functions\n * @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\n */\nabstract contract ERC1155BaseInternal is Context, IERC1155Events {\n    using Address for address;\n\n    /**\n     * @notice query the balance of given token held by given address\n     * @param account address to query\n     * @param id token to query\n     * @return token balance\n     */\n    function _balanceOf(address account, uint256 id) internal view virtual returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return ERC1155BaseStorage.layout().balances[id][account];\n    }\n\n    /**\n     * @notice mint given quantity of tokens for given address\n     * @dev ERC1155Receiver implementation is not checked\n     * @param account beneficiary of minting\n     * @param id token ID\n     * @param amount quantity of tokens to mint\n     * @param data data payload\n     */\n    function _mint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) internal virtual {\n        address operator = _msgSender();\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n\n        _beforeTokenTransfer(operator, address(0), account, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        ERC1155BaseStorage.layout().balances[id][account] += amount;\n\n        emit TransferSingle(operator, address(0), account, id, amount);\n    }\n\n    /**\n     * @notice mint given quantity of tokens for given address\n     * @param account beneficiary of minting\n     * @param id token ID\n     * @param amount quantity of tokens to mint\n     * @param data data payload\n     */\n    function _safeMint(\n        address account,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) internal virtual {\n        _mint(account, id, amount, data);\n\n        _doSafeTransferAcceptanceCheck(_msgSender(), address(0), account, id, amount, data);\n    }\n\n    /**\n     * @notice mint batch of tokens for given address\n     * @dev ERC1155Receiver implementation is not checked\n     * @param account beneficiary of minting\n     * @param ids list of token IDs\n     * @param amounts list of quantities of tokens to mint\n     * @param data data payload\n     */\n    function _mintBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address sender = _msgSender();\n\n        _beforeTokenTransfer(sender, address(0), account, ids, amounts, data);\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        for (uint256 i; i < ids.length; ) {\n            balances[ids[i]][account] += amounts[i];\n            unchecked {\n                i++;\n            }\n        }\n\n        emit TransferBatch(sender, address(0), account, ids, amounts);\n    }\n\n    function _mintBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes[] calldata datas\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(accounts.length == amounts.length, \"ERC1155: accounts and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        for (uint256 i; i < ids.length; ) {\n            _beforeTokenTransfer(\n                operator,\n                address(0),\n                accounts[i],\n                _asSingletonArray(ids[i]),\n                _asSingletonArray(amounts[i]),\n                datas[i]\n            );\n\n            balances[ids[i]][accounts[i]] += amounts[i];\n\n            emit TransferSingle(operator, address(0), accounts[i], ids[i], amounts[i]);\n\n            unchecked {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * @notice mint batch of tokens for given address\n     * @param account beneficiary of minting\n     * @param ids list of token IDs\n     * @param amounts list of quantities of tokens to mint\n     * @param data data payload\n     */\n    function _safeMintBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) internal virtual {\n        _mintBatch(account, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(_msgSender(), address(0), account, ids, amounts, data);\n    }\n\n    /**\n     * @notice burn given quantity of tokens held by given address\n     * @param account holder of tokens to burn\n     * @param id token ID\n     * @param amount quantity of tokens to burn\n     */\n    function _burn(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n\n        address sender = _msgSender();\n\n        _beforeTokenTransfer(sender, account, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        mapping(address => uint256) storage balances = ERC1155BaseStorage.layout().balances[id];\n\n        unchecked {\n            require(balances[account] >= amount, \"ERC1155: burn amount exceeds balance\");\n            balances[account] -= amount;\n        }\n\n        emit TransferSingle(sender, account, address(0), id, amount);\n    }\n\n    /**\n     * @notice burn given batch of tokens held by given address\n     * @param account holder of tokens to burn\n     * @param ids token IDs\n     * @param amounts quantities of tokens to burn\n     */\n    function _burnBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata amounts\n    ) internal virtual {\n        require(account != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address sender = _msgSender();\n\n        _beforeTokenTransfer(sender, account, address(0), ids, amounts, \"\");\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        unchecked {\n            for (uint256 i; i < ids.length; i++) {\n                uint256 id = ids[i];\n                require(balances[id][account] >= amounts[i], \"ERC1155: burn amount exceeds balance\");\n                balances[id][account] -= amounts[i];\n            }\n        }\n\n        emit TransferBatch(sender, account, address(0), ids, amounts);\n    }\n\n    /**\n     * @notice transfer tokens between given addresses\n     * @dev ERC1155Receiver implementation is not checked\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function _transfer(\n        address operator,\n        address sender,\n        address recipient,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) internal virtual {\n        require(recipient != address(0), \"ERC1155: transfer to the zero address\");\n\n        _beforeTokenTransfer(operator, sender, recipient, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        unchecked {\n            uint256 senderBalance = balances[id][sender];\n            require(senderBalance >= amount, \"ERC1155: insufficient balances for transfer\");\n            balances[id][sender] = senderBalance - amount;\n        }\n\n        balances[id][recipient] += amount;\n\n        emit TransferSingle(operator, sender, recipient, id, amount);\n    }\n\n    /**\n     * @notice transfer tokens between given addresses\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function _safeTransfer(\n        address operator,\n        address sender,\n        address recipient,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) internal virtual {\n        _transfer(operator, sender, recipient, id, amount, data);\n\n        _doSafeTransferAcceptanceCheck(operator, sender, recipient, id, amount, data);\n    }\n\n    /**\n     * @notice transfer batch of tokens between given addresses\n     * @dev ERC1155Receiver implementation is not checked\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _transferBatch(\n        address operator,\n        address sender,\n        address recipient,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(recipient != address(0), \"ERC1155: transfer to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        _beforeTokenTransfer(operator, sender, recipient, ids, amounts, data);\n\n        mapping(uint256 => mapping(address => uint256)) storage balances = ERC1155BaseStorage.layout().balances;\n\n        for (uint256 i; i < ids.length; ) {\n            uint256 token = ids[i];\n            uint256 amount = amounts[i];\n\n            unchecked {\n                uint256 senderBalance = balances[token][sender];\n\n                require(senderBalance >= amount, \"ERC1155: insufficient balances for transfer\");\n\n                balances[token][sender] = senderBalance - amount;\n\n                i++;\n            }\n\n            // balance increase cannot be unchecked because ERC1155Base neither tracks nor validates a totalSupply\n            balances[token][recipient] += amount;\n        }\n\n        emit TransferBatch(operator, sender, recipient, ids, amounts);\n    }\n\n    /**\n     * @notice transfer batch of tokens between given addresses\n     * @param operator executor of transfer\n     * @param sender sender of tokens\n     * @param recipient receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _safeTransferBatch(\n        address operator,\n        address sender,\n        address recipient,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        _transferBatch(operator, sender, recipient, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, sender, recipient, ids, amounts, data);\n    }\n\n    /**\n     * @notice wrap given element in array of length 1\n     * @param element element to wrap\n     * @return singleton array\n     */\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n        return array;\n    }\n\n    /**\n     * @notice revert if applicable transfer recipient is not valid ERC1155Receiver\n     * @param operator executor of transfer\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                require(\n                    response == IERC1155Receiver.onERC1155Received.selector,\n                    \"ERC1155: ERC1155Receiver rejected tokens\"\n                );\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    /**\n     * @notice revert if applicable transfer recipient is not valid ERC1155Receiver\n     * @param operator executor of transfer\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                require(\n                    response == IERC1155Receiver.onERC1155BatchReceived.selector,\n                    \"ERC1155: ERC1155Receiver rejected tokens\"\n                );\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    /**\n     * @notice ERC1155 hook, called before all transfers including mint and burn\n     * @dev function should be overridden and new implementation must call super\n     * @dev called for both single and batch transfers\n     * @param operator executor of transfer\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param ids token IDs\n     * @param amounts quantities of tokens to transfer\n     * @param data data payload\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n}\n"
  },
  "flair-sdk:token/ERC1155/base/ERC1155BaseStorage": {
    "fqn": "flair-sdk:token/ERC1155/base/ERC1155BaseStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155BaseStorage",
      "sourceName": "src/token/ERC1155/base/ERC1155BaseStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096964da6ae644eb99c16422dc48079b9bcbf8fbad84b2cda68e56b230956d53364736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122096964da6ae644eb99c16422dc48079b9bcbf8fbad84b2cda68e56b230956d53364736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC1155BaseStorage {\n    struct Layout {\n        mapping(uint256 => mapping(address => uint256)) balances;\n        mapping(address => mapping(address => bool)) operatorApprovals;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"openzeppelin.contracts.storage.ERC1155Base\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/burnable/ERC1155BurnableExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/burnable/ERC1155BurnableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155BurnableExtension",
      "sourceName": "src/token/ERC1155/extensions/burnable/ERC1155BurnableExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../IERC1155.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155BurnableExtension.sol\";\n\n/**\n * @title Extension of {ERC1155} that allows users or approved operators to burn tokens.\n */\nabstract contract ERC1155BurnableExtension is IERC1155BurnableExtension, ERC1155BaseInternal {\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) public virtual {\n        require(\n            account == _msgSender() || IERC1155(address(this)).isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) public virtual {\n        require(\n            account == _msgSender() || IERC1155(address(this)).isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n\n    function burnByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _burn(account, id, amount);\n    }\n\n    function burnBatchByFacet(\n        address account,\n        uint256[] calldata ids,\n        uint256[] calldata values\n    ) public virtual {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/burnable/IERC1155BurnableExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/burnable/IERC1155BurnableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155BurnableExtension",
      "sourceName": "src/token/ERC1155/extensions/burnable/IERC1155BurnableExtension.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows holders or approved operators to burn tokens.\n */\ninterface IERC1155BurnableExtension {\n    function burn(\n        address account,\n        uint256 id,\n        uint256 value\n    ) external;\n\n    function burnBatch(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) external;\n\n    function burnByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function burnBatchByFacet(\n        address account,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155LockableExtension",
      "sourceName": "src/token/ERC1155/extensions/lockable/ERC1155LockableExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ticketTokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"./ERC1155LockableInternal.sol\";\nimport \"./IERC1155LockableExtension.sol\";\n\nabstract contract ERC1155LockableExtension is IERC1155LockableExtension, ERC1155LockableInternal {\n    function locked(address account, uint256 tokenId) public view virtual returns (uint256) {\n        return super._locked(account, tokenId);\n    }\n\n    function locked(address account, uint256[] calldata ticketTokenIds) public view virtual returns (uint256[] memory) {\n        uint256[] memory amounts = new uint256[](ticketTokenIds.length);\n\n        for (uint256 i = 0; i < ticketTokenIds.length; i++) {\n            amounts[i] = _locked(account, ticketTokenIds[i]);\n        }\n\n        return amounts;\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableExtension\n     */\n    function lockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _lock(account, id, amount);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableExtension\n     */\n    function lockByFacet(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        require(accounts.length == ids.length && accounts.length == amounts.length, \"INVALID_ARRAY_LENGTH\");\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            _lock(accounts[i], ids[i], amounts[i]);\n        }\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableExtension\n     */\n    function unlockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _unlock(account, id, amount);\n    }\n\n    /**\n     * @inheritdoc IERC1155LockableExtension\n     */\n    function unlockByFacet(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        require(accounts.length == ids.length && accounts.length == amounts.length, \"INVALID_ARRAY_LENGTH\");\n\n        for (uint256 i = 0; i < accounts.length; i++) {\n            _unlock(accounts[i], ids[i], amounts[i]);\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableInternal": {
    "fqn": "flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155LockableInternal",
      "sourceName": "src/token/ERC1155/extensions/lockable/ERC1155LockableInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./ERC1155LockableStorage.sol\";\n\nabstract contract ERC1155LockableInternal is ERC1155BaseInternal {\n    using ERC1155LockableStorage for ERC1155LockableStorage.Layout;\n\n    function _locked(address account, uint256 tokenId) internal view virtual returns (uint256) {\n        mapping(uint256 => uint256) storage locks = ERC1155LockableStorage.layout().lockedAmount[account];\n\n        return locks[tokenId];\n    }\n\n    /* INTERNAL */\n\n    function _lock(\n        address account,\n        uint256 tokenId,\n        uint256 amount\n    ) internal virtual {\n        mapping(uint256 => uint256) storage locks = ERC1155LockableStorage.layout().lockedAmount[account];\n\n        require(_balanceOf(account, tokenId) - locks[tokenId] >= amount, \"NOT_ENOUGH_BALANCE\");\n\n        locks[tokenId] += amount;\n    }\n\n    function _unlock(\n        address account,\n        uint256 tokenId,\n        uint256 amount\n    ) internal virtual {\n        mapping(uint256 => uint256) storage locks = ERC1155LockableStorage.layout().lockedAmount[account];\n\n        require(locks[tokenId] >= amount, \"NOT_ENOUGH_LOCKED\");\n\n        locks[tokenId] -= amount;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        if (from != address(0)) {\n            for (uint256 i = 0; i < ids.length; i++) {\n                require(\n                    _balanceOf(from, ids[i]) - ERC1155LockableStorage.layout().lockedAmount[from][ids[i]] >= amounts[i],\n                    \"LOCKED\"\n                );\n            }\n        }\n\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableStorage": {
    "fqn": "flair-sdk:token/ERC1155/extensions/lockable/ERC1155LockableStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155LockableStorage",
      "sourceName": "src/token/ERC1155/extensions/lockable/ERC1155LockableStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8176d776912fc3411b32b04a911214803335f786a81e2857b31e225088934da64736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8176d776912fc3411b32b04a911214803335f786a81e2857b31e225088934da64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC1155LockableStorage {\n    struct Layout {\n        mapping(address => mapping(uint256 => uint256)) lockedAmount;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155Lockable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/lockable/IERC1155LockableExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/lockable/IERC1155LockableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155LockableExtension",
      "sourceName": "src/token/ERC1155/extensions/lockable/IERC1155LockableExtension.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows other facets from the diamond to lock the tokens.\n */\ninterface IERC1155LockableExtension {\n    /**\n     * @dev Locks `amount` of tokens of `account`, of token type `id`.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function lockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function lockByFacet(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external;\n\n    /**\n     * @dev Un-locks `amount` of tokens of `account`, of token type `id`.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function unlockByFacet(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function unlockByFacet(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/mintable/ERC1155MintableExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/mintable/ERC1155MintableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155MintableExtension",
      "sourceName": "src/token/ERC1155/extensions/mintable/ERC1155MintableExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./IERC1155MintableExtension.sol\";\n\n/**\n * @title Extension of {ERC1155} that allows other facets of the diamond to mint based on arbitrary logic.\n */\nabstract contract ERC1155MintableExtension is IERC1155MintableExtension, ERC1155BaseInternal {\n    /**\n     * @inheritdoc IERC1155MintableExtension\n     */\n    function mintByFacet(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) public virtual {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _mint(to, id, amount, data);\n    }\n\n    /**\n     * @inheritdoc IERC1155MintableExtension\n     */\n    function mintByFacet(\n        address[] calldata tos,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes[] calldata datas\n    ) public virtual {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _mintBatch(tos, ids, amounts, datas);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/mintable/IERC1155MintableExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/mintable/IERC1155MintableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155MintableExtension",
      "sourceName": "src/token/ERC1155/extensions/mintable/IERC1155MintableExtension.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows other facets from the diamond to mint tokens.\n */\ninterface IERC1155MintableExtension {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function mintByFacet(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    function mintByFacet(\n        address[] calldata tos,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes[] calldata datas\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155SupplyExtension",
      "sourceName": "src/token/ERC1155/extensions/supply/ERC1155SupplyExtension.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ERC1155SupplyInternal.sol\";\nimport \"./IERC1155SupplyExtension.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n */\nabstract contract ERC1155SupplyExtension is IERC1155SupplyExtension, ERC1155SupplyInternal {\n    /**\n     * @inheritdoc IERC1155SupplyExtension\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply(id);\n    }\n\n    /**\n     * @inheritdoc IERC1155SupplyExtension\n     */\n    function maxSupply(uint256 id) public view virtual returns (uint256) {\n        return _maxSupply(id);\n    }\n\n    /**\n     * @inheritdoc IERC1155SupplyExtension\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return _exists(id);\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyInternal": {
    "fqn": "flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155SupplyInternal",
      "sourceName": "src/token/ERC1155/extensions/supply/ERC1155SupplyInternal.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../base/ERC1155BaseInternal.sol\";\nimport \"./ERC1155SupplyStorage.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n */\nabstract contract ERC1155SupplyInternal is ERC1155BaseInternal {\n    using ERC1155SupplyStorage for ERC1155SupplyStorage.Layout;\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function _totalSupply(uint256 id) internal view virtual returns (uint256) {\n        return ERC1155SupplyStorage.layout().totalSupply[id];\n    }\n\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function _maxSupply(uint256 id) internal view virtual returns (uint256) {\n        return ERC1155SupplyStorage.layout().maxSupply[id];\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function _exists(uint256 id) internal view virtual returns (bool) {\n        return ERC1155SupplyStorage.layout().totalSupply[id] > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual override {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        if (from == address(0)) {\n            mapping(uint256 => uint256) storage totalSupply = ERC1155SupplyStorage.layout().totalSupply;\n            mapping(uint256 => uint256) storage maxSupply = ERC1155SupplyStorage.layout().maxSupply;\n\n            for (uint256 i = 0; i < ids.length; ++i) {\n                totalSupply[ids[i]] += amounts[i];\n\n                require(totalSupply[ids[i]] <= maxSupply[ids[i]], \"SUPPLY_EXCEED_MAX\");\n            }\n        }\n\n        if (to == address(0)) {\n            mapping(uint256 => uint256) storage totalSupply = ERC1155SupplyStorage.layout().totalSupply;\n\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 id = ids[i];\n                uint256 amount = amounts[i];\n                uint256 supply = totalSupply[id];\n                require(supply >= amount, \"ERC1155: burn amount exceeds totalSupply\");\n                unchecked {\n                    totalSupply[id] = supply - amount;\n                }\n            }\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyStorage": {
    "fqn": "flair-sdk:token/ERC1155/extensions/supply/ERC1155SupplyStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155SupplyStorage",
      "sourceName": "src/token/ERC1155/extensions/supply/ERC1155SupplyStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5ac3005d488b246d1fde0b19bc302c06441ec6b8e26739b4fbdccd40fbb5af064736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c5ac3005d488b246d1fde0b19bc302c06441ec6b8e26739b4fbdccd40fbb5af064736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC1155SupplyStorage {\n    struct Layout {\n        mapping(uint256 => uint256) totalSupply;\n        mapping(uint256 => uint256) maxSupply;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155Supply\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/extensions/supply/IERC1155SupplyExtension": {
    "fqn": "flair-sdk:token/ERC1155/extensions/supply/IERC1155SupplyExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155SupplyExtension",
      "sourceName": "src/token/ERC1155/extensions/supply/IERC1155SupplyExtension.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that tracks supply and defines a max supply cap per token ID.\n */\ninterface IERC1155SupplyExtension {\n    /**\n     * @dev Total amount of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) external view returns (uint256);\n\n    /**\n     * @dev Maximum amount of tokens possible to exist for a given id.\n     */\n    function maxSupply(uint256 id) external view returns (uint256);\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) external view returns (bool);\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/locking/IERC1155LockableOwnable": {
    "fqn": "flair-sdk:token/ERC1155/facets/locking/IERC1155LockableOwnable",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155LockableOwnable",
      "sourceName": "src/token/ERC1155/facets/locking/IERC1155LockableOwnable.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows diamond owner to lock tokens.\n */\ninterface IERC1155LockableOwnable {\n    function lockByOwner(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function lockByOwner(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external;\n\n    function unlockByOwner(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function unlockByOwner(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/locking/IERC1155LockableRoleBased": {
    "fqn": "flair-sdk:token/ERC1155/facets/locking/IERC1155LockableRoleBased",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155LockableRoleBased",
      "sourceName": "src/token/ERC1155/facets/locking/IERC1155LockableRoleBased.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows grantee of LOCKER_ROLE to lock tokens.\n */\ninterface IERC1155LockableRoleBased {\n    function lockByRole(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function lockByRole(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external;\n\n    function unlockByRole(\n        address account,\n        uint256 id,\n        uint256 amount\n    ) external;\n\n    function unlockByRole(\n        address[] memory accounts,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/metadata/IERC1155Metadata": {
    "fqn": "flair-sdk:token/ERC1155/facets/metadata/IERC1155Metadata",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155Metadata",
      "sourceName": "src/token/ERC1155/facets/metadata/IERC1155Metadata.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC1155Metadata {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/minting/IERC1155MintableOwnable": {
    "fqn": "flair-sdk:token/ERC1155/facets/minting/IERC1155MintableOwnable",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155MintableOwnable",
      "sourceName": "src/token/ERC1155/facets/minting/IERC1155MintableOwnable.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "datas",
              "type": "bytes[]"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows diamond owner to mint tokens.\n */\ninterface IERC1155MintableOwnable {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond owner.\n     */\n    function mintByOwner(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    function mintByOwner(\n        address[] calldata tos,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes[] calldata datas\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/minting/IERC1155MintableRoleBased": {
    "fqn": "flair-sdk:token/ERC1155/facets/minting/IERC1155MintableRoleBased",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155MintableRoleBased",
      "sourceName": "src/token/ERC1155/facets/minting/IERC1155MintableRoleBased.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC1155} that allows a specific role to mint tokens.\n */\ninterface IERC1155MintableRoleBased {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC1155-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have MINTER_ROLE.\n     */\n    function mintByRole(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    function mintByRole(\n        address[] calldata tos,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes[] calldata data\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesStorage": {
    "fqn": "flair-sdk:token/ERC1155/facets/sales/ERC1155TieredSalesStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155TieredSalesStorage",
      "sourceName": "src/token/ERC1155/facets/sales/ERC1155TieredSalesStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209feb3aeb5efc7f568ece8b29c2bded927a24b425cd0552486cac0074dfb88a2764736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209feb3aeb5efc7f568ece8b29c2bded927a24b425cd0552486cac0074dfb88a2764736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC1155TieredSalesStorage {\n    struct Layout {\n        mapping(uint256 => uint256) tierToTokenId;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155TieredSales\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSales": {
    "fqn": "flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSales",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155TieredSales",
      "sourceName": "src/token/ERC1155/facets/sales/IERC1155TieredSales.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            }
          ],
          "name": "tierToTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tierIds",
              "type": "uint256[]"
            }
          ],
          "name": "tierToTokenId",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC1155TieredSales {\n    function tierToTokenId(uint256 tierId) external view returns (uint256);\n\n    function tierToTokenId(uint256[] calldata tierIds) external view returns (uint256[] memory);\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSalesAdmin": {
    "fqn": "flair-sdk:token/ERC1155/facets/sales/IERC1155TieredSalesAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155TieredSalesAdmin",
      "sourceName": "src/token/ERC1155/facets/sales/IERC1155TieredSalesAdmin.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tierId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "configureTierTokenId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tierIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "configureTierTokenId",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC1155TieredSalesAdmin {\n    function configureTierTokenId(uint256 tierId, uint256 tokenId) external;\n\n    function configureTierTokenId(uint256[] calldata tierIds, uint256[] calldata tokenIds) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyAdminStorage": {
    "fqn": "flair-sdk:token/ERC1155/facets/supply/ERC1155SupplyAdminStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC1155SupplyAdminStorage",
      "sourceName": "src/token/ERC1155/facets/supply/ERC1155SupplyAdminStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208623a06281cec527c1ebafa4597db6e3772f5a90aa1cbbd510edcba9b39ec3ac64736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208623a06281cec527c1ebafa4597db6e3772f5a90aa1cbbd510edcba9b39ec3ac64736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC1155SupplyAdminStorage {\n    struct Layout {\n        mapping(uint256 => bool) maxSupplyFrozen;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC1155SupplyAdmin\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC1155/facets/supply/IERC1155SupplyAdmin": {
    "fqn": "flair-sdk:token/ERC1155/facets/supply/IERC1155SupplyAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155SupplyAdmin",
      "sourceName": "src/token/ERC1155/facets/supply/IERC1155SupplyAdmin.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyFrozen",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "freezeMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "freezeMaxSupplyBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256"
            }
          ],
          "name": "setMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "tokenIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "newValues",
              "type": "uint256[]"
            }
          ],
          "name": "setMaxSupplyBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC1155SupplyAdmin {\n    error ErrMaxSupplyFrozen();\n\n    function setMaxSupply(uint256 tokenId, uint256 newValue) external;\n\n    function setMaxSupplyBatch(uint256[] calldata tokenIds, uint256[] calldata newValues) external;\n\n    function freezeMaxSupply(uint256 tokenId) external;\n\n    function freezeMaxSupplyBatch(uint256[] calldata tokenIds) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/IERC1155": {
    "fqn": "flair-sdk:token/ERC1155/IERC1155",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155",
      "sourceName": "src/token/ERC1155/IERC1155.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeBatchTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "status",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IERC1155Events.sol\";\n\n/**\n * @title ERC1155 interface\n * @dev see https://github.com/ethereum/EIPs/issues/1155\n */\ninterface IERC1155 is IERC1155Events {\n    /**\n     * @notice query the balance of given token held by given address\n     * @param account address to query\n     * @param id token to query\n     * @return token balance\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @notice query the balances of given tokens held by given addresses\n     * @param accounts addresss to query\n     * @param ids tokens to query\n     * @return token balances\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @notice query approval status of given operator with respect to given address\n     * @param account address to query for approval granted\n     * @param operator address to query for approval received\n     * @return whether operator is approved to spend tokens held by account\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @notice grant approval to or revoke approval from given operator to spend held tokens\n     * @param operator address whose approval status to update\n     * @param status whether operator should be considered approved\n     */\n    function setApprovalForAll(address operator, bool status) external;\n\n    /**\n     * @notice transfer tokens between given addresses, checking for ERC1155Receiver implementation if applicable\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param id token ID\n     * @param amount quantity of tokens to transfer\n     * @param data data payload\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @notice transfer batch of tokens between given addresses, checking for ERC1155Receiver implementation if applicable\n     * @param from sender of tokens\n     * @param to receiver of tokens\n     * @param ids list of token IDs\n     * @param amounts list of quantities of tokens to transfer\n     * @param data data payload\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
  },
  "flair-sdk:token/ERC1155/IERC1155Events": {
    "fqn": "flair-sdk:token/ERC1155/IERC1155Events",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155Events",
      "sourceName": "src/token/ERC1155/IERC1155Events.sol",
      "abi": [
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "indexed": false,
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "name": "TransferBatch",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TransferSingle",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @title Partial ERC1155 interface needed by internal functions\n */\ninterface IERC1155Events {\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n}\n"
  },
  "flair-sdk:token/ERC1155/IERC1155Receiver": {
    "fqn": "flair-sdk:token/ERC1155/IERC1155Receiver",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC1155Receiver",
      "sourceName": "src/token/ERC1155/IERC1155Receiver.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\n\n/**\n * @title ERC1155 transfer receiver interface\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
  },
  "flair-sdk:token/ERC721/base/ERC721ABase": {
    "fqn": "flair-sdk:token/ERC721/base/ERC721ABase",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721ABase",
      "sourceName": "src/token/ERC721/base/ERC721ABase.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x608060405234801561001057600080fd5b5061102a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80636352211e11610076578063a22cb4651161005b578063a22cb46514610154578063b88d4fde14610167578063e985e9c51461017a57600080fd5b80636352211e1461012057806370a082311461013357600080fd5b8063081812fc146100a8578063095ea7b3146100e557806323b872dd146100fa57806342842e0e1461010d575b600080fd5b6100bb6100b6366004610cef565b61019d565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100f86100f3366004610d31565b6101ae565b005b6100f8610108366004610d5b565b6101bc565b6100f861011b366004610d5b565b6101cc565b6100bb61012e366004610cef565b6101e7565b610146610141366004610d97565b6101f2565b6040519081526020016100dc565b6100f8610162366004610db2565b6101fd565b6100f8610175366004610e1d565b610207565b61018d610188366004610ef9565b610219565b60405190151581526020016100dc565b60006101a882610278565b92915050565b6101b88282610301565b5050565b6101c7838383610454565b505050565b6101c7838383604051806020016040528060008152506107e6565b60006101a882610850565b60006101a88261085b565b6101b882826108fc565b610213848484846107e6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff80831660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832093851683529290529081205460ff165b9392505050565b600061028382610a01565b6102b9576040517fcf4700e400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061030c82610850565b90503373ffffffffffffffffffffffffffffffffffffffff8216146103b45773ffffffffffffffffffffffffffffffffffffffff811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff166103b4576040517fcfb3b94200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c46602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600061045f82610a80565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104c6576040517fa114810000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008281527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c466020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff8816909114176105a15773ffffffffffffffffffffffffffffffffffffffff861660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832033845290915290205460ff166105a1576040517f59c896be00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff85166105ee576040517fea553b3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80156105f957600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c02000000000000000000000000000000000000000000000000000000001760008581527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120919091557c020000000000000000000000000000000000000000000000000000000084169003610783576001840160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260408120549003610781577faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f35481146107815760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c44602052604090208490555b505b838573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6107f1848484610454565b73ffffffffffffffffffffffffffffffffffffffff83163b156102135761081a84848484610b94565b610213576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006101a882610a80565b600073ffffffffffffffffffffffffffffffffffffffff82166108aa576040517f8f4eb60400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff1660009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c45602052604090205467ffffffffffffffff1690565b3373ffffffffffffffffffffffffffffffffffffffff83160361094b576040517fb06307db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3360008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c476020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60007faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f354821080156101a857505060009081527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c4460205260409020547c0100000000000000000000000000000000000000000000000000000000161590565b6000817faa3a0910ce5fb062d392dc5a532ff9d50bb9d0f614a8eda1a3ec786de0b761f354811015610b625760008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040812054907c010000000000000000000000000000000000000000000000000000000082169003610b60575b8060000361027157507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0160008181527f2569078dfb4b0305704d3008e7403993ae9601b85f7ae5e742de3de8f8011c446020526040902054610b02565b505b6040517fdf2d9b4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290610bef903390899088908890600401610f2c565b6020604051808303816000875af1925050508015610c2a575060408051601f3d908101601f19168201909252610c2791810190610fb2565b60015b610ca1573d808015610c58576040519150601f19603f3d011682016040523d82523d6000602084013e610c5d565b606091505b508051600003610c99576040517fd1a57ed600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b600060208284031215610d0157600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610d2c57600080fd5b919050565b60008060408385031215610d4457600080fd5b610d4d83610d08565b946020939093013593505050565b600080600060608486031215610d7057600080fd5b610d7984610d08565b9250610d8760208501610d08565b9150604084013590509250925092565b600060208284031215610da957600080fd5b61027182610d08565b60008060408385031215610dc557600080fd5b610dce83610d08565b915060208301358015158114610de357600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060008060808587031215610e3357600080fd5b610e3c85610d08565b9350610e4a60208601610d08565b925060408501359150606085013567ffffffffffffffff80821115610e6e57600080fd5b818701915087601f830112610e8257600080fd5b813581811115610e9457610e94610dee565b604051601f8201601f19908116603f01168101908382118183101715610ebc57610ebc610dee565b816040528281528a6020848701011115610ed557600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f0c57600080fd5b610f1583610d08565b9150610f2360208401610d08565b90509250929050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352602081871681850152856040850152608060608501528451915081608085015260005b82811015610f875785810182015185820160a001528101610f6b565b82811115610f9957600060a084870101525b5050601f01601f19169190910160a00195945050505050565b600060208284031215610fc457600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461027157600080fdfea264697066735822122024cd87bfe8031feddbe51e02b4b71f89449a15f193b339ca6bc0b4a7932eccd964736f6c634300080f0033",
      "deployedBytecode": "",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./ERC721ABaseInternal.sol\";\nimport \"./IERC721ABase.sol\";\n\n/**\n * @dev Adopted from ERC721AUpgradeable to remove name(), symbol(), tokenURI() and supportsInterface() as they'll be provided by independent facets.\n */\ncontract ERC721ABase is ERC721ABaseInternal, IERC721ABase {\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function balanceOf(address owner) external view virtual returns (uint256) {\n        return _balanceOf(owner);\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function ownerOf(uint256 tokenId) external view virtual returns (address) {\n        return _ownerOf(tokenId);\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function approve(address to, uint256 tokenId) external virtual {\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function getApproved(uint256 tokenId) external view virtual override returns (address) {\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function setApprovalForAll(address operator, bool approved) external virtual override {\n        _setApprovalForAll(operator, approved);\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function isApprovedForAll(address owner, address operator) external view virtual override returns (bool) {\n        return _isApprovedForAll(owner, operator);\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external virtual override {\n        _transferFrom(from, to, tokenId);\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external virtual override {\n        _safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @inheritdoc IERC721ABase\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) external virtual override {\n        _safeTransferFrom(from, to, tokenId, _data);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/base/ERC721ABaseERC2771": {
    "fqn": "flair-sdk:token/ERC721/base/ERC721ABaseERC2771",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721ABaseERC2771",
      "sourceName": "src/token/ERC721/base/ERC721ABaseERC2771.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../metatx/erc2771/ERC2771ContextInternal.sol\";\n\nimport \"./ERC721ABase.sol\";\n\n/**\n * @title Base ERC721A contract with meta-transactions support (via ERC2771).\n */\nabstract contract ERC721ABaseERC2771 is ERC721ABase, ERC2771ContextInternal {\n    function _msgSender() internal view virtual override(Context, ERC2771ContextInternal) returns (address) {\n        return ERC2771ContextInternal._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771ContextInternal) returns (bytes calldata) {\n        return ERC2771ContextInternal._msgData();\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/base/ERC721ABaseInternal": {
    "fqn": "flair-sdk:token/ERC721/base/ERC721ABaseInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721ABaseInternal",
      "sourceName": "src/token/ERC721/base/ERC721ABaseInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      ],
      "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220ffa174d3e622fc7b6f7dc6b0c47ef41ea7733e2614cc2d8e9637a0f18de1137764736f6c634300080f0033",
      "deployedBytecode": "0x6080604052600080fdfea2646970667358221220ffa174d3e622fc7b6f7dc6b0c47ef41ea7733e2614cc2d8e9637a0f18de1137764736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\nimport { ERC721A__IERC721ReceiverUpgradeable } from \"erc721a-upgradeable/contracts/ERC721AUpgradeable.sol\";\nimport \"erc721a-upgradeable/contracts/ERC721AStorage.sol\";\n\nimport \"../extensions/supply/ERC721SupplyStorage.sol\";\nimport \"./IERC721AInternal.sol\";\n\n/**\n * @dev Adopted from ERC721AUpgradeable to remove name(), symbol(), tokenURI() and supportsInterface() as they'll be provided by independent facets.\n */\ncontract ERC721ABaseInternal is IERC721AInternal, Context {\n    using ERC721AStorage for ERC721AStorage.Layout;\n    using ERC721SupplyStorage for ERC721SupplyStorage.Layout;\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to 0.\n        unchecked {\n            return ERC721SupplyStorage.layout().currentIndex;\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return ERC721SupplyStorage.layout().burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function _balanceOf(address owner) internal view virtual returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return ERC721AStorage.layout()._packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return\n            (ERC721AStorage.layout()._packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return\n            (ERC721AStorage.layout()._packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(ERC721AStorage.layout()._packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = ERC721AStorage.layout()._packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        ERC721AStorage.layout()._packedAddressData[owner] = packed;\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(ERC721AStorage.layout()._packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (ERC721AStorage.layout()._packedOwnerships[index] == 0) {\n            ERC721AStorage.layout()._packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (curr < ERC721SupplyStorage.layout().currentIndex) {\n                uint256 packed = ERC721AStorage.layout()._packedOwnerships[curr];\n                // If not burned.\n                if (packed & _BITMASK_BURNED == 0) {\n                    // Invariant:\n                    // There will always be an initialized ownership slot\n                    // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                    // before an unintialized ownership slot\n                    // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                    // Hence, `curr` will not underflow.\n                    //\n                    // We can directly compare the packed value.\n                    // If the address is zero, packed will be zero.\n                    while (packed == 0) {\n                        packed = ERC721AStorage.layout()._packedOwnerships[--curr];\n                    }\n                    return packed;\n                }\n            }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        address owner = _ownerOf(tokenId);\n\n        if (_msgSender() != owner)\n            if (!_isApprovedForAll(owner, _msgSender())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        ERC721AStorage.layout()._tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return ERC721AStorage.layout()._tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address operator, bool approved) internal virtual {\n        if (operator == _msgSender()) revert ApproveToCaller();\n\n        ERC721AStorage.layout()._operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function _isApprovedForAll(address owner, address operator) internal view virtual returns (bool) {\n        return ERC721AStorage.layout()._operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            tokenId < ERC721SupplyStorage.layout().currentIndex && // If within bounds,\n            ERC721AStorage.layout()._packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        ERC721AStorage.TokenApprovalRef storage tokenApproval = ERC721AStorage.layout()._tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSender()))\n            if (!_isApprovedForAll(from, _msgSender())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --ERC721AStorage.layout()._packedAddressData[from]; // Updates: `balance -= 1`.\n            ++ERC721AStorage.layout()._packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            ERC721AStorage.layout()._packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (ERC721AStorage.layout()._packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != ERC721SupplyStorage.layout().currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        ERC721AStorage.layout()._packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        _safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721ReceiverUpgradeable(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721ReceiverUpgradeable(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = ERC721SupplyStorage.layout().currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            ERC721AStorage.layout()._packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            ERC721AStorage.layout()._packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            ERC721SupplyStorage.layout().currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = ERC721SupplyStorage.layout().currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            ERC721AStorage.layout()._packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            ERC721AStorage.layout()._packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            ERC721SupplyStorage.layout().currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = ERC721SupplyStorage.layout().currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (ERC721SupplyStorage.layout().currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, \"\");\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSender()))\n                if (!_isApprovedForAll(from, _msgSender())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            ERC721AStorage.layout()._packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            ERC721AStorage.layout()._packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (ERC721AStorage.layout()._packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != ERC721SupplyStorage.layout().currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        ERC721AStorage.layout()._packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            ERC721SupplyStorage.layout().burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = ERC721AStorage.layout()._packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        ERC721AStorage.layout()._packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit),\n            // but we allocate 0x80 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 32-byte word to store the length,\n            // and 3 32-byte words to store a maximum of 78 digits. Total: 0x20 + 3 * 0x20 = 0x80.\n            str := add(mload(0x40), 0x80)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, str)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/base/IERC721ABase": {
    "fqn": "flair-sdk:token/ERC721/base/IERC721ABase",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721ABase",
      "sourceName": "src/token/ERC721/base/IERC721ABase.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "name": "safeTransferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "name": "setApprovalForAll",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IERC721AInternal.sol\";\n\n/**\n * @dev Interface of ERC721A, adopted from Azuki's IERC721AUpgradeable to remove name(), symbol(), tokenURI() and supportsInterface() functions, as they're provided by independent factes.\n */\ninterface IERC721ABase is IERC721AInternal {\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
  },
  "flair-sdk:token/ERC721/base/IERC721AInternal": {
    "fqn": "flair-sdk:token/ERC721/base/IERC721AInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721AInternal",
      "sourceName": "src/token/ERC721/base/IERC721AInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Interface of ERC721A adopted to contain everything except public functions.\n */\ninterface IERC721AInternal {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * The caller cannot approve to their own address.\n     */\n    error ApproveToCaller();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/burnable/ERC721ABurnableExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/burnable/ERC721ABurnableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721ABurnableExtension",
      "sourceName": "src/token/ERC721/extensions/burnable/ERC721ABurnableExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../base/ERC721ABaseInternal.sol\";\nimport \"./IERC721BurnableExtension.sol\";\n\n/**\n * @title Extension of {ERC721A} that allows users or approved operators to burn tokens.\n */\nabstract contract ERC721ABurnableExtension is IERC721BurnableExtension, ERC721ABaseInternal {\n    function burn(uint256 id) public virtual {\n        _burn(id, true);\n    }\n\n    function burnBatch(uint256[] memory ids) public virtual {\n        for (uint256 i = 0; i < ids.length; i++) {\n            _burn(ids[i], true);\n        }\n    }\n\n    /**\n     * @dev Burn from another facet, allow skipping of ownership check as facets are trusted.\n     */\n    function burnByFacet(uint256 id) public virtual {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _burn(id);\n    }\n\n    /**\n     * @dev Burn from another facet, allow skipping of ownership check as facets are trusted.\n     */\n    function burnBatchByFacet(uint256[] memory ids) public virtual {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _burn(ids[i]);\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/burnable/IERC721BurnableExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/burnable/IERC721BurnableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721BurnableExtension",
      "sourceName": "src/token/ERC721/extensions/burnable/IERC721BurnableExtension.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burn",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatch",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "burnBatchByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "burnByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC721} that allows holders or approved operators to burn tokens.\n */\ninterface IERC721BurnableExtension {\n    function burn(uint256 id) external;\n\n    function burnBatch(uint256[] memory ids) external;\n\n    function burnByFacet(uint256 id) external;\n\n    function burnBatchByFacet(uint256[] memory ids) external;\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/lockable/ERC721ALockableExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/lockable/ERC721ALockableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721ALockableExtension",
      "sourceName": "src/token/ERC721/extensions/lockable/ERC721ALockableExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ErrTokenLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Locked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Unlocked",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ticketTokenIds",
              "type": "uint256[]"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool[]",
              "name": "states",
              "type": "bool[]"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"./ERC721ALockableInternal.sol\";\nimport \"./IERC721LockableExtension.sol\";\n\nabstract contract ERC721ALockableExtension is IERC721LockableExtension, ERC721ALockableInternal {\n    function locked(uint256 tokenId) public view virtual returns (bool) {\n        return super._locked(tokenId);\n    }\n\n    function locked(uint256[] memory ticketTokenIds) public view virtual returns (bool[] memory states) {\n        states = new bool[](ticketTokenIds.length);\n\n        for (uint256 i = 0; i < ticketTokenIds.length; i++) {\n            states[i] = _locked(ticketTokenIds[i]);\n        }\n\n        return states;\n    }\n\n    /**\n     * @inheritdoc IERC721LockableExtension\n     */\n    function lockByFacet(uint256 id) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _lock(id);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableExtension\n     */\n    function lockByFacet(uint256[] memory ids) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n        for (uint256 i = 0; i < ids.length; i++) {\n            _lock(ids[i]);\n        }\n    }\n\n    /**\n     * @inheritdoc IERC721LockableExtension\n     */\n    function unlockByFacet(uint256 id) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n        _unlock(id);\n    }\n\n    /**\n     * @inheritdoc IERC721LockableExtension\n     */\n    function unlockByFacet(uint256[] memory ids) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n        for (uint256 i = 0; i < ids.length; i++) {\n            _unlock(ids[i]);\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/lockable/ERC721ALockableInternal": {
    "fqn": "flair-sdk:token/ERC721/extensions/lockable/ERC721ALockableInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721ALockableInternal",
      "sourceName": "src/token/ERC721/extensions/lockable/ERC721ALockableInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ErrTokenLocked",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Locked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Unlocked",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/BitMaps.sol\";\n\nimport \"../../base/ERC721ABaseInternal.sol\";\nimport \"./ERC721LockableStorage.sol\";\nimport \"./IERC721LockableInternal.sol\";\n\nabstract contract ERC721ALockableInternal is IERC721LockableInternal, ERC721ABaseInternal {\n    using BitMaps for BitMaps.BitMap;\n    using ERC721LockableStorage for ERC721LockableStorage.Layout;\n\n    function _locked(uint256 tokenId) internal view virtual returns (bool) {\n        return ERC721LockableStorage.layout().lockedTokens.get(tokenId);\n    }\n\n    /* INTERNAL */\n\n    function _lock(uint256 tokenId) internal virtual {\n        ERC721LockableStorage.layout().lockedTokens.set(tokenId);\n        emit Locked(tokenId);\n    }\n\n    function _unlock(uint256 tokenId) internal virtual {\n        ERC721LockableStorage.layout().lockedTokens.unset(tokenId);\n        emit Unlocked(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721A-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual override {\n        if (from != address(0)) {\n            for (uint256 i = 0; i < quantity; i++) {\n                if (_locked(startTokenId + i)) {\n                    revert ErrTokenLocked(startTokenId + i);\n                }\n            }\n        }\n\n        super._beforeTokenTransfers(from, to, startTokenId, quantity);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/lockable/ERC721LockableStorage": {
    "fqn": "flair-sdk:token/ERC721/extensions/lockable/ERC721LockableStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721LockableStorage",
      "sourceName": "src/token/ERC721/extensions/lockable/ERC721LockableStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220704c977de94800652aa5a74f69bdc521f1eb23da01c781c30649c0e87a4e2af064736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220704c977de94800652aa5a74f69bdc521f1eb23da01c781c30649c0e87a4e2af064736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/BitMaps.sol\";\n\nlibrary ERC721LockableStorage {\n    using BitMaps for BitMaps.BitMap;\n\n    struct Layout {\n        BitMaps.BitMap lockedTokens;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC721Lockable\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/lockable/IERC5192": {
    "fqn": "flair-sdk:token/ERC721/extensions/lockable/IERC5192",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC5192",
      "sourceName": "src/token/ERC721/extensions/lockable/IERC5192.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC5192 {\n    /// @notice Returns the locking status of an Soulbound Token\n    /// @dev SBTs assigned to zero address are considered invalid, and queries\n    /// about them do throw.\n    /// @param tokenId The identifier for an SBT.\n    function locked(uint256 tokenId) external view returns (bool);\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/lockable/IERC721LockableExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/lockable/IERC721LockableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721LockableExtension",
      "sourceName": "src/token/ERC721/extensions/lockable/IERC721LockableExtension.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ErrTokenLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Locked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Unlocked",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "locked",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"./IERC5192.sol\";\nimport \"./IERC721LockableInternal.sol\";\n\n/**\n * @dev Based on EIP-5192, extension of {ERC721} that allows other facets from the diamond to lock the tokens.\n */\ninterface IERC721LockableExtension is IERC5192, IERC721LockableInternal {\n    /**\n     * @dev Locks `amount` of tokens of `account`, of token type `id`.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function lockByFacet(uint256 id) external;\n\n    function lockByFacet(uint256[] memory ids) external;\n\n    /**\n     * @dev Un-locks `amount` of tokens of `account`, of token type `id`.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function unlockByFacet(uint256 id) external;\n\n    function unlockByFacet(uint256[] memory ids) external;\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/lockable/IERC721LockableInternal": {
    "fqn": "flair-sdk:token/ERC721/extensions/lockable/IERC721LockableInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721LockableInternal",
      "sourceName": "src/token/ERC721/extensions/lockable/IERC721LockableInternal.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "ErrTokenLocked",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Locked",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Unlocked",
          "type": "event"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC721LockableInternal {\n    error ErrTokenLocked(uint256 tokenId);\n\n    /// @notice Emitted when the locking status is changed to locked.\n    /// @dev If a token is minted and the status is locked, this event should be emitted.\n    /// @param tokenId The identifier for a token.\n    event Locked(uint256 tokenId);\n\n    /// @notice Emitted when the locking status is changed to unlocked.\n    /// @dev If a token is minted and the status is unlocked, this event should be emitted.\n    /// @param tokenId The identifier for a token.\n    event Unlocked(uint256 tokenId);\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/mintable/ERC721AMintableExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/mintable/ERC721AMintableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721AMintableExtension",
      "sourceName": "src/token/ERC721/extensions/mintable/ERC721AMintableExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrSenderIsNotSelf",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../../../common/Errors.sol\";\nimport \"../../base/ERC721ABaseInternal.sol\";\nimport \"./IERC721MintableExtension.sol\";\n\n/**\n * @title Extension of {ERC721A} that allows other facets of the diamond to mint based on arbitrary logic.\n */\nabstract contract ERC721AMintableExtension is IERC721MintableExtension, ERC721ABaseInternal {\n    /**\n     * @inheritdoc IERC721MintableExtension\n     */\n    function mintByFacet(address to, uint256 amount) public virtual {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        _mint(to, amount);\n    }\n\n    /**\n     * @inheritdoc IERC721MintableExtension\n     */\n    function mintByFacet(address[] calldata tos, uint256[] calldata amounts) public virtual override {\n        if (address(this) != msg.sender) {\n            revert ErrSenderIsNotSelf();\n        }\n\n        for (uint256 i = 0; i < tos.length; i++) {\n            _mint(tos[i], amounts[i]);\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/mintable/IERC721MintableExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/mintable/IERC721MintableExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721MintableExtension",
      "sourceName": "src/token/ERC721/extensions/mintable/IERC721MintableExtension.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByFacet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC721A} that allows other facets from the diamond to mint tokens.\n */\ninterface IERC721MintableExtension {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC721A-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond itself (other facets).\n     */\n    function mintByFacet(address to, uint256 amount) external;\n\n    function mintByFacet(address[] memory tos, uint256[] memory amounts) external;\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/supply/ERC721ASupplyExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/supply/ERC721ASupplyExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721ASupplyExtension",
      "sourceName": "src/token/ERC721/extensions/supply/ERC721ASupplyExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ApprovalCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApprovalQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ApproveToCaller",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "BalanceQueryForZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "ErrMaxSupplyExceeded",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintERC2309QuantityExceedsLimit",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "MintZeroQuantity",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnerQueryForNonexistentToken",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "OwnershipNotInitializedForExtraData",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferCallerNotOwnerNorApproved",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferFromIncorrectOwner",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToNonERC721ReceiverImplementer",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "TransferToZeroAddress",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "URIQueryForNonexistentToken",
          "type": "error"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "fromTokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "toTokenId",
              "type": "uint256"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "name": "ConsecutiveTransfer",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/BitMaps.sol\";\n\nimport \"../../base/ERC721ABaseInternal.sol\";\nimport \"./ERC721SupplyStorage.sol\";\nimport \"./ERC721SupplyInternal.sol\";\nimport \"./IERC721SupplyExtension.sol\";\n\nabstract contract ERC721ASupplyExtension is IERC721SupplyExtension, ERC721ABaseInternal, ERC721SupplyInternal {\n    using ERC721SupplyStorage for ERC721SupplyStorage.Layout;\n\n    function totalSupply() external view virtual override returns (uint256) {\n        return _totalSupply();\n    }\n\n    function maxSupply() external view virtual override returns (uint256) {\n        return _maxSupply();\n    }\n\n    /**\n     * @dev See {ERC721A-_beforeTokenTransfer}.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual override {\n        if (to != address(0)) {\n            if (_totalSupply() + quantity > ERC721SupplyStorage.layout().maxSupply) {\n                revert ErrMaxSupplyExceeded();\n            }\n        }\n\n        super._beforeTokenTransfers(from, to, startTokenId, quantity);\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/supply/ERC721SupplyInternal": {
    "fqn": "flair-sdk:token/ERC721/extensions/supply/ERC721SupplyInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721SupplyInternal",
      "sourceName": "src/token/ERC721/extensions/supply/ERC721SupplyInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyExceeded",
          "type": "error"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/structs/BitMaps.sol\";\n\nimport \"../../base/ERC721ABaseInternal.sol\";\nimport \"./IERC721SupplyInternal.sol\";\n\nabstract contract ERC721SupplyInternal is IERC721SupplyInternal {\n    using ERC721SupplyStorage for ERC721SupplyStorage.Layout;\n\n    function _totalSupply() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex` times.\n        unchecked {\n            return ERC721SupplyStorage.layout().currentIndex - ERC721SupplyStorage.layout().burnCounter;\n        }\n    }\n\n    function _maxSupply() internal view returns (uint256) {\n        return ERC721SupplyStorage.layout().maxSupply;\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/supply/ERC721SupplyStorage": {
    "fqn": "flair-sdk:token/ERC721/extensions/supply/ERC721SupplyStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721SupplyStorage",
      "sourceName": "src/token/ERC721/extensions/supply/ERC721SupplyStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd7c417c716308015e951cc55ede6d042f28cf02ba1489d25e55bb8a3804a2b564736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fd7c417c716308015e951cc55ede6d042f28cf02ba1489d25e55bb8a3804a2b564736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC721SupplyStorage {\n    struct Layout {\n        // The next token ID to be minted.\n        uint256 currentIndex;\n        // The number of tokens burned.\n        uint256 burnCounter;\n        // Maximum possible supply of tokens.\n        uint256 maxSupply;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC721Supply\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/supply/IERC721SupplyExtension": {
    "fqn": "flair-sdk:token/ERC721/extensions/supply/IERC721SupplyExtension",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721SupplyExtension",
      "sourceName": "src/token/ERC721/extensions/supply/IERC721SupplyExtension.sol",
      "abi": [
        {
          "inputs": [],
          "name": "maxSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC721} that tracks supply and defines a max supply cap.\n */\ninterface IERC721SupplyExtension {\n    /**\n     * @dev Total amount of tokens that exist in the collection.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Maximum amount of tokens possible to exist.\n     */\n    function maxSupply() external view returns (uint256);\n}\n"
  },
  "flair-sdk:token/ERC721/extensions/supply/IERC721SupplyInternal": {
    "fqn": "flair-sdk:token/ERC721/extensions/supply/IERC721SupplyInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721SupplyInternal",
      "sourceName": "src/token/ERC721/extensions/supply/IERC721SupplyInternal.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyExceeded",
          "type": "error"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC721SupplyInternal {\n    error ErrMaxSupplyExceeded();\n}\n"
  },
  "flair-sdk:token/ERC721/facets/locking/IERC721LockableOwnable": {
    "fqn": "flair-sdk:token/ERC721/facets/locking/IERC721LockableOwnable",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721LockableOwnable",
      "sourceName": "src/token/ERC721/facets/locking/IERC721LockableOwnable.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC721} that allows diamond owner to lock tokens.\n */\ninterface IERC721LockableOwnable {\n    function lockByOwner(uint256 id) external;\n\n    function lockByOwner(uint256[] memory ids) external;\n\n    function unlockByOwner(uint256 id) external;\n\n    function unlockByOwner(uint256[] memory ids) external;\n}\n"
  },
  "flair-sdk:token/ERC721/facets/locking/IERC721LockableRoleBased": {
    "fqn": "flair-sdk:token/ERC721/facets/locking/IERC721LockableRoleBased",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721LockableRoleBased",
      "sourceName": "src/token/ERC721/facets/locking/IERC721LockableRoleBased.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "lockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "name": "unlockByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC721} that allows grantee of LOCKER_ROLE to lock tokens.\n */\ninterface IERC721LockableRoleBased {\n    function lockByRole(uint256 id) external;\n\n    function lockByRole(uint256[] memory ids) external;\n\n    function unlockByRole(uint256 id) external;\n\n    function unlockByRole(uint256[] memory ids) external;\n}\n"
  },
  "flair-sdk:token/ERC721/facets/metadata/IERC721Metadata": {
    "fqn": "flair-sdk:token/ERC721/facets/metadata/IERC721Metadata",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721Metadata",
      "sourceName": "src/token/ERC721/facets/metadata/IERC721Metadata.sol",
      "abi": [
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC721Metadata {\n    /// @notice A descriptive name for a collection of NFTs in this contract\n    function name() external view returns (string memory);\n\n    /// @notice An abbreviated name for NFTs in this contract\n    function symbol() external view returns (string memory);\n\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n    /// @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n    ///  3986. The URI may point to a JSON file that conforms to the \"ERC721\n    ///  Metadata JSON Schema\".\n    function tokenURI(uint256 _tokenId) external view returns (string memory);\n}\n"
  },
  "flair-sdk:token/ERC721/facets/minting/IERC721MintableOwnable": {
    "fqn": "flair-sdk:token/ERC721/facets/minting/IERC721MintableOwnable",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721MintableOwnable",
      "sourceName": "src/token/ERC721/facets/minting/IERC721MintableOwnable.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByOwner",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC721} that allows diamond owner to mint tokens.\n */\ninterface IERC721MintableOwnable {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC721-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must be diamond owner.\n     */\n    function mintByOwner(address to, uint256 amount) external;\n\n    function mintByOwner(address[] calldata tos, uint256[] calldata amounts) external;\n}\n"
  },
  "flair-sdk:token/ERC721/facets/minting/IERC721MintableRoleBased": {
    "fqn": "flair-sdk:token/ERC721/facets/minting/IERC721MintableRoleBased",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721MintableRoleBased",
      "sourceName": "src/token/ERC721/facets/minting/IERC721MintableRoleBased.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "tos",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            }
          ],
          "name": "mintByRole",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\n/**\n * @dev Extension of {ERC721} that allows a specific role to mint tokens.\n */\ninterface IERC721MintableRoleBased {\n    /**\n     * @dev Creates `amount` new tokens for `to`, of token type `id`.\n     *\n     * See {ERC721-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have MINTER_ROLE.\n     */\n    function mintByRole(address to, uint256 amount) external;\n\n    function mintByRole(address[] calldata tos, uint256[] calldata amounts) external;\n}\n"
  },
  "flair-sdk:token/ERC721/facets/supply/ERC721SupplyAdminInternal": {
    "fqn": "flair-sdk:token/ERC721/facets/supply/ERC721SupplyAdminInternal",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721SupplyAdminInternal",
      "sourceName": "src/token/ERC721/facets/supply/ERC721SupplyAdminInternal.sol",
      "abi": [],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nimport \"../../extensions/supply/ERC721SupplyStorage.sol\";\nimport \"../../../../access/ownable/OwnableInternal.sol\";\nimport \"./ERC721SupplyAdminStorage.sol\";\nimport \"./IERC721SupplyAdmin.sol\";\n\nabstract contract ERC721SupplyAdminInternal {\n    using ERC721SupplyAdminStorage for ERC721SupplyAdminStorage.Layout;\n    using ERC721SupplyStorage for ERC721SupplyStorage.Layout;\n\n    function _setMaxSupply(uint256 newValue) internal virtual {\n        if (ERC721SupplyAdminStorage.layout().maxSupplyFrozen) {\n            revert IERC721SupplyAdmin.ErrMaxSupplyFrozen();\n        }\n\n        ERC721SupplyStorage.layout().maxSupply = newValue;\n    }\n\n    function _freezeMaxSupply() internal virtual {\n        ERC721SupplyAdminStorage.layout().maxSupplyFrozen = true;\n    }\n\n    function _maxSupplyFrozen() internal view virtual returns (bool) {\n        return ERC721SupplyAdminStorage.layout().maxSupplyFrozen;\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/supply/ERC721SupplyAdminStorage": {
    "fqn": "flair-sdk:token/ERC721/facets/supply/ERC721SupplyAdminStorage",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ERC721SupplyAdminStorage",
      "sourceName": "src/token/ERC721/facets/supply/ERC721SupplyAdminStorage.sol",
      "abi": [],
      "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220752d1e33c0f960c26e9f0dc926591c8536d0ea25df291813805068a4dc4d9a9164736f6c634300080f0033",
      "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220752d1e33c0f960c26e9f0dc926591c8536d0ea25df291813805068a4dc4d9a9164736f6c634300080f0033",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\nlibrary ERC721SupplyAdminStorage {\n    struct Layout {\n        bool maxSupplyFrozen;\n    }\n\n    bytes32 internal constant STORAGE_SLOT = keccak256(\"v2.flair.contracts.storage.ERC721SupplyAdmin\");\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
  },
  "flair-sdk:token/ERC721/facets/supply/IERC721SupplyAdmin": {
    "fqn": "flair-sdk:token/ERC721/facets/supply/IERC721SupplyAdmin",
    "version": "2.14.0",
    "artifact": {
      "_format": "hh-sol-artifact-1",
      "contractName": "IERC721SupplyAdmin",
      "sourceName": "src/token/ERC721/facets/supply/IERC721SupplyAdmin.sol",
      "abi": [
        {
          "inputs": [],
          "name": "ErrMaxSupplyFrozen",
          "type": "error"
        },
        {
          "inputs": [],
          "name": "freezeMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "maxSupplyFrozen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256"
            }
          ],
          "name": "setMaxSupply",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x",
      "deployedBytecode": "0x",
      "linkReferences": {},
      "deployedLinkReferences": {}
    },
    "sourceCode": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.15;\n\ninterface IERC721SupplyAdmin {\n    error ErrMaxSupplyFrozen();\n\n    function setMaxSupply(uint256 newValue) external;\n\n    function freezeMaxSupply() external;\n\n    function maxSupplyFrozen() external view returns (bool);\n}\n"
  }
}
