/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FlairFactory, FlairFactoryInterface } from "../FlairFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxyAddress",
        type: "address",
      },
    ],
    name: "ProxyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "WithdrawPowerRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "claimTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cloneDeterministicSimple",
    outputs: [
      {
        internalType: "address",
        name: "deployedProxy",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockWithdrawMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockWithdrawRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "predictDeterministicSimple",
    outputs: [
      {
        internalType: "address",
        name: "deployedProxy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeWithdrawPower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WithdrawMode",
        name: "_withdrawMode",
        type: "uint8",
      },
    ],
    name: "setWithdrawMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_withdrawRecipient",
        type: "address",
      },
    ],
    name: "setWithdrawRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "claimTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawMode",
    outputs: [
      {
        internalType: "enum WithdrawMode",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawModeLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawPowerRevoked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRecipientLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d336200002d565b6200002762000088565b62000390565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff1615808015620000a95750600054600160ff909116105b80620000d95750620000c630620001bd60201b62000c071760201c565b158015620000d9575060005460ff166001145b620001425760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000166576000805461ff0019166101001790555b62000173336000620001cc565b8015620001ba576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620002285760405162461bcd60e51b815260206004820152602b602482015260008051602062001a0a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b62000234828262000238565b5050565b600054610100900460ff16620002945760405162461bcd60e51b815260206004820152602b602482015260008051602062001a0a83398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b620002a663ac2ba33360e01b620002f6565b600280546001600160a01b0384166001600160a01b0319821681178355839291600162ff000160a01b03191617600160b01b836003811115620002ed57620002ed6200037a565b02179055505050565b6001600160e01b03198082169003620003525760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640162000139565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b634e487b7160e01b600052602160045260246000fd5b61166a80620003a06000396000f3fe6080604052600436106101295760003560e01c8063837fe140116100a5578063c723955a11610074578063dcbe353f11610059578063dcbe353f1461030e578063de6d6d961461032e578063f2fde38b1461034e57600080fd5b8063c723955a146102e4578063da82b227146102f957600080fd5b8063837fe1401461026a5780638da5cb5b1461027f578063af121f54146102a3578063c0bb38ff146102c457600080fd5b806347791ece116100fc5780636057e0ec116100e15780636057e0ec1461021f578063715018a6146102405780638129fc1c1461025557600080fd5b806347791ece146101eb57806349561cb9146101fe57600080fd5b806301ffc9a71461012e57806310db94b9146101635780632c2330671461019b5780632d00b587146101bd575b600080fd5b34801561013a57600080fd5b5061014e610149366004611301565b61036e565b60405190151581526020015b60405180910390f35b34801561016f57600080fd5b5061018361017e366004611347565b6103c7565b6040516001600160a01b03909116815260200161015a565b3480156101a757600080fd5b506101bb6101b6366004611371565b61041b565b005b3480156101c957600080fd5b506002546101de90600160b01b900460ff1681565b60405161015a91906113a8565b6101836101f93660046113d0565b6104b3565b34801561020a57600080fd5b5060025461014e90600160b81b900460ff1681565b34801561022b57600080fd5b5060025461014e90600160a01b900460ff1681565b34801561024c57600080fd5b506101bb61060a565b34801561026157600080fd5b506101bb61061e565b34801561027657600080fd5b506101bb610741565b34801561028b57600080fd5b506000546201000090046001600160a01b0316610183565b3480156102af57600080fd5b5060025461014e90600160a81b900460ff1681565b3480156102d057600080fd5b506101bb6102df366004611457565b6107bc565b3480156102f057600080fd5b506101bb610836565b34801561030557600080fd5b506101bb6108c8565b34801561031a57600080fd5b50600254610183906001600160a01b031681565b34801561033a57600080fd5b506101bb6103493660046114be565b610929565b34801561035a57600080fd5b506101bb610369366004611457565b610b7a565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614806103c157506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810182905260009081906054016040516020818303038152906040528051906020012090506104138482610c16565b949350505050565b610423610c99565b600254600160b81b900460ff161561046b5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064015b60405180910390fd5b600280548291907fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b8360038111156104ab576104ab611392565b021790555050565b6040516bffffffffffffffffffffffff193360601b1660208201526034810184905260009081906054016040516020818303038152906040528051906020012090506104ff8682610cfa565b915082156105cb57600080836001600160a01b0316868660405161052492919061152a565b6000604051808303816000865af19150503d8060008114610561576040519150601f19603f3d011682016040523d82523d6000602084013e610566565b606091505b5091509150816105c8578051156105805780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e4500000000000000000000000000000000006044820152606401610462565b50505b6040516001600160a01b0383169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b610612610c99565b61061c6000610db1565b565b600054610100900460ff161580801561063e5750600054600160ff909116105b806106585750303b158015610658575060005460ff166001145b6106ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610462565b6000805460ff1916600117905580156106ed576000805461ff0019166101001790555b6106f8336000610e22565b801561073e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b610749610c99565b600254600160a01b900460ff161561078c5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610462565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b6107c4610c99565b600254600160a01b900460ff16156108075760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b6044820152606401610462565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b61083e610c99565b600254600160b81b900460ff16156108985760405162461bcd60e51b815260206004820152600560248201527f4f434b45440000000000000000000000000000000000000000000000000000006044820152606401610462565b600280547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b179055565b6108d0610c99565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b61093233610ead565b6002546001600160a01b031661098a5760405162461bcd60e51b815260206004820152601560248201527f57495448445241572f4e4f5f524543495049454e5400000000000000000000006044820152606401610462565b600254600160a81b900460ff16156109e45760405162461bcd60e51b815260206004820181905260248201527f57495448445241572f454d455247454e43595f504f5745525f5245564f4b45446044820152606401610462565b60005b83811015610b36576000858583818110610a0357610a0361153a565b9050602002016020810190610a189190611457565b6001600160a01b031603610a5b57610a56838383818110610a3b57610a3b61153a565b6002546001600160a01b03169260209091020135905061104b565b610b24565b848482818110610a6d57610a6d61153a565b9050602002016020810190610a829190611457565b6002546001600160a01b039182169163a9059cbb9116858585818110610aaa57610aaa61153a565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610afe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b229190611550565b505b80610b2e81611572565b9150506109e7565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a584848484604051610b6c9493929190611599565b60405180910390a150505050565b610b82610c99565b6001600160a01b038116610bfe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610462565b61073e81610db1565b6001600160a01b03163b151590565b6000610c928383306040517f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000008152606093841b60148201527f5af43d82803e903d91602b57fd5bf3ff000000000000000000000000000000006028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b6000546001600160a01b036201000090910416331461061c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610462565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528360601b60148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152826037826000f59150506001600160a01b0381166103c15760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610462565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff16610e9f5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610462565b610ea98282611169565b5050565b6003600254600160b01b900460ff166003811115610ecd57610ecd611392565b03610f1a5760405162461bcd60e51b815260206004820152600f60248201527f57495448445241572f4c4f434b454400000000000000000000000000000000006044820152606401610462565b60028054600160b01b900460ff166003811115610f3957610f39611392565b03610f415750565b6001600254600160b01b900460ff166003811115610f6157610f61611392565b03610fc3576002546001600160a01b0382811691161461073e5760405162461bcd60e51b815260206004820152601760248201527f57495448445241572f4f4e4c595f524543495049454e540000000000000000006044820152606401610462565b6000600254600160b01b900460ff166003811115610fe357610fe3611392565b0361073e576000546001600160a01b0382811662010000909204161461073e5760405162461bcd60e51b815260206004820152601360248201527f57495448445241572f4f4e4c595f4f574e4552000000000000000000000000006044820152606401610462565b8047101561109b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610462565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110e8576040519150601f19603f3d011682016040523d82523d6000602084013e6110ed565b606091505b50509050806111645760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610462565b505050565b600054610100900460ff166111e65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610462565b61120f7fac2ba3330000000000000000000000000000000000000000000000000000000061127f565b600280546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff198216811783558392917fffffffffffffffffff00ffff00000000000000000000000000000000000000001617600160b01b83600381111561127657611276611392565b02179055505050565b6001600160e01b031980821690036112d95760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e74657266616365206964000000006044820152606401610462565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b60006020828403121561131357600080fd5b81356001600160e01b031981168114610c9257600080fd5b80356001600160a01b038116811461134257600080fd5b919050565b6000806040838503121561135a57600080fd5b6113638361132b565b946020939093013593505050565b60006020828403121561138357600080fd5b813560048110610c9257600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106113ca57634e487b7160e01b600052602160045260246000fd5b91905290565b600080600080606085870312156113e657600080fd5b6113ef8561132b565b935060208501359250604085013567ffffffffffffffff8082111561141357600080fd5b818701915087601f83011261142757600080fd5b81358181111561143657600080fd5b88602082850101111561144857600080fd5b95989497505060200194505050565b60006020828403121561146957600080fd5b610c928261132b565b60008083601f84011261148457600080fd5b50813567ffffffffffffffff81111561149c57600080fd5b6020830191508360208260051b85010111156114b757600080fd5b9250929050565b600080600080604085870312156114d457600080fd5b843567ffffffffffffffff808211156114ec57600080fd5b6114f888838901611472565b9096509450602087013591508082111561151157600080fd5b5061151e87828801611472565b95989497509550505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561156257600080fd5b81518015158114610c9257600080fd5b60006001820161159257634e487b7160e01b600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b878110156115da576001600160a01b036115c58461132b565b168252602092830192909101906001016115ac565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561161357600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fea2646970667358221220ed60731ee92a21b70bac7c8c9a33fc8b9336ce44dff44c362abff4367aaed54764736f6c634300080f0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

export class FlairFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlairFactory> {
    return super.deploy(overrides || {}) as Promise<FlairFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FlairFactory {
    return super.attach(address) as FlairFactory;
  }
  connect(signer: Signer): FlairFactory__factory {
    return super.connect(signer) as FlairFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlairFactoryInterface {
    return new utils.Interface(_abi) as FlairFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlairFactory {
    return new Contract(address, _abi, signerOrProvider) as FlairFactory;
  }
}
