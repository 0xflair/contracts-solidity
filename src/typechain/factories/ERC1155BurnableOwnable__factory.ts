/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155BurnableOwnable,
  ERC1155BurnableOwnableInterface,
} from "../ERC1155BurnableOwnable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newTimestamp",
        type: "uint256",
      },
    ],
    name: "setBurnablePausedUntil",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061015c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063710fb57714610030575b600080fd5b61004361003e36600461010d565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b7f20cb9ad5a22f74f90c7fecbece6b6ab3beb2a63812efb8693c5ff39f2b73ee0f55565b60006020828403121561011f57600080fd5b503591905056fea26469706673582212206481751c5dc41ee45c4a72583bfe26e5a3e0966c2db927c3a4d20d00d76807aa64736f6c634300080f0033";

export class ERC1155BurnableOwnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155BurnableOwnable> {
    return super.deploy(overrides || {}) as Promise<ERC1155BurnableOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155BurnableOwnable {
    return super.attach(address) as ERC1155BurnableOwnable;
  }
  connect(signer: Signer): ERC1155BurnableOwnable__factory {
    return super.connect(signer) as ERC1155BurnableOwnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BurnableOwnableInterface {
    return new utils.Interface(_abi) as ERC1155BurnableOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155BurnableOwnable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155BurnableOwnable;
  }
}
