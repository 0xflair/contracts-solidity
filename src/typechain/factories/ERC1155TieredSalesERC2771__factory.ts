/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155TieredSalesERC2771,
  ERC1155TieredSalesERC2771Interface,
} from "../ERC1155TieredSalesERC2771";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxAllowance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "eligibleForTier",
    outputs: [
      {
        internalType: "uint256",
        name: "maxMintable",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAllowance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "mintByTier",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "minter",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxAllowance",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "onTierAllowlist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
    ],
    name: "remainingForTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reservedMints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
    ],
    name: "tierMints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
    ],
    name: "tierToTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tierIds",
        type: "uint256[]",
      },
    ],
    name: "tierToTokenId",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
    ],
    name: "tiers",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "reserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllocation",
            type: "uint256",
          },
        ],
        internalType: "struct ITieredSalesInternal.Tier",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalReserved",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "walletMintedByTier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000556113af806100256000396000f3fe6080604052600436106100bc5760003560e01c806353367f081161007457806368c7d37c1161004e57806368c7d37c146102f2578063bd2c18f714610322578063c71b0e1c1461034257600080fd5b806353367f08146102715780635897f878146102bd5780635ea2c91b146102dd57600080fd5b80631123f2ef116100a55780631123f2ef146101ae5780632cb9b2ac1461021057806351607bf41461024457600080fd5b8063039af9eb146100c15780630b81f18014610154575b600080fd5b3480156100cd57600080fd5b506100e16100dc3660046110cf565b610376565b60405161014b919060006101008201905082518252602083015160208301526001600160a01b036040840151166040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015292915050565b60405180910390f35b34801561016057600080fd5b506101a061016f3660046110cf565b60009081527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154602052604090205490565b60405190815260200161014b565b3480156101ba57600080fd5b506101a06101c9366004611104565b60009182527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbf602090815260408084206001600160a01b0393909316845291905290205490565b34801561021c57600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc546101a0565b34801561025057600080fd5b5061026461025f36600461117c565b610460565b60405161014b91906111be565b34801561027d57600080fd5b506101a061028c3660046110cf565b60009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe602052604090205490565b3480156102c957600080fd5b506101a06102d83660046110cf565b610536565b6102f06102eb366004611202565b6105ad565b005b3480156102fe57600080fd5b5061031261030d366004611263565b6106ea565b604051901515815260200161014b565b34801561032e57600080fd5b506101a061033d366004611263565b610703565b34801561034e57600080fd5b507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb546101a0565b6103ca604051806101000160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600081526020016000801916815260200160008152602001600081525090565b5060009081527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd60209081526040918290208251610100810184528154815260018201549281019290925260028101546001600160a01b0316928201929092526003820154606082015260048201546080820152600582015460a0820152600682015460c082015260079091015460e082015290565b606060008267ffffffffffffffff81111561047d5761047d6112ae565b6040519080825280602002602001820160405280156104a6578160200160208202803683370190505b50905060005b8381101561052e577f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460008686848181106104e9576104e96112c4565b90506020020135815260200190815260200160002054828281518110610511576105116112c4565b602090810291909101015280610526816112f0565b9150506104ac565b509392505050565b60007fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb8161056384610736565b60008581526003840160209081526040808320546002870190925282206007015492935090916105939190611309565b9050808210156105a557509392505050565b949350505050565b6002600054036106045760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260005561061685858585856107f5565b3063b164884b610624610b54565b7f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec67154600089815260209190915260408082205490517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03909316600484015260248301526044820188905260806064830152608482015260a401600060405180830381600087803b1580156106c657600080fd5b505af11580156106da573d6000803e3d6000fd5b5050600160005550505050505050565b60006106f98686868686610b63565b9695505050505050565b60006106f98686868686610c1f565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90565b7fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbc547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb805460009261078791611309565b61079084610ef1565b61079a9190611309565b6000848152600283016020526040902060060154909250156107ef57600083815260038201602090815260408083205460028501909252909120600601546107e29190611309565b6107ec9083611320565b91505b50919050565b60006107ff610b54565b905060006108108783878787610c1f565b90507fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb818711156108835760405162461bcd60e51b815260206004820152600b60248201527f455843454544535f4d415800000000000000000000000000000000000000000060448201526064016105fb565b61088c88610736565b8711156108db5760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e000000000000000000000000000060448201526064016105fb565b600088815260028201602090815260408083206007015460038501909252909120546109079089611320565b11156109555760405162461bcd60e51b815260206004820152601260248201527f455843454544535f414c4c4f434154494f4e000000000000000000000000000060448201526064016105fb565b60008881526002808301602052604090912001546001600160a01b03166109ea5760008881526002820160205260409020600301543490610997908990611338565b11156109e55760405162461bcd60e51b815260206004820152601360248201527f494e53554646494349454e545f414d4f554e540000000000000000000000000060448201526064016105fb565b610ab9565b600088815260028083016020526040909120908101546003909101546001600160a01b03909116906323b872dd9085903090610a27908c90611338565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303816000875af1158015610a93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab79190611357565b505b600088815260048201602090815260408083206001600160a01b038716845290915281208054899290610aed908490611320565b9091555050600088815260038201602052604081208054899290610b12908490611320565b9091555050600088815260028201602052604090206006015415610b4a5786816001016000828254610b449190611320565b90915550505b5050505050505050565b6000610b5e610ffc565b905090565b60006106f9838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250610ba59250610712915050565b60008981526002919091016020526040902060050154610c1a88886040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084901b1660208201526034810182905260009060540160405160208183030381529060405280519060200120905092915050565b611042565b60008581527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbd60205260408120600401547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb90610cbe5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4558495354530000000000000000000000000000000000000000000060448201526064016105fb565b6000878152600282016020526040902054421015610d1e5760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f5354415254454400000000000000000000000000000000000000000060448201526064016105fb565b6000878152600282016020526040902060010154421115610d815760405162461bcd60e51b815260206004820152600d60248201527f414c52454144595f454e4445440000000000000000000000000000000000000060448201526064016105fb565b60008781526004808301602090815260408084206001600160a01b038b1685528252808420548b8552600286019092529092200154610dc09190611309565b600088815260028301602052604090206005015490925015610ee757600087815260048201602090815260408083206001600160a01b038a1684529091529020548511610e4f5760405162461bcd60e51b815260206004820152600f60248201527f4d415845445f414c4c4f57414e4345000000000000000000000000000000000060448201526064016105fb565b610e5c8787878787610b63565b610ea85760405162461bcd60e51b815260206004820152600f60248201527f4e4f545f414c4c4f574c4953544544000000000000000000000000000000000060448201526064016105fb565b600087815260048201602090815260408083206001600160a01b038a168452909152812054610ed79087611309565b905080831115610ee5578092505b505b5095945050505050565b7f744f4bd40000000000000000000000000000000000000000000000000000000060009081527fff923f4a67695a9cdd5da4b8580a5a20edf2183c42aa111dd7fc15dc7bed26406020527f35d3cc196fdbb37c639d9ccf02c0ac54b3a84c388495dbf9ab724144133fc6255460ff16610f6d5750600019919050565b60008281527f46f908971db3fbea57e8a21b2e54575e0e567ff2f950ead3c0dc83f15ec6715460209081526040808320548084527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea58352818420547f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6909352908320549092916105a591611309565b7fdb1d5e345c4903e9a32b6674ecc8b1deaddbbb2551474fb34c9d34becbe7f420546000906001600160a01b0316330361103d575060131936013560601c90565b503390565b60008261104f8584611058565b14949350505050565b600081815b845181101561052e576110898286838151811061107c5761107c6112c4565b602002602001015161109d565b915080611095816112f0565b91505061105d565b60008183106110b95760008281526020849052604090206110c8565b60008381526020839052604090205b9392505050565b6000602082840312156110e157600080fd5b5035919050565b80356001600160a01b03811681146110ff57600080fd5b919050565b6000806040838503121561111757600080fd5b82359150611127602084016110e8565b90509250929050565b60008083601f84011261114257600080fd5b50813567ffffffffffffffff81111561115a57600080fd5b6020830191508360208260051b850101111561117557600080fd5b9250929050565b6000806020838503121561118f57600080fd5b823567ffffffffffffffff8111156111a657600080fd5b6111b285828601611130565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156111f6578351835292840192918401916001016111da565b50909695505050505050565b60008060008060006080868803121561121a57600080fd5b853594506020860135935060408601359250606086013567ffffffffffffffff81111561124657600080fd5b61125288828901611130565b969995985093965092949392505050565b60008060008060006080868803121561127b57600080fd5b8535945061128b602087016110e8565b935060408601359250606086013567ffffffffffffffff81111561124657600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611302576113026112da565b5060010190565b60008282101561131b5761131b6112da565b500390565b60008219821115611333576113336112da565b500190565b6000816000190483118215151615611352576113526112da565b500290565b60006020828403121561136957600080fd5b815180151581146110c857600080fdfea264697066735822122008a72f6a7420c33f1e5fd10b5636e4008987a1ea5a914cdfd90d107a7364f5c964736f6c634300080f0033";

export class ERC1155TieredSalesERC2771__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155TieredSalesERC2771> {
    return super.deploy(overrides || {}) as Promise<ERC1155TieredSalesERC2771>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155TieredSalesERC2771 {
    return super.attach(address) as ERC1155TieredSalesERC2771;
  }
  connect(signer: Signer): ERC1155TieredSalesERC2771__factory {
    return super.connect(signer) as ERC1155TieredSalesERC2771__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155TieredSalesERC2771Interface {
    return new utils.Interface(_abi) as ERC1155TieredSalesERC2771Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155TieredSalesERC2771 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155TieredSalesERC2771;
  }
}
