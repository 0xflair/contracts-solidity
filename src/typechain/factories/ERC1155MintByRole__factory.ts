/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155MintByRole,
  ERC1155MintByRoleInterface,
} from "../ERC1155MintByRole";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
    ],
    name: "mintByRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintByRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ac0806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806368da19ec1461005157806372642f5614610066578063a217fddf14610079578063d539139314610093575b600080fd5b61006461005f366004610570565b6100ba565b005b610064610074366004610673565b61016b565b610081600081565b60405190815260200160405180910390f35b6100817f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66100e481610210565b6040517f0a13c5030000000000000000000000000000000000000000000000000000000081523090630a13c5039061012e908c908c908c908c908c908c908c908c906004016107c0565b600060405180830381600087803b15801561014857600080fd5b505af115801561015c573d6000803e3d6000fd5b50505050505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661019581610210565b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b906101d7908890889088908890600401610937565b600060405180830381600087803b1580156101f157600080fd5b505af1158015610205573d6000803e3d6000fd5b505050505050505050565b61021a813361021d565b50565b60008281527f2e59e4c2e927cdddbb64e181e0668d9a0fa70dd88f94d999cd87d5496a20da626020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166102c75761027c816102cb565b6102878360206102f4565b60405160200161029892919061097c565b60408051601f198184030181529082905262461bcd60e51b82526102be916004016109fd565b60405180910390fd5b5050565b60606102ee73ffffffffffffffffffffffffffffffffffffffff831660146102f4565b92915050565b60606000610303836002610a26565b61030e906002610a45565b67ffffffffffffffff8111156103265761032661065d565b6040519080825280601f01601f191660200182016040528015610350576020820181803683370190505b5090507f30000000000000000000000000000000000000000000000000000000000000008160008151811061038757610387610a5d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106103ea576103ea610a5d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000610426846002610a26565b610431906001610a45565b90505b60018111156104ce577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061047257610472610a5d565b1a60f81b82828151811061048857610488610a5d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936104c781610a73565b9050610434565b50831561051d5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016102be565b9392505050565b60008083601f84011261053657600080fd5b50813567ffffffffffffffff81111561054e57600080fd5b6020830191508360208260051b850101111561056957600080fd5b9250929050565b6000806000806000806000806080898b03121561058c57600080fd5b883567ffffffffffffffff808211156105a457600080fd5b6105b08c838d01610524565b909a50985060208b01359150808211156105c957600080fd5b6105d58c838d01610524565b909850965060408b01359150808211156105ee57600080fd5b6105fa8c838d01610524565b909650945060608b013591508082111561061357600080fd5b506106208b828c01610524565b999c989b5096995094979396929594505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461065857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561068957600080fd5b61069285610634565b93506020850135925060408501359150606085013567ffffffffffffffff808211156106bd57600080fd5b818701915087601f8301126106d157600080fd5b8135818111156106e3576106e361065d565b604051601f8201601f19908116603f0116810190838211818310171561070b5761070b61065d565b816040528281528a602084870101111561072457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561077a57600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6080808252810188905260008960a08301825b8b81101561080e5773ffffffffffffffffffffffffffffffffffffffff6107f984610634565b168252602092830192909101906001016107d3565b506020915083810382850152610825818a8c610748565b9050838103604085015261083a81888a610748565b84810360608601528581529050818101600586901b820183018760005b888110156108c757848303601f190184528135368b9003601e1901811261087d57600080fd5b8a01868101903567ffffffffffffffff81111561089957600080fd5b8036038213156108a857600080fd5b6108b3858284610797565b958801959450505090850190600101610857565b50909e9d5050505050505050505050505050565b60005b838110156108f65781810151838201526020016108de565b83811115610905576000848401525b50505050565b600081518084526109238160208601602086016108db565b601f01601f19169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff85168152836020820152826040820152608060608201526000610972608083018461090b565b9695505050505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516109b48160178501602088016108db565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516109f18160288401602088016108db565b01602801949350505050565b60208152600061051d602083018461090b565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a4057610a40610a10565b500290565b60008219821115610a5857610a58610a10565b500190565b634e487b7160e01b600052603260045260246000fd5b600081610a8257610a82610a10565b50600019019056fea26469706673582212203397c0284cd320bc0c61572d6bd50f8d8407d0ec42b879c003afcf75a055f12764736f6c634300080f0033";

export class ERC1155MintByRole__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155MintByRole> {
    return super.deploy(overrides || {}) as Promise<ERC1155MintByRole>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155MintByRole {
    return super.attach(address) as ERC1155MintByRole;
  }
  connect(signer: Signer): ERC1155MintByRole__factory {
    return super.connect(signer) as ERC1155MintByRole__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MintByRoleInterface {
    return new utils.Interface(_abi) as ERC1155MintByRoleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MintByRole {
    return new Contract(address, _abi, signerOrProvider) as ERC1155MintByRole;
  }
}
