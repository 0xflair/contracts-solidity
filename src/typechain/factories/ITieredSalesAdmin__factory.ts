/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ITieredSalesAdmin,
  ITieredSalesAdminInterface,
} from "../ITieredSalesAdmin";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "reserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllocation",
            type: "uint256",
          },
        ],
        internalType: "struct ITieredSalesInternal.Tier",
        name: "",
        type: "tuple",
      },
    ],
    name: "configureTiering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "reserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllocation",
            type: "uint256",
          },
        ],
        internalType: "struct ITieredSalesInternal.Tier[]",
        name: "",
        type: "tuple[]",
      },
    ],
    name: "configureTiering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ITieredSalesAdmin__factory {
  static readonly abi = _abi;
  static createInterface(): ITieredSalesAdminInterface {
    return new utils.Interface(_abi) as ITieredSalesAdminInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITieredSalesAdmin {
    return new Contract(address, _abi, signerOrProvider) as ITieredSalesAdmin;
  }
}
