/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FlairFactoryNewable,
  FlairFactoryNewableInterface,
} from "../FlairFactoryNewable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "proxyAddress",
        type: "address",
      },
    ],
    name: "ProxyCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "WithdrawPowerRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "claimTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cloneDeterministicSimple",
    outputs: [
      {
        internalType: "address",
        name: "deployedProxy",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockWithdrawMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockWithdrawRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeWithdrawPower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WithdrawMode",
        name: "_withdrawMode",
        type: "uint8",
      },
    ],
    name: "setWithdrawMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_withdrawRecipient",
        type: "address",
      },
    ],
    name: "setWithdrawRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "claimTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawMode",
    outputs: [
      {
        internalType: "enum WithdrawMode",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawModeLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawPowerRevoked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRecipientLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d336200002d565b6200002762000088565b62000390565b600080546001600160a01b038381166201000081810262010000600160b01b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff1615808015620000a95750600054600160ff909116105b80620000d95750620000c630620001bd60201b62000b711760201c565b158015620000d9575060005460ff166001145b620001425760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000166576000805461ff0019166101001790555b62000173336000620001cc565b8015620001ba576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6001600160a01b03163b151590565b600054610100900460ff16620002285760405162461bcd60e51b815260206004820152602b60248201526000805160206200199683398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b62000234828262000238565b5050565b600054610100900460ff16620002945760405162461bcd60e51b815260206004820152602b60248201526000805160206200199683398151915260448201526a6e697469616c697a696e6760a81b606482015260840162000139565b620002a663ac2ba33360e01b620002f6565b600280546001600160a01b0384166001600160a01b0319821681178355839291600162ff000160a01b03191617600160b01b836003811115620002ed57620002ed6200037a565b02179055505050565b6001600160e01b03198082169003620003525760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640162000139565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b634e487b7160e01b600052602160045260246000fd5b6115f680620003a06000396000f3fe60806040526004361061010e5760003560e01c8063837fe140116100a5578063c723955a11610074578063dcbe353f11610059578063dcbe353f146102d3578063de6d6d96146102f3578063f2fde38b1461031357600080fd5b8063c723955a146102a9578063da82b227146102be57600080fd5b8063837fe1401461022f5780638da5cb5b14610244578063af121f5414610268578063c0bb38ff1461028957600080fd5b806349561cb9116100e157806349561cb9146101c35780636057e0ec146101e4578063715018a6146102055780638129fc1c1461021a57600080fd5b806301ffc9a7146101135780632c233067146101485780632d00b5871461016a57806347791ece14610198575b600080fd5b34801561011f57600080fd5b5061013361012e36600461113e565b610333565b60405190151581526020015b60405180910390f35b34801561015457600080fd5b5061016861016336600461116f565b61038c565b005b34801561017657600080fd5b5060025461018b90600160b01b900460ff1681565b60405161013f91906111a6565b6101ab6101a63660046111ea565b610424565b6040516001600160a01b03909116815260200161013f565b3480156101cf57600080fd5b5060025461013390600160b81b900460ff1681565b3480156101f057600080fd5b5060025461013390600160a01b900460ff1681565b34801561021157600080fd5b50610168610574565b34801561022657600080fd5b50610168610588565b34801561023b57600080fd5b506101686106ab565b34801561025057600080fd5b506000546201000090046001600160a01b03166101ab565b34801561027457600080fd5b5060025461013390600160a81b900460ff1681565b34801561029557600080fd5b506101686102a4366004611271565b610726565b3480156102b557600080fd5b506101686107a0565b3480156102ca57600080fd5b50610168610832565b3480156102df57600080fd5b506002546101ab906001600160a01b031681565b3480156102ff57600080fd5b5061016861030e3660046112d8565b610893565b34801561031f57600080fd5b5061016861032e366004611271565b610ae4565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316148061038657506001600160e01b0319821660009081526001602052604090205460ff165b92915050565b610394610b80565b600254600160b81b900460ff16156103dc5760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064015b60405180910390fd5b600280548291907fffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffff16600160b01b83600381111561041c5761041c611190565b021790555050565b600080848660405161043590611131565b6001600160a01b0390911681526020018190604051809103906000f5905080158015610465573d6000803e3d6000fd5b509150819050821561053557600080836001600160a01b0316868660405161048e929190611344565b6000604051808303816000865af19150503d80600081146104cb576040519150601f19603f3d011682016040523d82523d6000602084013e6104d0565b606091505b509150915081610532578051156104ea5780518082602001fd5b60405162461bcd60e51b815260206004820152600f60248201527f4641494c45445f544f5f434c4f4e45000000000000000000000000000000000060448201526064016103d3565b50505b6040516001600160a01b0383169033907f9678a1e87ca9f1a37dc659a97b39d812d98cd236947e1b53b3d0d6fd346acb6e90600090a350949350505050565b61057c610b80565b6105866000610be1565b565b600054610100900460ff16158080156105a85750600054600160ff909116105b806105c25750303b1580156105c2575060005460ff166001145b6106345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016103d3565b6000805460ff191660011790558015610657576000805461ff0019166101001790555b610662336000610c52565b80156106a8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6106b3610b80565b600254600160a01b900460ff16156106f65760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064016103d3565b600280547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b61072e610b80565b600254600160a01b900460ff16156107715760405162461bcd60e51b81526020600482015260066024820152651313d0d2d15160d21b60448201526064016103d3565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6107a8610b80565b600254600160b81b900460ff16156108025760405162461bcd60e51b815260206004820152600560248201527f4f434b454400000000000000000000000000000000000000000000000000000060448201526064016103d3565b600280547fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff16600160b81b179055565b61083a610b80565b600280547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16600160a81b1790556040517fa24423a69b45c25c0479663125e48b482e71d85eae416f589545243bafaf3c9590600090a1565b61089c33610cdd565b6002546001600160a01b03166108f45760405162461bcd60e51b815260206004820152601560248201527f57495448445241572f4e4f5f524543495049454e54000000000000000000000060448201526064016103d3565b600254600160a81b900460ff161561094e5760405162461bcd60e51b815260206004820181905260248201527f57495448445241572f454d455247454e43595f504f5745525f5245564f4b454460448201526064016103d3565b60005b83811015610aa057600085858381811061096d5761096d611354565b90506020020160208101906109829190611271565b6001600160a01b0316036109c5576109c08383838181106109a5576109a5611354565b6002546001600160a01b031692602090910201359050610e7b565b610a8e565b8484828181106109d7576109d7611354565b90506020020160208101906109ec9190611271565b6002546001600160a01b039182169163a9059cbb9116858585818110610a1457610a14611354565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c919061136a565b505b80610a988161138c565b915050610951565b507fd40c399a83caf67d15628b821aa7c7bd940e563c57a047e2bd3b8c602bcaf5a584848484604051610ad694939291906113b3565b60405180910390a150505050565b610aec610b80565b6001600160a01b038116610b685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103d3565b6106a881610be1565b6001600160a01b03163b151590565b6000546001600160a01b03620100009091041633146105865760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d3565b600080546001600160a01b03838116620100008181027fffffffffffffffffffff0000000000000000000000000000000000000000ffff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600054610100900460ff16610ccf5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d3565b610cd98282610f99565b5050565b6003600254600160b01b900460ff166003811115610cfd57610cfd611190565b03610d4a5760405162461bcd60e51b815260206004820152600f60248201527f57495448445241572f4c4f434b4544000000000000000000000000000000000060448201526064016103d3565b60028054600160b01b900460ff166003811115610d6957610d69611190565b03610d715750565b6001600254600160b01b900460ff166003811115610d9157610d91611190565b03610df3576002546001600160a01b038281169116146106a85760405162461bcd60e51b815260206004820152601760248201527f57495448445241572f4f4e4c595f524543495049454e5400000000000000000060448201526064016103d3565b6000600254600160b01b900460ff166003811115610e1357610e13611190565b036106a8576000546001600160a01b038281166201000090920416146106a85760405162461bcd60e51b815260206004820152601360248201527f57495448445241572f4f4e4c595f4f574e45520000000000000000000000000060448201526064016103d3565b80471015610ecb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103d3565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f18576040519150601f19603f3d011682016040523d82523d6000602084013e610f1d565b606091505b5050905080610f945760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103d3565b505050565b600054610100900460ff166110165760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103d3565b61103f7fac2ba333000000000000000000000000000000000000000000000000000000006110af565b600280546001600160a01b03841673ffffffffffffffffffffffffffffffffffffffff198216811783558392917fffffffffffffffffff00ffff00000000000000000000000000000000000000001617600160b01b8360038111156110a6576110a6611190565b02179055505050565b6001600160e01b031980821690036111095760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e746572666163652069640000000060448201526064016103d3565b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b6101728061144f83390190565b60006020828403121561115057600080fd5b81356001600160e01b03198116811461116857600080fd5b9392505050565b60006020828403121561118157600080fd5b81356004811061116857600080fd5b634e487b7160e01b600052602160045260246000fd5b60208101600483106111c857634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160a01b03811681146111e557600080fd5b919050565b6000806000806060858703121561120057600080fd5b611209856111ce565b935060208501359250604085013567ffffffffffffffff8082111561122d57600080fd5b818701915087601f83011261124157600080fd5b81358181111561125057600080fd5b88602082850101111561126257600080fd5b95989497505060200194505050565b60006020828403121561128357600080fd5b611168826111ce565b60008083601f84011261129e57600080fd5b50813567ffffffffffffffff8111156112b657600080fd5b6020830191508360208260051b85010111156112d157600080fd5b9250929050565b600080600080604085870312156112ee57600080fd5b843567ffffffffffffffff8082111561130657600080fd5b6113128883890161128c565b9096509450602087013591508082111561132b57600080fd5b506113388782880161128c565b95989497509550505050565b8183823760009101908152919050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561137c57600080fd5b8151801515811461116857600080fd5b6000600182016113ac57634e487b7160e01b600052601160045260246000fd5b5060010190565b6040808252810184905260008560608301825b878110156113f4576001600160a01b036113df846111ce565b168252602092830192909101906001016113c6565b5083810360208501528481527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85111561142d57600080fd5b8460051b91508186602083013760009101602001908152969550505050505056fe608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea264697066735822122010e3d1afd2c437d773a5002b589123ae499d9167b69637e26ef5120fc87f46dc64736f6c634300080f0033a2646970667358221220516ebf9c27f086c09355dd72ef43f510961e1e6800bf2157730909d8b6cad2e664736f6c634300080f0033496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069";

export class FlairFactoryNewable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FlairFactoryNewable> {
    return super.deploy(overrides || {}) as Promise<FlairFactoryNewable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FlairFactoryNewable {
    return super.attach(address) as FlairFactoryNewable;
  }
  connect(signer: Signer): FlairFactoryNewable__factory {
    return super.connect(signer) as FlairFactoryNewable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlairFactoryNewableInterface {
    return new utils.Interface(_abi) as FlairFactoryNewableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlairFactoryNewable {
    return new Contract(address, _abi, signerOrProvider) as FlairFactoryNewable;
  }
}
