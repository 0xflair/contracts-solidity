/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Base, ERC1155BaseInterface } from "../ERC1155Base";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061159f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100715760003560e01c8063a22cb46511610050578063a22cb465146100d1578063e985e9c5146100e4578063f242432a1461014f57600080fd5b8062fdd58e146100765780632eb2c2d61461009c5780634e1273f4146100b1575b600080fd5b610089610084366004610f09565b610162565b6040519081526020015b60405180910390f35b6100af6100aa36600461107f565b610175565b005b6100c46100bf366004611129565b61025e565b604051610093919061122f565b6100af6100df366004611242565b610485565b61013f6100f236600461127e565b6001600160a01b0391821660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832093909416825291909152205460ff1690565b6040519015158152602001610093565b6100af61015d3660046112b1565b610591565b600061016e838361066d565b9392505050565b336001600160a01b0386168114806101d157506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b6102485760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f766564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610256818787878787610732565b505050505050565b606081518351146102d75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d617463680000000000000000000000000000000000000000000000606482015260840161023f565b82517ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a79060009067ffffffffffffffff81111561031657610316610f33565b60405190808252806020026020018201604052801561033f578160200160208202803683370190505b50905060005b855181101561047c5760006001600160a01b031686828151811061036b5761036b611316565b60200260200101516001600160a01b0316036103ef5760405162461bcd60e51b815260206004820152603160248201527f455243313135353a2062617463682062616c616e636520717565727920666f7260448201527f20746865207a65726f2061646472657373000000000000000000000000000000606482015260840161023f565b82600086838151811061040457610404611316565b60200260200101518152602001908152602001600020600087838151811061042e5761042e611316565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061046957610469611316565b6020908102919091010152600101610345565b50949350505050565b336001600160a01b03831681036105045760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c660000000000000000000000000000000000000000000000606482015260840161023f565b6001600160a01b0381811660008181527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a86020908152604080832094881680845294825291829020805460ff1916871515908117909155825190815291517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319281900390910190a3505050565b336001600160a01b0386168114806105ed57506001600160a01b0380871660009081527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a8602090815260408083209385168352929052205460ff165b61065f5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201527f20617070726f7665640000000000000000000000000000000000000000000000606482015260840161023f565b61025681878787878761074e565b60006001600160a01b0383166106eb5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201527f65726f2061646472657373000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a76000928352602090815260408084206001600160a01b0395909516845293905250205490565b61074086868686868661076a565b6102568686868686866109fe565b61075c868686868686610bc4565b610256868686868686610d8e565b6001600160a01b0384166107ce5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161023f565b81518351146108455760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d61746368000000000000000000000000000000000000000000000000606482015260840161023f565b7ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a760005b845181101561099d57600085828151811061088657610886611316565b6020026020010151905060008583815181106108a4576108a4611316565b602090810291909101810151600084815286835260408082206001600160a01b038e16835290935291909120549091508181101561094a5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000838152602086815260408083206001600160a01b038e811685529252808320938590039093558a16815290812080546001959095019483929061099090849061132c565b9091555061086992505050565b50846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516109ed929190611352565b60405180910390a450505050505050565b6001600160a01b0384163b156102565760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610a4290899089908890889088906004016113cd565b6020604051808303816000875af1925050508015610a7d575060408051601f3d908101601f19168201909252610a7a9181019061142b565b60015b610b3257610a8961146d565b806308c379a003610ac25750610a9d611489565b80610aa85750610ac4565b8060405162461bcd60e51b815260040161023f9190611513565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560448201527f526563656976657220696d706c656d656e746572000000000000000000000000606482015260840161023f565b7fffffffff00000000000000000000000000000000000000000000000000000000811663bc197c8160e01b14610bbb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161023f565b50505050505050565b6001600160a01b038416610c285760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b606482015260840161023f565b610c47868686610c3787610ea2565b610c4087610ea2565b5050505050565b60008381527ff9ecf3cb86ac553c70621e3e662b4036163ca34fffb329385fafa0e130cfc1a7602081815260408084206001600160a01b038a1685529091529091205483811015610d005760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a20696e73756666696369656e742062616c616e636573206660448201527f6f72207472616e73666572000000000000000000000000000000000000000000606482015260840161023f565b6000858152602083815260408083206001600160a01b038b81168552925280832093879003909355871681529081208054859290610d3f90849061132c565b909155505060408051858152602081018590526001600160a01b038088169289821692918b16917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291016109ed565b6001600160a01b0384163b156102565760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610dd29089908990889088908890600401611526565b6020604051808303816000875af1925050508015610e0d575060408051601f3d908101601f19168201909252610e0a9181019061142b565b60015b610e1957610a8961146d565b7fffffffff00000000000000000000000000000000000000000000000000000000811663f23a6e6160e01b14610bbb5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b606482015260840161023f565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610edc57610edc611316565b602090810291909101015292915050565b80356001600160a01b0381168114610f0457600080fd5b919050565b60008060408385031215610f1c57600080fd5b610f2583610eed565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610f6f57610f6f610f33565b6040525050565b600067ffffffffffffffff821115610f9057610f90610f33565b5060051b60200190565b600082601f830112610fab57600080fd5b81356020610fb882610f76565b604051610fc58282610f49565b83815260059390931b8501820192828101915086841115610fe557600080fd5b8286015b848110156110005780358352918301918301610fe9565b509695505050505050565b600082601f83011261101c57600080fd5b813567ffffffffffffffff81111561103657611036610f33565b60405161104d601f8301601f191660200182610f49565b81815284602083860101111561106257600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561109757600080fd5b6110a086610eed565b94506110ae60208701610eed565b9350604086013567ffffffffffffffff808211156110cb57600080fd5b6110d789838a01610f9a565b945060608801359150808211156110ed57600080fd5b6110f989838a01610f9a565b9350608088013591508082111561110f57600080fd5b5061111c8882890161100b565b9150509295509295909350565b6000806040838503121561113c57600080fd5b823567ffffffffffffffff8082111561115457600080fd5b818501915085601f83011261116857600080fd5b8135602061117582610f76565b6040516111828282610f49565b83815260059390931b85018201928281019150898411156111a257600080fd5b948201945b838610156111c7576111b886610eed565b825294820194908201906111a7565b965050860135925050808211156111dd57600080fd5b506111ea85828601610f9a565b9150509250929050565b600081518084526020808501945080840160005b8381101561122457815187529582019590820190600101611208565b509495945050505050565b60208152600061016e60208301846111f4565b6000806040838503121561125557600080fd5b61125e83610eed565b91506020830135801515811461127357600080fd5b809150509250929050565b6000806040838503121561129157600080fd5b61129a83610eed565b91506112a860208401610eed565b90509250929050565b600080600080600060a086880312156112c957600080fd5b6112d286610eed565b94506112e060208701610eed565b93506040860135925060608601359150608086013567ffffffffffffffff81111561130a57600080fd5b61111c8882890161100b565b634e487b7160e01b600052603260045260246000fd5b6000821982111561134d57634e487b7160e01b600052601160045260246000fd5b500190565b60408152600061136560408301856111f4565b828103602084015261137781856111f4565b95945050505050565b6000815180845260005b818110156113a65760208185018101518683018201520161138a565b818111156113b8576000602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a060408301526113f960a08301866111f4565b828103606084015261140b81866111f4565b9050828103608084015261141f8185611380565b98975050505050505050565b60006020828403121561143d57600080fd5b81517fffffffff000000000000000000000000000000000000000000000000000000008116811461016e57600080fd5b600060033d11156114865760046000803e5060005160e01c5b90565b600060443d10156114975790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156114c757505050505090565b82850191508151818111156114df5750505050505090565b843d87010160208285010111156114f95750505050505090565b61150860208286010187610f49565b509095945050505050565b60208152600061016e6020830184611380565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261155e60a0830184611380565b97965050505050505056fea2646970667358221220cc571873fdfa4a7c2b5407e3b7c3befb00e00894fbf16c2dd0e022863f05454464736f6c634300080f0033";

export class ERC1155Base__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Base> {
    return super.deploy(overrides || {}) as Promise<ERC1155Base>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Base {
    return super.attach(address) as ERC1155Base;
  }
  connect(signer: Signer): ERC1155Base__factory {
    return super.connect(signer) as ERC1155Base__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BaseInterface {
    return new utils.Interface(_abi) as ERC1155BaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Base {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Base;
  }
}
