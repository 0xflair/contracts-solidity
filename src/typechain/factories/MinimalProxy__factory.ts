/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinimalProxy, MinimalProxyInterface } from "../MinimalProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405260405161017238038061017283398101604081905261002291610080565b806100597f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61007d60201b6100581760201c565b80546001600160a01b0319166001600160a01b0392909216919091179055506100b0565b90565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b60b4806100be6000396000f3fe608060405236601057600e6013565b005b600e5b605660527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b605b565b565b90565b3660008037600080366000845af43d6000803e8080156079573d6000f35b3d6000fdfea264697066735822122010e3d1afd2c437d773a5002b589123ae499d9167b69637e26ef5120fc87f46dc64736f6c634300080f0033";

export class MinimalProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _impl: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<MinimalProxy> {
    return super.deploy(_impl, overrides || {}) as Promise<MinimalProxy>;
  }
  getDeployTransaction(
    _impl: string,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_impl, overrides || {});
  }
  attach(address: string): MinimalProxy {
    return super.attach(address) as MinimalProxy;
  }
  connect(signer: Signer): MinimalProxy__factory {
    return super.connect(signer) as MinimalProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalProxyInterface {
    return new utils.Interface(_abi) as MinimalProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalProxy {
    return new Contract(address, _abi, signerOrProvider) as MinimalProxy;
  }
}
