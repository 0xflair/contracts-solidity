/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155MetadataOwnable,
  ERC1155MetadataOwnableInterface,
} from "../ERC1155MetadataOwnable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "lockBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockFallbackURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockURISuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "lockURIUntil",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newFallbackURI",
        type: "string",
      },
    ],
    name: "setFallbackURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newTokenURI",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "newTokenURIs",
        type: "string[]",
      },
    ],
    name: "setURIBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURISuffix",
        type: "string",
      },
    ],
    name: "setURISuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ec8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806355f804b311610076578063862440e21161005b578063862440e214610106578063989143ee14610119578063b3dbdcde1461012c57600080fd5b806355f804b3146100e057806381b3e575146100f357600080fd5b806301b98ea0146100a85780630cf14c40146100bd57806318249af7146100c557806353df5c7c146100d8575b600080fd5b6100bb6100b6366004610b06565b610134565b005b6100bb610250565b6100bb6100d3366004610bb4565b6102fc565b6100bb6103b8565b6100bb6100ee366004610bb4565b610462565b6100bb610101366004610bb4565b61051a565b6100bb610114366004610bf6565b6105d2565b6100bb610127366004610c42565b610690565b6100bb610734565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146101b25760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60005b83811015610249576102378585838181106101d2576101d2610c5b565b905060200201358484848181106101eb576101eb610c5b565b90506020028101906101fd9190610c71565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b8061024181610cb8565b9150506101b5565b5050505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146102c95760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee805460ff19166001179055565b565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146103755760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c292505050565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104315760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec805460ff19166001179055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146104db5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061098592505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146105935760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6103b482828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109f792505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b0316331461064b5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b61068b8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506107de92505050565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107095760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b610731817f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef155565b50565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed4546001600160a01b031633146107ad5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016101a9565b6102fa7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef0805460ff19166001179055565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef154821161084e5760405162461bcd60e51b815260206004820181905260248201527f455243313135354d657461646174613a20746f6b656e555249206c6f636b656460448201526064016101a9565b60008281527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef2602052604090206108858282610d7d565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b826040516108b69190610e3d565b60405180910390a25050565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5460ff161561095a5760405162461bcd60e51b815260206004820152602360248201527f455243313135354d657461646174613a2066616c6c6261636b555249206c6f6360448201527f6b6564000000000000000000000000000000000000000000000000000000000060648201526084016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb6103b48282610d7d565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec5460ff161561095a5760405162461bcd60e51b815260206004820152601f60248201527f455243313135354d657461646174613a2062617365555249206c6f636b65640060448201526064016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef05460ff1615610a8f5760405162461bcd60e51b815260206004820152602160248201527f455243313135354d657461646174613a20757269537566666978206c6f636b6560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016101a9565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceef6103b48282610d7d565b60008083601f840112610acc57600080fd5b50813567ffffffffffffffff811115610ae457600080fd5b6020830191508360208260051b8501011115610aff57600080fd5b9250929050565b60008060008060408587031215610b1c57600080fd5b843567ffffffffffffffff80821115610b3457600080fd5b610b4088838901610aba565b90965094506020870135915080821115610b5957600080fd5b50610b6687828801610aba565b95989497509550505050565b60008083601f840112610b8457600080fd5b50813567ffffffffffffffff811115610b9c57600080fd5b602083019150836020828501011115610aff57600080fd5b60008060208385031215610bc757600080fd5b823567ffffffffffffffff811115610bde57600080fd5b610bea85828601610b72565b90969095509350505050565b600080600060408486031215610c0b57600080fd5b83359250602084013567ffffffffffffffff811115610c2957600080fd5b610c3586828701610b72565b9497909650939450505050565b600060208284031215610c5457600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610c8857600080fd5b83018035915067ffffffffffffffff821115610ca357600080fd5b602001915036819003821315610aff57600080fd5b600060018201610cd857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680610d0957607f821691505b602082108103610d2957634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561068b57600081815260208120601f850160051c81016020861015610d565750805b601f850160051c820191505b81811015610d7557828155600101610d62565b505050505050565b815167ffffffffffffffff811115610d9757610d97610cdf565b610dab81610da58454610cf5565b84610d2f565b602080601f831160018114610de05760008415610dc85750858301515b600019600386901b1c1916600185901b178555610d75565b600085815260208120601f198616915b82811015610e0f57888601518255948401946001909101908401610df0565b5085821015610e2d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015610e6a57858101830151858201604001528201610e4e565b81811115610e7c576000604083870101525b50601f01601f191692909201604001939250505056fea2646970667358221220ae020e48cc3c28b4c7875224126fd3550753c52dddbfc9cfc55d84de34493be764736f6c634300080f0033";

export class ERC1155MetadataOwnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155MetadataOwnable> {
    return super.deploy(overrides || {}) as Promise<ERC1155MetadataOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155MetadataOwnable {
    return super.attach(address) as ERC1155MetadataOwnable;
  }
  connect(signer: Signer): ERC1155MetadataOwnable__factory {
    return super.connect(signer) as ERC1155MetadataOwnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MetadataOwnableInterface {
    return new utils.Interface(_abi) as ERC1155MetadataOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MetadataOwnable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155MetadataOwnable;
  }
}
