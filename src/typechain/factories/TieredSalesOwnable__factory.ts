/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TieredSalesOwnable,
  TieredSalesOwnableInterface,
} from "../TieredSalesOwnable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "reserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllocation",
            type: "uint256",
          },
        ],
        internalType: "struct ITieredSalesInternal.Tier",
        name: "tier",
        type: "tuple",
      },
    ],
    name: "configureTiering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tierIds",
        type: "uint256[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "start",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "end",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPerWallet",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "reserved",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAllocation",
            type: "uint256",
          },
        ],
        internalType: "struct ITieredSalesInternal.Tier[]",
        name: "tiers",
        type: "tuple[]",
      },
    ],
    name: "configureTiering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610654806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806320f1bb301461003b578063d8b436fd14610050575b600080fd5b61004e6100493660046103fa565b610063565b005b61004e61005e366004610434565b6100fc565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100ee5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b6100f88282610194565b5050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146101825760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064016100e5565b61018e8484848461039c565b50505050565b60008281527fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbe60205260409020547fb7471df0c7246ed3d4a380504edfbb03f5845b709c7716243791636e4ba46cbb9060e083013510156102375760405162461bcd60e51b815260206004820152601160248201527f4c4f5745525f5448414e5f4d494e54454400000000000000000000000000000060448201526064016100e5565b6000838152600282016020526040902060060154156102b457600083815260038201602052604090205460c083013510156102b45760405162461bcd60e51b815260206004820152601260248201527f4c4f575f524553455256455f414d4f554e54000000000000000000000000000060448201526064016100e5565b600083815260038201602052604090205415610331576000838152600282016020526040902060040154608083013510156103315760405162461bcd60e51b815260206004820152601260248201527f4c4f575f4d41585f5045525f57414c4c4554000000000000000000000000000060448201526064016100e5565b6000838152600282016020526040812060060154825490918391610356908490610512565b90915550506000838152600282016020526040902082906103778282610529565b9050508160c0013581600001600082825461039291906105d7565b9091555050505050565b60005b838110156103f3576103e18585838181106103bc576103bc6105ef565b905060200201358484848181106103d5576103d56105ef565b90506101000201610194565b806103eb81610605565b91505061039f565b5050505050565b60008082840361012081121561040f57600080fd5b83359250610100601f198201121561042657600080fd5b506020830190509250929050565b6000806000806040858703121561044a57600080fd5b843567ffffffffffffffff8082111561046257600080fd5b818701915087601f83011261047657600080fd5b81358181111561048557600080fd5b8860208260051b850101111561049a57600080fd5b6020928301965094509086013590808211156104b557600080fd5b818701915087601f8301126104c957600080fd5b8135818111156104d857600080fd5b8860208260081b85010111156104ed57600080fd5b95989497505060200194505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610524576105246104fc565b500390565b8135815560208201356001820155604082013573ffffffffffffffffffffffffffffffffffffffff8116811461055e57600080fd5b6002820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff831617905550606082013560038201556080820135600482015560a0820135600582015560c0820135600682015560e082013560078201555050565b600082198211156105ea576105ea6104fc565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201610617576106176104fc565b506001019056fea264697066735822122091c1e56d94a0b39bd6089f7313eaea1522e7a4a316d9e4373a259f6a6d5985b764736f6c634300080f0033";

export class TieredSalesOwnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TieredSalesOwnable> {
    return super.deploy(overrides || {}) as Promise<TieredSalesOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TieredSalesOwnable {
    return super.attach(address) as TieredSalesOwnable;
  }
  connect(signer: Signer): TieredSalesOwnable__factory {
    return super.connect(signer) as TieredSalesOwnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TieredSalesOwnableInterface {
    return new utils.Interface(_abi) as TieredSalesOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TieredSalesOwnable {
    return new Contract(address, _abi, signerOrProvider) as TieredSalesOwnable;
  }
}
