/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155MintByOwner,
  ERC1155MintByOwnerInterface,
} from "../ERC1155MintByOwner";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintByOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610339806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635135bec114610030575b600080fd5b61004361003e366004610192565b610045565b005b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146100e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e6572000000604482015260640160405180910390fd5b6040517fb164884b000000000000000000000000000000000000000000000000000000008152309063b164884b9061012b908790879087908790600401610282565b600060405180830381600087803b15801561014557600080fd5b505af1158015610159573d6000803e3d6000fd5b5050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080600080608085870312156101a857600080fd5b843573ffffffffffffffffffffffffffffffffffffffff811681146101cc57600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff808211156101f757600080fd5b818701915087601f83011261020b57600080fd5b81358181111561021d5761021d610163565b604051601f8201601f19908116603f0116810190838211818310171561024557610245610163565b816040528281528a602084870101111561025e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b73ffffffffffffffffffffffffffffffffffffffff8516815260006020858184015284604084015260806060840152835180608085015260005b818110156102d85785810183015185820160a0015282016102bc565b818111156102ea57600060a083870101525b50601f01601f19169290920160a001969550505050505056fea26469706673582212203e7480709fded241f76290028d3a2456f40942830e2cd3f51f94c71f987b0e9164736f6c634300080f0033";

export class ERC1155MintByOwner__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155MintByOwner> {
    return super.deploy(overrides || {}) as Promise<ERC1155MintByOwner>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155MintByOwner {
    return super.attach(address) as ERC1155MintByOwner;
  }
  connect(signer: Signer): ERC1155MintByOwner__factory {
    return super.connect(signer) as ERC1155MintByOwner__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MintByOwnerInterface {
    return new utils.Interface(_abi) as ERC1155MintByOwnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MintByOwner {
    return new Contract(address, _abi, signerOrProvider) as ERC1155MintByOwner;
  }
}
