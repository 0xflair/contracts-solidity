/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155SupplyOwnable,
  ERC1155SupplyOwnableInterface,
} from "../ERC1155SupplyOwnable";

const _abi = [
  {
    inputs: [],
    name: "MaxSupplyFrozen",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "freezeMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "freezeMaxSupplyBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "newValues",
        type: "uint256[]",
      },
    ],
    name: "setMaxSupplyBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106d2806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806337da577c146100515780636cf6a3fa146100665780636d81b80e14610079578063c67b4f161461008c575b600080fd5b61006461005f36600461052a565b61009f565b005b610064610074366004610598565b6101aa565b610064610087366004610604565b6102d0565b61006461009a366004610646565b6103dc565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff16331461012a5760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e657200000060448201526064015b60405180910390fd5b60008281527f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa046729602052604090205460ff1615610179576040516350f92d0360e11b815260040160405180910390fd5b60009182527f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea6602052604090912055565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146102305760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610121565b60005b838110156102bd577f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa04672960008686848181106102705761027061065f565b602090810292909201358352508101919091526040016000205460ff16156102ab576040516350f92d0360e11b815260040160405180910390fd5b806102b581610675565b915050610233565b506102ca8484848461049c565b50505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146103565760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610121565b60005b818110156103d75760017f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa04672960008585858181106103985761039861065f565b90506020020135815260200190815260200160002060006101000a81548160ff02191690831515021790555080806103cf90610675565b915050610359565b505050565b7fc0ea367cb0174dd5521cd2372c76f8c13e6c1f832c71f1d6e0cbc185c9cc8ed45473ffffffffffffffffffffffffffffffffffffffff1633146104625760405162461bcd60e51b815260206004820152601d60248201527f4f776e61626c653a2073656e646572206d757374206265206f776e65720000006044820152606401610121565b60009081527f4c9175b6439f09e2cc0e193885f3f53ad3754dc444f8982db77b22edaa04672960205260409020805460ff19166001179055565b7f7056dcda885936c7a9d7c6385902b4ab5fb09024caea98652b7189a5f7a28ea660005b84811015610522578383828181106104da576104da61065f565b905060200201358260008888858181106104f6576104f661065f565b90506020020135815260200190815260200160002081905550808061051a90610675565b9150506104c0565b505050505050565b6000806040838503121561053d57600080fd5b50508035926020909101359150565b60008083601f84011261055e57600080fd5b50813567ffffffffffffffff81111561057657600080fd5b6020830191508360208260051b850101111561059157600080fd5b9250929050565b600080600080604085870312156105ae57600080fd5b843567ffffffffffffffff808211156105c657600080fd5b6105d28883890161054c565b909650945060208701359150808211156105eb57600080fd5b506105f88782880161054c565b95989497509550505050565b6000806020838503121561061757600080fd5b823567ffffffffffffffff81111561062e57600080fd5b61063a8582860161054c565b90969095509350505050565b60006020828403121561065857600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b60006001820161069557634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220969448fe62d6ea74d985df55172bf13889d762ecd5acc0acab6ad17b2489e00964736f6c634300080f0033";

export class ERC1155SupplyOwnable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155SupplyOwnable> {
    return super.deploy(overrides || {}) as Promise<ERC1155SupplyOwnable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155SupplyOwnable {
    return super.attach(address) as ERC1155SupplyOwnable;
  }
  connect(signer: Signer): ERC1155SupplyOwnable__factory {
    return super.connect(signer) as ERC1155SupplyOwnable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155SupplyOwnableInterface {
    return new utils.Interface(_abi) as ERC1155SupplyOwnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155SupplyOwnable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155SupplyOwnable;
  }
}
