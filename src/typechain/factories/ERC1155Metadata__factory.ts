/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155Metadata,
  ERC1155MetadataInterface,
} from "../ERC1155Metadata";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURILocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fallbackURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fallbackURILocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastLockedTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "uriBatch",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffixLocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a18806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635d148e5c116100765780636c0360eb1161005b5780636c0360eb1461016d57806396d7e22914610175578063c4ef3e051461019557600080fd5b80635d148e5c146101135780636b95c5041461013d57600080fd5b8063067f0848146100a85780630c7d9752146100e35780630e89341c146100f85780635503a0e81461010b575b600080fd5b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceee5460ff165b60405190151581526020015b60405180910390f35b6100eb6101bf565b6040516100da91906107a7565b6100eb6101063660046107c1565b610273565b6100eb6104f8565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceec5460ff166100ce565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef1546040519081526020016100da565b6100eb610529565b6101886101833660046107da565b610557565b6040516100da919061084f565b7f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef05460ff166100ce565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb60020180546101f0906108b1565b80601f016020809104026020016040519081016040528092919081815260200182805461021c906108b1565b80156102695780601f1061023e57610100808354040283529160200191610269565b820191906000526020600020905b81548152906001019060200180831161024c57829003601f168201915b5050505050905090565b60008181527f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bcef26020526040812080546060927f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb9290916102d2906108b1565b80601f01602080910402602001604051908101604052809291908181526020018280546102fe906108b1565b801561034b5780601f106103205761010080835404028352916020019161034b565b820191906000526020600020905b81548152906001019060200180831161032e57829003601f168201915b505050505090506000826000018054610363906108b1565b80601f016020809104026020016040519081016040528092919081815260200182805461038f906108b1565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b505050505090506000825111156103f557509392505050565b6000836002018054610406906108b1565b905011156104a55782600201805461041d906108b1565b80601f0160208091040260200160405190810160405280929190818152602001828054610449906108b1565b80156104965780601f1061046b57610100808354040283529160200191610496565b820191906000526020600020905b81548152906001019060200180831161047957829003601f168201915b50505050509350505050919050565b8051156104e057806104b68661060e565b6040516020016104c79291906108eb565b6040516020818303038152906040529350505050919050565b50506040805160208101909152600081529392505050565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb60040180546101f0906108b1565b60607f7df186493127afbe76aac5b5b4ed702314d47975d114f419dbfeec69750bceeb80546101f0906108b1565b606060008267ffffffffffffffff8111156105745761057461091a565b6040519080825280602002602001820160405280156105a757816020015b60608152602001906001900390816105925790505b50905060005b83811015610606576105d68585838181106105ca576105ca610930565b90506020020135610273565b8282815181106105e8576105e8610930565b602002602001018190525080806105fe9061095c565b9150506105ad565b509392505050565b60608160000361065157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561067b57806106658161095c565b91506106749050600a8361098b565b9150610655565b60008167ffffffffffffffff8111156106965761069661091a565b6040519080825280601f01601f1916602001820160405280156106c0576020820181803683370190505b5090505b8415610743576106d560018361099f565b91506106e2600a866109b6565b6106ed9060306109ca565b60f81b81838151811061070257610702610930565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061073c600a8661098b565b94506106c4565b949350505050565b60005b8381101561076657818101518382015260200161074e565b83811115610775576000848401525b50505050565b6000815180845261079381602086016020860161074b565b601f01601f19169290920160200192915050565b6020815260006107ba602083018461077b565b9392505050565b6000602082840312156107d357600080fd5b5035919050565b600080602083850312156107ed57600080fd5b823567ffffffffffffffff8082111561080557600080fd5b818501915085601f83011261081957600080fd5b81358181111561082857600080fd5b8660208260051b850101111561083d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156108a457603f1988860301845261089285835161077b565b94509285019290850190600101610876565b5092979650505050505050565b600181811c908216806108c557607f821691505b6020821081036108e557634e487b7160e01b600052602260045260246000fd5b50919050565b600083516108fd81846020880161074b565b83519083019061091181836020880161074b565b01949350505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161096e5761096e610946565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261099a5761099a610975565b500490565b6000828210156109b1576109b1610946565b500390565b6000826109c5576109c5610975565b500690565b600082198211156109dd576109dd610946565b50019056fea26469706673582212206b699a61f67d8b0ba84a0d207aba2c3388b5043dc7780fdd9879fd025fd41ce064736f6c634300080f0033";

export class ERC1155Metadata__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Metadata> {
    return super.deploy(overrides || {}) as Promise<ERC1155Metadata>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Metadata {
    return super.attach(address) as ERC1155Metadata;
  }
  connect(signer: Signer): ERC1155Metadata__factory {
    return super.connect(signer) as ERC1155Metadata__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MetadataInterface {
    return new utils.Interface(_abi) as ERC1155MetadataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Metadata {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Metadata;
  }
}
