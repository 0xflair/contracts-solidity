/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DiamondLoupe, DiamondLoupeInterface } from "../DiamondLoupe";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106c5806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806352ef6b2c146100515780637a0ed6271461006f578063adfca15e14610084578063cdffacc6146100a4575b600080fd5b610059610126565b6040516100669190610490565b60405180910390f35b6100776101ab565b604051610066919061053a565b6100976100923660046105b7565b61039d565b60405161006691906105e7565b61010e6100b23660046105fa565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c60205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610066565b606060007fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600281018054604080516020808402820181019092528281529394508301828280156101a057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610182575b505050505091505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e546060907fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c908067ffffffffffffffff81111561020b5761020b61063c565b60405190808252806020026020018201604052801561025157816020015b6040805180820190915260008152606060208201528152602001906001900390816102295790505b50925060005b8181101561039757600083600201828154811061027657610276610652565b9060005260206000200160009054906101000a90046001600160a01b03169050808583815181106102a9576102a9610652565b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561035d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001906004019060208260030104928301926001038202915080841161030a5790505b505050505085838151811061037457610374610652565b60200260200101516020018190525050808061038f90610668565b915050610257565b50505090565b6001600160a01b03811660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d602090815260409182902080548351818402810184019094528084526060937fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c939092919083018282801561048357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104305790505b5050505050915050919050565b6020808252825182820181905260009190848201906040850190845b818110156104d15783516001600160a01b0316835292840192918401916001016104ac565b50909695505050505050565b600081518084526020808501945080840160005b8381101561052f5781517fffffffff0000000000000000000000000000000000000000000000000000000016875295820195908201906001016104f1565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156105a957888303603f19018552815180516001600160a01b03168452870151878401879052610596878501826104dd565b9588019593505090860190600101610561565b509098975050505050505050565b6000602082840312156105c957600080fd5b81356001600160a01b03811681146105e057600080fd5b9392505050565b6020815260006105e060208301846104dd565b60006020828403121561060c57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146105e057600080fd5b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60006001820161068857634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220956854b6a36937cc51d45b68549ced6d1e10b5ecc557b2b25cd11eda0e834a6464736f6c634300080f0033";

export class DiamondLoupe__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondLoupe> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupe>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondLoupe {
    return super.attach(address) as DiamondLoupe;
  }
  connect(signer: Signer): DiamondLoupe__factory {
    return super.connect(signer) as DiamondLoupe__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeInterface {
    return new utils.Interface(_abi) as DiamondLoupeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupe {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupe;
  }
}
